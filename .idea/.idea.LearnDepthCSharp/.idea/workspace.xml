<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BuildServerSettings">
    <option name="LOGIN" value="" />
    <option name="SERVER_URL" value="http://buildserver" />
    <option name="REMEMBER_ME" value="true" />
    <option name="USE_IDEA_PROXY_SETTINGS" value="true" />
    <option name="INSPECTIONS_BUILD_TYPE_IDS" />
    <option name="DUPLICATES_BUILD_TYPE_IDS" />
    <option name="COVERAGE_SETTINGS" />
    <option name="TEST_STATUS_ENABLED" value="true" />
    <option name="TEST_STATUS_SHOW_SUCCESSFUL" value="false" />
    <option name="POSTPONE_SUITABLE_CONFIGURATIONS_SEARCH" value="false" />
    <option name="ARTIFACTS_BUILD_TYPE_IDS" />
    <option name="PERFORM_COMMIT_IF_SUCCESSFUL" value="true" />
    <option name="PERFORM_COMMIT_IF_NO_NEW_FAILED_TESTS" value="false" />
    <option name="REQUEST_CONFIRMATON" value="false" />
    <option name="PRE_TESTED_COMMIT" value="true" />
    <option name="FILTER_BY_STATUS" value="false" />
    <option name="FILTER_MARKED_AS_FIXED" value="false" />
    <option name="SHOW_CLOSE_PROMPT" value="true" />
    <option name="TOOL_WINDOW_SELECTED_CONTENT_INDEX" value="0" />
    <option name="FILTER_BY_CURRENT_PROJECT" value="true" />
    <treeState key="project">
      <selectedPath>
        <pathElement>
          <option name="myNodeId" value="helperText" />
          <option name="myNodeType" value="jetbrains.buildServer.tree.descriptors.LinkedTextDescriptor" />
        </pathElement>
      </selectedPath>
    </treeState>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ea2cc788-b934-4141-9def-3714462f2aa3" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/WPF/UserControlTemplate/TreeViewComposite.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/WPF/WPF.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/WPF/WPF.csproj" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_DATA_SOURCES" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
    <option name="HIDDEN_KINDS">
      <set />
    </option>
    <expand />
    <select />
  </component>
  <component name="FUSProjectUsageTrigger">
    <session id="2047851407">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="1" />
          <entry key="project.open.time.35" value="1" />
          <entry key="project.opened" value="1" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="cs" value="9" />
          <entry key="xaml" value="4" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="C#" value="9" />
          <entry key="XAML" value="4" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="cs" value="1" />
          <entry key="txt" value="23" />
          <entry key="xaml" value="72" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="C#" value="1" />
          <entry key="PLAIN_TEXT" value="23" />
          <entry key="XAML" value="72" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FavoritesManager">
    <favorites_list name="LearnDepthCSharp" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/WPF/DepProperty/DepPropertyBase.cs">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="224">
              <caret line="20" column="11" selection-start-line="20" selection-start-column="11" selection-end-line="20" selection-end-column="11" />
              <folding>
                <marker date="1544599108327" expanded="false" signature="6:164" ph="..." />
                <marker date="1544599108327" expanded="true" signature="179:1062" ph="{...}" />
                <marker date="1544599108327" expanded="true" signature="186:289" ph="/// 这个类型不是一个控件类型，它是一个普通类型; ... " />
                <marker date="1544599108327" expanded="true" signature="334:1060" ph="{...}" />
                <marker date="1544599108327" expanded="true" signature="349:474" ph="/* 一个依赖属性，这个属性的数值依赖于其他对象的属性; ... */" />
                <marker date="1544599108327" expanded="true" signature="706:834" ph="{...}" />
                <marker date="1544599108327" expanded="true" signature="970:1053" ph="{...}" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/WPF/EventRoute/BtnBase.cs">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-192">
              <folding>
                <marker date="1544713487029" expanded="false" signature="6:196" ph="..." />
                <marker date="1544713487029" expanded="true" signature="222:1814" ph="{...}" />
                <marker date="1544713487029" expanded="true" signature="229:314" ph="/// 自定义路由事件上报的参数; ... " />
                <marker date="1544713487029" expanded="true" signature="367:527" ph="{...}" />
                <marker date="1544713487029" expanded="true" signature="533:703" ph="/// 自定义一个Button按钮，这个按钮支持自定义的路由事件; ... " />
                <marker date="1544713487029" expanded="true" signature="733:1812" ph="{...}" />
                <marker date="1544713487029" expanded="true" signature="748:1018" ph="/* 一个路由事件静态实例; ... */" />
                <marker date="1544713487029" expanded="true" signature="1298:1450" ph="{...}" />
                <marker date="1544713487029" expanded="true" signature="1460:1552" ph="/* 为什么在Button已经有Click事件的前提下，重写了OnClick事件呢~？ ... */" />
                <marker date="1544713487029" expanded="true" signature="1594:1806" ph="{...}" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/WPF/UserControlTemplate/SearchTextBox.cs">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="320">
              <caret line="26" column="54" selection-start-line="26" selection-start-column="54" selection-end-line="26" selection-end-column="54" />
              <folding>
                <marker date="1544943185656" expanded="false" signature="6:168" ph="..." />
                <marker date="1544943185656" expanded="true" signature="203:957" ph="{...}" />
                <marker date="1544943185656" expanded="true" signature="210:288" ph="/// 负责搜索的Text输入框; ... " />
                <marker date="1544943185656" expanded="true" signature="322:955" ph="{...}" />
                <marker date="1544943185656" expanded="true" signature="493:949" ph="{...}" />
                <marker date="1544943185656" expanded="true" signature="764:893" ph="{...}" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/WPF/UserControlTemplate/TreeViewComposite.xaml">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="176">
              <caret line="11" column="14" selection-start-line="11" selection-start-column="14" selection-end-line="11" selection-end-column="14" />
              <folding>
                <marker date="1544975846082" expanded="true" signature="0:1132" ph="&lt;&lt;Grid&gt;&#10;        &lt;!-- 这是一个常规的属性结构 --&gt;&#10;        &lt;TreeView x:Name=&quot;tv_composite&quot;&gt;&#10;            &lt;TreeView.ItemTemplate&gt;&#10;                &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                    &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                        &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                    &lt;/StackPanel&gt;&#10;                &lt;/HierarchicalDataTemplate&gt;&#10;            &lt;/TreeView.ItemTemplate&gt;&#10;        &lt;/TreeView&gt;&#10;    &lt;/Grid&gt;.../&gt;" />
                <marker date="1544975846082" expanded="true" signature="575:1117" ph="&lt;&lt;TreeView x:Name=&quot;tv_composite&quot;&gt;&#10;            &lt;TreeView.ItemTemplate&gt;&#10;                &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                    &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                        &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                    &lt;/StackPanel&gt;&#10;                &lt;/HierarchicalDataTemplate&gt;&#10;            &lt;/TreeView.ItemTemplate&gt;&#10;        &lt;/TreeView&gt;.../&gt;" />
                <marker date="1544975846082" expanded="true" signature="619:1105" ph="&lt;&lt;TreeView.ItemTemplate&gt;&#10;                &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                    &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                        &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                    &lt;/StackPanel&gt;&#10;                &lt;/HierarchicalDataTemplate&gt;&#10;            &lt;/TreeView.ItemTemplate&gt;.../&gt;" />
                <marker date="1544975846082" expanded="true" signature="664:1085" ph="&lt;&lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                    &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                        &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                    &lt;/StackPanel&gt;&#10;                &lt;/HierarchicalDataTemplate&gt;.../&gt;" />
                <marker date="1544975846082" expanded="true" signature="704:1048" ph="&lt;&lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                        &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                    &lt;/StackPanel&gt;.../&gt;" />
                <marker date="1544975846082" expanded="true" signature="830:1004" ph="&lt;&lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;.../&gt;" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/WPF/MainWindow.xaml.cs">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="170">
              <caret line="854" lean-forward="true" selection-start-line="854" selection-end-line="854" />
              <folding>
                <marker date="1544974951108" expanded="false" signature="6:607" ph="..." />
                <marker date="1544974951108" expanded="true" signature="622:43293" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="629:692" ph="/// MainWindow.xaml 的交互逻辑; ... " />
                <marker date="1544974951108" expanded="true" signature="737:43291" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="1770:1961" ph="/// RouteCommand的作用是; ... " />
                <marker date="1544974951108" expanded="true" signature="2116:3455" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="3264:3329" ph="/* WPF中的ItemsSource是可以使用LINQ进行查询筛选的; ... */" />
                <marker date="1544974951108" expanded="false" signature="3473:4755" ph="纯前端操作" />
                <marker date="1544974951108" expanded="true" signature="3495:3559" ph="/// WPF可以实现简单的绘图功能; ... " />
                <marker date="1544974951108" expanded="true" signature="3594:4049" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="4058:4204" ph="/// 当ListBox控件选择发生变化时; ... " />
                <marker date="1544974951108" expanded="true" signature="4297:4408" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="4479:4736" ph="{...}" />
                <marker date="1544974951108" expanded="false" signature="4765:8831" ph="Binding的基本使用方法" />
                <marker date="1544974951108" expanded="true" signature="4796:4861" ph="/// 有关于Binding的基础原理; ... " />
                <marker date="1544974951108" expanded="true" signature="4905:5565" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="4928:5013" ph="/* Binding可以形象比喻成UI元素和逻辑对象之间的高速公路\桥梁; ... */" />
                <marker date="1544974951108" expanded="true" signature="5575:5639" ph="/// 初始化实验数据Persons; ... " />
                <marker date="1544974951108" expanded="true" signature="5674:6239" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="6039:6202" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="6081:6188" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="6249:6311" ph="/// WPF控件关联类型中的属性 ... " />
                <marker date="1544974951108" expanded="true" signature="6352:7181" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="6375:6517" ph="/* _____________________________________________________________以下是使用Binding关联XAML和C##属性的实验 ... */" />
                <marker date="1544974951108" expanded="true" signature="7055:7169" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="7191:7253" ph="/// WPF控件关联类型中的方法 ... " />
                <marker date="1544974951108" expanded="true" signature="7294:8812" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="7317:7457" ph="/* _____________________________________________________________以下是使用Binding关联XAML和C##命令的实验 ... */" />
                <marker date="1544974951108" expanded="true" signature="7817:8175" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="8307:8665" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="8756:8800" ph="{...}" />
                <marker date="1544974951108" expanded="false" signature="8849:29518" ph="有关DagaGrid控件的使用方法" />
                <marker date="1544974951108" expanded="true" signature="8883:8974" ph="/// DagaGrid最简单的用法，将一个容器中的内容添加到一个DataGrid控件当中; ... " />
                <marker date="1544974951108" expanded="true" signature="9023:9153" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="9163:9231" ph="/// 向DataGrid当中添加对应的事件; ... " />
                <marker date="1544974951108" expanded="true" signature="9283:10894" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="10904:11045" ph="/// 事件一：当单元给被编辑时; ... " />
                <marker date="1544974951108" expanded="true" signature="11155:11510" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="11520:11663" ph="/// 事件二：单元格选择出现变化时; ... " />
                <marker date="1544974951108" expanded="true" signature="11771:11884" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="11894:12049" ph="/// 事件三：DataGrid表格点击单元格获取焦点的事件; ... " />
                <marker date="1544974951108" expanded="true" signature="12139:12253" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="12263:12406" ph="/// 事件四：鼠标经过这个单元格时; ... " />
                <marker date="1544974951108" expanded="true" signature="12496:13450" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="12522:13300" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="12590:13286" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="13100:13268" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="13332:13427" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="13460:13633" ph="/// 事件五：鼠标选中事件; ... " />
                <marker date="1544974951108" expanded="true" signature="13729:14602" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="13755:14491" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="13860:14477" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="14146:14459" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="14238:14437" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="14524:14591" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="14612:14792" ph="/// 事件六：鼠标左键按下的事件; ... " />
                <marker date="1544974951108" expanded="true" signature="14898:15221" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="15239:15435" ph="/// 事件七：鼠标进入整个DataGrid表格后就会触发; ... " />
                <marker date="1544974951108" expanded="true" signature="15547:15843" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="15853:15996" ph="/// 事件八：当单元格被双击的时候; ... " />
                <marker date="1544974951108" expanded="true" signature="16099:16413" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="16423:16560" ph="/// 接收鼠标拖拽事件; ... " />
                <marker date="1544974951108" expanded="true" signature="16635:16873" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="16883:17011" ph="///  ... " />
                <marker date="1544974951108" expanded="true" signature="17087:17258" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="17276:17354" ph="/// 同一个数据源可以显示到两个不同的DataGrid控件当中; ... " />
                <marker date="1544974951108" expanded="true" signature="17399:17554" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="17564:17668" ph="/// 为一个表格动态添加列以及内容; ... " />
                <marker date="1544974951108" expanded="true" signature="17718:26946" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="17741:17882" ph="/* ________________________________________________________________________________以下是通过简单的生成 ... */" />
                <marker date="1544974951108" expanded="true" signature="17923:18435" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="18010:18120" ph="/* 向单元格内动态添加属性及其; ... */" />
                <marker date="1544974951108" expanded="true" signature="18515:18791" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="19471:26850" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="19601:20105" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="19802:19952" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="20137:20641" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="20338:20488" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="20673:21178" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="20875:21025" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="21296:26835" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="21575:21722" ph="/* ______________________________________________________________________________________________________________ ... */" />
                <marker date="1544974951108" expanded="true" signature="21771:26817" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="21885:23321" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="23422:25994" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="23729:24106" ph="/* 当单元格被编辑的时候; ... */" />
                <marker date="1544974951108" expanded="true" signature="26035:26394" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="26435:26794" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="26964:27126" ph="/// 普通只显示字符类型的DynamicDataGrid的正在被编辑事件; ... " />
                <marker date="1544974951108" expanded="true" signature="27233:27663" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="27673:27815" ph="/// 当单元格失去鼠标焦点的时候; ... " />
                <marker date="1544974951108" expanded="true" signature="27914:27947" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="27957:28098" ph="/// DataGrid的模拟数据 ... " />
                <marker date="1544974951108" expanded="true" signature="28166:29499" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="28397:29169" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="28470:29155" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="28725:29071" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="29257:29487" ph="{...}" />
                <marker date="1544974951108" expanded="false" signature="29528:31224" ph="有关Treeview以及解析XML" />
                <marker date="1544974951108" expanded="true" signature="29622:30100" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="29795:29886" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="30004:30090" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="30172:30356" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="30366:30444" ph="/// 构建一个组合模式的树形结构，并显示在Treeview当中; ... " />
                <marker date="1544974951108" expanded="true" signature="30489:31196" ph="{...}" />
                <marker date="1544974951108" expanded="false" signature="31234:35646" ph="有关路由事件、依赖属性和命令" />
                <marker date="1544974951108" expanded="true" signature="31265:31332" ph="/// 有关路由事件和依赖属性在这里初始化; ... " />
                <marker date="1544974951108" expanded="true" signature="31384:33181" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="31407:31487" ph="/* 路由事件，在最外层的Grid可以收到内层Button发出的Click事件; ... */" />
                <marker date="1544974951108" expanded="true" signature="31622:32712" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="31896:31962" ph="/* ————————依赖属性————————————; ... */" />
                <marker date="1544974951108" expanded="true" signature="32522:32584" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="32892:33168" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="32923:33154" ph="/* Console.WriteLine(&quot;The &quot; + sender.GetType() + &quot; Receive a Button Event and the Button is &quot; + (e.OriginalSource ... */" />
                <marker date="1544974951108" expanded="true" signature="33191:33340" ph="/// 初始化命令; ... " />
                <marker date="1544974951108" expanded="true" signature="33387:34715" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="33729:34025" ph="/* this.CommandButton.CommandTarget = this.CommandTextBox2; ... */" />
                <marker date="1544974951108" expanded="true" signature="34725:34992" ph="/// 这个附加在Button所在控件树之上的StackPanel控件上的监听线程; ... " />
                <marker date="1544974951108" expanded="true" signature="35071:35334" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="35145:35211" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="35228:35293" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="35410:35627" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="35465:35548" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="35656:35784" ph="///  ... " />
                <marker date="1544974951108" expanded="true" signature="35853:35937" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="35947:36093" ph="/// 一个进度条，使用线程池进行后台处理; ... " />
                <marker date="1544974951108" expanded="true" signature="36172:36881" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="36891:37087" ph="/// BackgroundWorker后台处理的入口，通过调用RunWorkerAsync进入; ... " />
                <marker date="1544974951108" expanded="true" signature="37180:37665" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="37322:37654" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="37540:37640" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="37675:37837" ph="/// BackgroundWorker后台处理发生变化的时候，调用该函数; ... " />
                <marker date="1544974951108" expanded="true" signature="37948:38019" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="38029:38178" ph="/// BackgroundWorker取消事件; ... " />
                <marker date="1544974951108" expanded="true" signature="38256:38315" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="38325:38477" ph="/// 当BackgroundWorker后台处理完成后 ... " />
                <marker date="1544974951108" expanded="true" signature="38572:38645" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="38718:39254" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="39046:39136" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="39153:39244" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="39327:39970" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="39762:39852" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="39869:39960" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="40043:40564" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="40356:40446" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="40463:40554" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="40638:41131" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="41202:41657" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="41555:41647" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="41723:41939" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="42006:42138" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="42203:42813" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="42284:42472" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="42536:42803" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="42886:42993" ph="{...}" />
                <marker date="1544974951108" expanded="true" signature="43065:43284" ph="{...}" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>treeview</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/TrySomeInterface/Iterator_Try.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/WPF/DepProperty/DepPropertyBase.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/WPF/MainWindow.xaml.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/GenericCSharp/ClassFolder/Generic.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/WPF/EventRoute/BtnBase.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/WPF/UserControlTemplate/TreeViewComposite.xaml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/WPF/MainWindow.xaml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/WPF/UserControlTemplate/SearchTextBox.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/WPF/UserControlTemplate/TreeViewComposite.xaml.cs" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/WPF/MainWindow.xaml.cs" />
        <option value="$PROJECT_DIR$/WPF/DepProperty/DepPropertyBase.cs" />
        <option value="$PROJECT_DIR$/WPF/UserControlTemplate/TreeViewComposite.xaml.cs" />
        <option value="$PROJECT_DIR$/WPF/UserControlTemplate/TreeViewComposite.xaml" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="320" />
    <option name="y" value="130" />
    <option name="width" value="1920" />
    <option name="height" value="780" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator currentView="SolutionExplorer" proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="SolutionExplorer">
        <subPane>
          <expand>
            <path>
              <item name="Project" type="784c90a0:SolutionExplorerRootNode" />
              <item name="LearnDepthCSharp" type="24d0babc:SolutionExplorerModelNode" />
            </path>
            <path>
              <item name="Project" type="784c90a0:SolutionExplorerRootNode" />
              <item name="LearnDepthCSharp" type="24d0babc:SolutionExplorerModelNode" />
              <item name="WPF" type="24d0babc:SolutionExplorerModelNode" />
            </path>
            <path>
              <item name="Project" type="784c90a0:SolutionExplorerRootNode" />
              <item name="LearnDepthCSharp" type="24d0babc:SolutionExplorerModelNode" />
              <item name="WPF" type="24d0babc:SolutionExplorerModelNode" />
              <item name="UserControlTemplate" type="24d0babc:SolutionExplorerModelNode" />
            </path>
          </expand>
          <select />
        </subPane>
        <option name="show-all-files" value="false" />
      </pane>
      <pane id="FileSystemExplorer" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="Rider.DefaultBreakpoints.AreToggled" value="true" />
    <property name="Rider.ProjectViewActivator.IsNotFirstRun" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected=".NET Project.WPF">
    <configuration name="Default" type="DotNetProject" factoryName=".NET Project">
      <option name="EXE_PATH" value="" />
      <option name="PROGRAM_PARAMETERS" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="PROJECT_PATH" value="" />
      <option name="PROJECT_EXE_PATH_TRACKING" value="1" />
      <option name="PROJECT_ARGUMENTS_TRACKING" value="1" />
      <option name="PROJECT_WORKING_DIRECTORY_TRACKING" value="1" />
      <option name="PROJECT_KIND" value="None" />
      <option name="PROJECT_TFM" value="" />
      <method v="2">
        <option name="Build" enabled="true" />
      </method>
    </configuration>
    <configuration name="WPF" type="DotNetProject" factoryName=".NET Project" temporary="true">
      <option name="EXE_PATH" value="$PROJECT_DIR$/WPF/bin/Debug/WPF.exe" />
      <option name="PROGRAM_PARAMETERS" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/WPF/bin/Debug" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="PROJECT_PATH" value="$PROJECT_DIR$/WPF/WPF.csproj" />
      <option name="PROJECT_EXE_PATH_TRACKING" value="1" />
      <option name="PROJECT_ARGUMENTS_TRACKING" value="1" />
      <option name="PROJECT_WORKING_DIRECTORY_TRACKING" value="1" />
      <option name="PROJECT_KIND" value="Console" />
      <option name="PROJECT_TFM" value=".NETFramework,Version=v4.5.2" />
      <method v="2">
        <option name="Build" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue=".NET Project.Default" />
      <item itemvalue=".NET Project.WPF" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue=".NET Project.WPF" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ea2cc788-b934-4141-9def-3714462f2aa3" name="Default Changelist" comment="" />
      <created>1544974857275</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1544974857275</updated>
      <workItem from="1544974875758" duration="1039000" />
    </task>
    <task id="LOCAL-00001" summary="update 2018-12-16">
      <created>1544975492661</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1544975492661</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="1039000" />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="2576" height="1056" extended-state="6" />
    <layout>
      <window_info id="Favorites" order="0" sideWeight="0.50074077" side_tool="true" weight="0.13036565" />
      <window_info content_ui="combo" id="Project" order="1" sideWeight="0.49925926" visible="true" weight="0.13036565" />
      <window_info id="Structure" order="2" sideWeight="0.50074077" side_tool="true" weight="0.13036565" />
      <window_info anchor="bottom" id="NuGet" order="0" weight="0.32899022" />
      <window_info anchor="bottom" id="Docker" order="1" show_stripe_button="false" />
      <window_info anchor="bottom" id="Database Changes" order="2" show_stripe_button="false" />
      <window_info anchor="bottom" id="Version Control" order="3" show_stripe_button="false" />
      <window_info anchor="bottom" id="Terminal" order="4" weight="0.267101" />
      <window_info anchor="bottom" id="Unit Tests" order="5" weight="0.32899022" />
      <window_info anchor="bottom" id="TeamCity" order="6" weight="0.32899022" />
      <window_info anchor="bottom" id="Event Log" order="7" side_tool="true" />
      <window_info anchor="bottom" id="Build" order="8" weight="0.32899022" />
      <window_info anchor="bottom" id="Message" order="9" />
      <window_info anchor="bottom" id="Find" order="10" />
      <window_info anchor="bottom" id="Run" order="11" weight="0.32899022" />
      <window_info anchor="bottom" id="Debug" order="12" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="13" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="14" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="15" weight="0.32899022" />
      <window_info anchor="bottom" id="XAML Preview" order="16" visible="true" weight="0.13137893" />
      <window_info anchor="right" id="Errors In Solution" order="0" />
      <window_info anchor="right" id="Database" order="1" weight="0.3298887" />
      <window_info anchor="right" id="Unit Tests Coverage" order="2" weight="0.3298887" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="3" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="4" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="5" weight="0.25" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="UnityProjectConfiguration" hasMinimizedUI="null" />
  <component name="UnityUnitTestConfiguration" currentTestLauncher="NUnit" />
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="update 2018-12-16" />
    <option name="LAST_COMMIT_MESSAGE" value="update 2018-12-16" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" suspend="NONE" type="DotNet Exception Breakpoints">
          <properties exception="System.Threading.ThreadAbortException" displayValue="System.Threading.ThreadAbortException" />
          <option name="timeStamp" value="1" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/GenericCSharp/ClassFolder/Generic.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1056">
          <caret line="71" column="12" lean-forward="true" selection-start-line="71" selection-start-column="12" selection-end-line="71" selection-end-column="12" />
          <folding>
            <marker date="1535386063850" expanded="false" signature="6:141" ph="..." />
            <marker date="1535386063850" expanded="true" signature="165:1630" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="204:342" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="294:336" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="395:408" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="436:773" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="556:577" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="642:663" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="704:767" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="809:1294" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="953:1023" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="1065:1288" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="1348:1628" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="1435:1523" ph="{...}" />
            <marker date="1535386063850" expanded="true" signature="1553:1622" ph="{...}" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/TrySomeInterface/Iterator_Try.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="240">
          <caret line="20" column="22" selection-start-line="20" selection-start-column="22" selection-end-line="20" selection-end-column="22" />
          <folding>
            <marker date="1535386063916" expanded="false" signature="6:141" ph="..." />
            <marker date="1535386063916" expanded="true" signature="169:612" ph="{...}" />
            <marker date="1535386063916" expanded="true" signature="215:610" ph="{...}" />
            <marker date="1535386063916" expanded="true" signature="363:492" ph="/// 是IEnumerable接口包含的抽象行为; ... " />
            <marker date="1535386063916" expanded="true" signature="535:604" ph="{...}" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/WPF/EventRoute/BtnBase.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-192">
          <folding>
            <marker date="1544713487029" expanded="false" signature="6:196" ph="..." />
            <marker date="1544713487029" expanded="true" signature="222:1814" ph="{...}" />
            <marker date="1544713487029" expanded="true" signature="229:314" ph="/// 自定义路由事件上报的参数; ... " />
            <marker date="1544713487029" expanded="true" signature="367:527" ph="{...}" />
            <marker date="1544713487029" expanded="true" signature="533:703" ph="/// 自定义一个Button按钮，这个按钮支持自定义的路由事件; ... " />
            <marker date="1544713487029" expanded="true" signature="733:1812" ph="{...}" />
            <marker date="1544713487029" expanded="true" signature="748:1018" ph="/* 一个路由事件静态实例; ... */" />
            <marker date="1544713487029" expanded="true" signature="1298:1450" ph="{...}" />
            <marker date="1544713487029" expanded="true" signature="1460:1552" ph="/* 为什么在Button已经有Click事件的前提下，重写了OnClick事件呢~？ ... */" />
            <marker date="1544713487029" expanded="true" signature="1594:1806" ph="{...}" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/WPF/UserControlTemplate/TreeViewComposite.xaml.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="144">
          <caret line="9" column="9" lean-forward="true" selection-start-line="9" selection-start-column="9" selection-end-line="9" selection-end-column="9" />
          <folding>
            <marker date="1544975638284" expanded="true" signature="65:228" ph="{...}" />
            <marker date="1544975638284" expanded="true" signature="124:226" ph="{...}" />
            <marker date="1544975638284" expanded="true" signature="165:220" ph="{...}" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/WPF/UserControlTemplate/SearchTextBox.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="320">
          <caret line="26" column="54" selection-start-line="26" selection-start-column="54" selection-end-line="26" selection-end-column="54" />
          <folding>
            <marker date="1544943185656" expanded="false" signature="6:168" ph="..." />
            <marker date="1544943185656" expanded="true" signature="203:957" ph="{...}" />
            <marker date="1544943185656" expanded="true" signature="210:288" ph="/// 负责搜索的Text输入框; ... " />
            <marker date="1544943185656" expanded="true" signature="322:955" ph="{...}" />
            <marker date="1544943185656" expanded="true" signature="493:949" ph="{...}" />
            <marker date="1544943185656" expanded="true" signature="764:893" ph="{...}" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/WPF/DepProperty/DepPropertyBase.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="224">
          <caret line="20" column="11" selection-start-line="20" selection-start-column="11" selection-end-line="20" selection-end-column="11" />
          <folding>
            <marker date="1544599108327" expanded="false" signature="6:164" ph="..." />
            <marker date="1544599108327" expanded="true" signature="179:1062" ph="{...}" />
            <marker date="1544599108327" expanded="true" signature="186:289" ph="/// 这个类型不是一个控件类型，它是一个普通类型; ... " />
            <marker date="1544599108327" expanded="true" signature="334:1060" ph="{...}" />
            <marker date="1544599108327" expanded="true" signature="349:474" ph="/* 一个依赖属性，这个属性的数值依赖于其他对象的属性; ... */" />
            <marker date="1544599108327" expanded="true" signature="706:834" ph="{...}" />
            <marker date="1544599108327" expanded="true" signature="970:1053" ph="{...}" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/WPF/MainWindow.xaml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="719">
          <caret line="571" column="107" selection-start-line="571" selection-start-column="90" selection-end-line="571" selection-end-column="107" />
          <folding>
            <marker date="1544952190280" expanded="true" signature="0:39007" ph="&lt;&lt;Window.Resources&gt;&#10;&#10;        &lt;!-- 控件模板，可以自由进行组合 --&gt;&#10;        &lt;ControlTemplate x:Key=&quot;cTmp&quot;&gt;&#10;            &lt;StackPanel&gt;&#10;                &lt;TextBox x:Name=&quot;textBox1&quot; Margin=&quot;6&quot;/&gt;&#10;                &lt;TextBox x:Name=&quot;textBox2&quot; Margin=&quot;6,0&quot;/&gt;&#10;                &lt;TextBox x:Name=&quot;textBox3&quot; Margin=&quot;6&quot;/&gt;&#10;            &lt;/StackPanel&gt;&#10;        &lt;/ControlTemplate&gt;&#10;&#10;        &lt;!-- 一个在XAML当中用到的string实例 --&gt;&#10;        &lt;sys:String x:Key=&quot;BindingStatic&quot;&gt;关联静态资源以及圆角Style&lt;/sys:String&gt;&#10;&#10;        &lt;!-- 后边树形结构用到的数据 --&gt;&#10;        &lt;XmlDataProvider x:Key=&quot;xdp&quot; XPath=&quot;FileSystem/Folder&quot;&gt;&#10;            &lt;x:XData&gt;&#10;                &lt;FileSystem xmlns=&quot;&quot;&gt;&#10;                    &lt;Folder Name=&quot;Books&quot;&gt;&#10;                        &lt;Folder Name=&quot;Programming&quot;&gt;&#10;                            &lt;Folder Name=&quot;Windows&quot;&gt;&#10;                                &lt;Folder Name=&quot;WPF&quot;/&gt;&#10;                                &lt;Folder Name=&quot;MFC&quot;/&gt;&#10;                                &lt;Folder Name=&quot;Delphi&quot;/&gt;&#10;                            &lt;/Folder&gt;&#10;                        &lt;/Folder&gt;&#10;                        &lt;Folder Name=&quot;Tools&quot;&gt;&#10;                            &lt;Folder Name=&quot;Development&quot;/&gt;&#10;                            &lt;Folder Name=&quot;Designment&quot;/&gt;&#10;                            &lt;Folder Name=&quot;Players&quot;/&gt;&#10;                        &lt;/Folder&gt;&#10;                    &lt;/Folder&gt;&#10;                &lt;/FileSystem&gt;&#10;            &lt;/x:XData&gt;&#10;        &lt;/XmlDataProvider&gt;&#10;&#10;        &lt;SolidColorBrush x:Key=&quot;ProgressBar.Progress&quot; Color=&quot;##FFFFB025&quot;/&gt;&#10;        &lt;SolidColorBrush x:Key=&quot;ProgressBar.Background&quot; Color=&quot;##FFE6E6E6&quot;/&gt;&#10;        &lt;SolidColorBrush x:Key=&quot;ProgressBar.Border&quot; Color=&quot;##FFBCBCBC&quot;/&gt;&#10;        &lt;Style x:Key=&quot;ProgressBarStyle1&quot; TargetType=&quot;{x:Type ProgressBar}&quot;&gt;&#10;            &lt;Setter Property=&quot;Foreground&quot; Value=&quot;{StaticResource ProgressBar.Progress}&quot;/&gt;&#10;            &lt;Setter Property=&quot;Background&quot; Value=&quot;{StaticResource ProgressBar.Background}&quot;/&gt;&#10;            &lt;Setter Property=&quot;BorderBrush&quot; Value=&quot;{StaticResource ProgressBar.Border}&quot;/&gt;&#10;            &lt;Setter Property=&quot;BorderThickness&quot; Value=&quot;1&quot;/&gt;&#10;            &lt;Setter Property=&quot;Template&quot;&gt;&#10;                &lt;Setter.Value&gt;&#10;                    &lt;ControlTemplate TargetType=&quot;{x:Type ProgressBar}&quot;&gt;&#10;                        &lt;Grid x:Name=&quot;TemplateRoot&quot;&gt;&#10;                            &lt;VisualStateManager.VisualStateGroups&gt;&#10;                                &lt;VisualStateGroup x:Name=&quot;CommonStates&quot;&gt;&#10;                                    &lt;VisualState x:Name=&quot;Determinate&quot;/&gt;&#10;                                    &lt;VisualState x:Name=&quot;Indeterminate&quot;&gt;&#10;                                        &lt;Storyboard RepeatBehavior=&quot;Forever&quot;&gt;&#10;                                            &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;0.25&quot;/&gt;&#10;                                            &lt;/DoubleAnimationUsingKeyFrames&gt;&#10;                                            &lt;PointAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransformOrigin)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0&quot; Value=&quot;-0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;1.5,0.5&quot;/&gt;&#10;                                            &lt;/PointAnimationUsingKeyFrames&gt;&#10;                                        &lt;/Storyboard&gt;&#10;                                    &lt;/VisualState&gt;&#10;                                &lt;/VisualStateGroup&gt;&#10;                            &lt;/VisualStateManager.VisualStateGroups&gt;&#10;                            &lt;Border BorderBrush=&quot;{TemplateBinding BorderBrush}&quot; BorderThickness=&quot;{TemplateBinding BorderThickness}&quot; Background=&quot;{TemplateBinding Background}&quot;/&gt;&#10;                            &lt;Rectangle x:Name=&quot;PART_Track&quot;/&gt;&#10;                            &lt;Grid x:Name=&quot;PART_Indicator&quot; ClipToBounds=&quot;true&quot; HorizontalAlignment=&quot;Left&quot;&gt;&#10;                                &lt;Rectangle x:Name=&quot;Indicator&quot; Fill=&quot;{TemplateBinding Foreground}&quot;/&gt;&#10;                                &lt;Rectangle x:Name=&quot;Animation&quot; Fill=&quot;{TemplateBinding Foreground}&quot; RenderTransformOrigin=&quot;0.5,0.5&quot;&gt;&#10;                                    &lt;Rectangle.RenderTransform&gt;&#10;                                        &lt;TransformGroup&gt;&#10;                                            &lt;ScaleTransform/&gt;&#10;                                            &lt;SkewTransform/&gt;&#10;                                            &lt;RotateTransform/&gt;&#10;                                            &lt;TranslateTransform/&gt;&#10;                                        &lt;/TransformGroup&gt;&#10;                                    &lt;/Rectangle.RenderTransform&gt;&#10;                                &lt;/Rectangle&gt;&#10;                            &lt;/Grid&gt;&#10;                        &lt;/Grid&gt;&#10;                        &lt;ControlTemplate.Triggers&gt;&#10;                            &lt;Trigger Property=&quot;Orientation&quot; Value=&quot;Vertical&quot;&gt;&#10;                                &lt;Setter Property=&quot;LayoutTransform&quot; TargetName=&quot;TemplateRoot&quot;&gt;&#10;                                    &lt;Setter.Value&gt;&#10;                                        &lt;RotateTransform Angle=&quot;-90&quot;/&gt;&#10;                                    &lt;/Setter.Value&gt;&#10;                                &lt;/Setter&gt;&#10;                            &lt;/Trigger&gt;&#10;                            &lt;Trigger Property=&quot;IsIndeterminate&quot; Value=&quot;true&quot;&gt;&#10;                                &lt;Setter Property=&quot;Visibility&quot; TargetName=&quot;Indicator&quot; Value=&quot;Collapsed&quot;/&gt;&#10;                            &lt;/Trigger&gt;&#10;                        &lt;/ControlTemplate.Triggers&gt;&#10;                    &lt;/ControlTemplate&gt;&#10;                &lt;/Setter.Value&gt;&#10;            &lt;/Setter&gt;&#10;        &lt;/Style&gt;&#10;&#10;&#10;    &lt;/Window.Resources&gt; &lt;Grid&gt;&#10;        &lt;TabControl&gt;&#10;            &#10;            &lt;!-- 主要用来展示WPF的基础知识 --&gt;&#10;            &lt;TabItem Header=&quot;前端\路由事件\依赖属性\命令&quot;&gt;&#10;                &lt;Grid&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第一列：WPF基础知识--&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第二列：WPF高级知识，路由事件\依赖属性\命令--&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第三列：WPF如何解耦和前后端代码--&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;!-- WPF的纯前端交互处理 --&gt;&#10;                    &lt;DockPanel Grid.Column=&quot;0&quot; Margin=&quot;10,0,10,0&quot; x:Name=&quot;None_RouteEvent_DockPanel&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 使用Style对控件进行定制化，即所谓的CSS和Javascript --&gt;&#10;                            &lt;Border Grid.Row=&quot;0&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label routeevt:ButtonTime.ReportTime=&quot;RptTime&quot; x:Name=&quot;StyleWPF&quot;&gt;Style的用法:&lt;/Label&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource BlueButton}&quot; Margin=&quot;0,5&quot;&gt;蓝色按钮&lt;/Button&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource ButtonTrigger}&quot;&gt;蓝色按钮和触发事件&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- WPF还支持画线，画图 --&gt;&#10;                            &lt;Border Grid.Row=&quot;1&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label&gt;用WPF画图&lt;/Label&gt;&#10;                                    &lt;Canvas x:Name=&quot;canvas1&quot;&gt;&lt;/Canvas&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- 使用controlTemplate组合一个控件出来 --&gt;&#10;                            &lt;Border Grid.Row=&quot;2&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;在前端直接用ControlTemplate组合用户控件&lt;/Label&gt;&#10;                                    &lt;UserControl x:Name=&quot;uc&quot; Template=&quot;{StaticResource cTmp}&quot; Grid.Row=&quot;2&quot;/&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- 可以使用Binding关联一个静态Source，既然是静态Source，Path就使用.来代替（因为不用指定属性） --&gt;&#10;                            &lt;TextBox x:Name=&quot;tb&quot; Text=&quot;{Binding Path=., Source={StaticResource ResourceKey=BindingStatic}}&quot;  Style=&quot;{StaticResource tbstyle}&quot; Grid.Row=&quot;3&quot;/&gt;&#10;&#10;                            &lt;!-- 也可以使用Binding关联其他控件的属性 --&gt;&#10;                            &lt;Border Grid.Row=&quot;4&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;控件绑定前端元素：&lt;/Label&gt;&#10;                                    &lt;!-- 在控件中具有DependencyProperty能力的属性，才可以支持将Binding实例赋值到这个属性上 --&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}&quot; Width=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Slider x:Name=&quot;slider1&quot; Maximum=&quot;20&quot; Width=&quot;150&quot;&gt;&lt;/Slider&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                        &lt;/Grid&gt;&#10;&#10;                    &lt;/DockPanel&gt;&#10;&#10;                    &lt;!-- 路由事件和依赖属性 --&gt;&#10;                    &lt;DockPanel Grid.Column=&quot;1&quot; x:Name=&quot;DockPanel_RouteEvent&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 路由事件和依赖属性都在这里 --&gt;&#10;                            &lt;Grid x:Name=&quot;RouteEventGrid1&quot; Grid.Row=&quot;0&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                &#10;                                &lt;StackPanel x:Name=&quot;sp1&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                    &#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.RowDefinitions&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                                        &lt;!-- ！！不在timebutton的路由路径上，所以路由事件无法到达！！ --&gt;&#10;                                        &lt;StackPanel x:Name=&quot;sp2&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                        &lt;/StackPanel&gt;&#10;&#10;                                        &lt;routeevt:ButtonTime x:Name=&quot;timebutton&quot; Height=&quot;40&quot; Grid.Row=&quot;1&quot; Click=&quot;TimeButton_Click&quot; routeevt:ButtonTime.ReportTime=&quot;Button_Click2&quot;&gt;&#10;                                            我是一个从Button继承带有路由事件的按钮&#10;                                        &lt;/routeevt:ButtonTime&gt;&#10;&#10;                                    &lt;/Grid&gt;&#10;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;&#10;                            &lt;!-- WPF中的命令系统 --&gt;&#10;                            &lt;Grid Grid.Row=&quot;1&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Button x:Name=&quot;CommandButton&quot;&gt;清空命令(清空以上输入)&lt;/Button&gt;&#10;                                    &#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;                            &#10;                            &lt;!-- WPF中的命令系统二 --&gt;&#10;                            &lt;Grid Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel2&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox2&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;&#10;                            &lt;Grid Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&#10;                            &lt;/Grid&gt;&#10;                            &#10;                        &lt;/Grid&gt;&#10;                    &lt;/DockPanel&gt;&#10;&#10;                    &lt;!-- 所有都是自定义控件，看看控件解耦和之后，如何处理控件之间的关系 --&gt;&#10;                    &lt;DockPanel Grid.Column=&quot;2&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;180&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 搜索TextBox，更新下边的TreeView --&gt;&#10;                            &lt;Border BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;0,10,0,10&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;localui:SearchTextBox&gt;&lt;/localui:SearchTextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;&#10;                        &lt;/Grid&gt;&#10;                    &lt;/DockPanel&gt;&#10;&#10;                &lt;/Grid&gt;&#10;            &lt;/TabItem&gt;&#10;&#10;            &lt;TabItem Header=&quot;Binding专用&quot;&gt;&#10;&#10;                &lt;Grid&gt;&#10;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;350&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;400&quot;/&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;有关于Binding的本质：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingBase&quot;&gt;&lt;/Label&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel&quot; Content=&quot;{Binding Path=m_iA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;2&quot;&gt;&#10;                            &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联（静态属性）：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel2&quot; Content=&quot;{Binding Path=m_sA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;                    &lt;/Grid&gt;&#10;&#10;                &lt;/Grid&gt;&#10;            &lt;/TabItem&gt;&#10;&#10;            &lt;!-- 汇总各个控件的使用方法 --&gt;&#10;            &lt;TabItem x:Name=&quot;AllControlUsage&quot; Header=&quot;各类控件的使用&quot;&gt;&#10;&#10;                &lt;Grid&gt;&#10;                    &lt;!-- 总宽度1000 --&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;500&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;500&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;/&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;!-- 总高度800 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;170&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;!-- &#10;                            在此使用DataContext指定一个ClassA的一个实例，&#10;                            并且在该区域内的所有控件都能访问这个类实例的属性 &#10;                        --&gt;&#10;                        &lt;Border  BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;!-- 在Border范围内实例化了一个ClassA，名为class_a --&gt;&#10;                            &lt;Border.DataContext&gt;&#10;                                &lt;local:ClassA x:Name=&quot;class_a&quot;&gt;&lt;/local:ClassA&gt;&#10;                            &lt;/Border.DataContext&gt;&#10;&#10;                            &lt;!-- 指定了DataContext后，可以通过Binding的path关联实例对应的属性 --&gt;&#10;                            &lt;TreeView Name=&quot;tree&quot;&gt;&#10;                                &lt;TreeViewItem Header=&quot;Root&quot;&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding Path = m_A}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding m_B}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                &lt;/TreeViewItem&gt;&#10;                            &lt;/TreeView&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl（ListBox）类型的控件，使用ItemSource进行Binding --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox x:Name=&quot;PersonID&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList&quot; Margin=&quot;0,5&quot;&gt;&#10;                                    &lt;ListBox.ItemTemplate&gt;&#10;                                        &lt;DataTemplate&gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_ID}&quot; Width=&quot;30&quot;/&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_Name}&quot; Width=&quot;60&quot;/&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/DataTemplate&gt;&#10;                                    &lt;/ListBox.ItemTemplate&gt;&#10;                                &lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl（ListBox）类型的控件，使用ItemSource进行Binding --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;2&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox Text =&quot;{Binding m_ID}&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList2&quot; Margin=&quot;0,5&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl(ListBox)控件，使用一个List&lt;Person&gt;绑定 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;3&quot; Margin=&quot;5,5,5,5&quot; &gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;!-- &#10;                                     每个控件都有自己的DataContext&#10;                                     DataContext可以指定为某一个区域 &#10;                                     这样使用DataContext，也相当于实例化了一个Student对象&#10;                                --&gt;&#10;                                &lt;StackPanel.DataContext&gt;&#10;                                    &lt;local:Student x:Name=&quot;stus&quot;&gt;&lt;/local:Student&gt;&#10;                                &lt;/StackPanel.DataContext&gt;&#10;                                &lt;ListBox x:Name=&quot;StuList&quot; ItemsSource=&quot;{Binding m_StuList}&quot; DisplayMemberPath=&quot;m_Name&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 一个实时更新的输入框，绑定函数返回值的例子 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;4&quot; Margin=&quot;5,5,5,5&quot; &gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcX&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcY&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcRes&quot;&gt;&lt;/TextBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 这个是学习依赖属性用的，DP暂时没学透彻呢 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;5&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;text1&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;Button x:Name=&quot;GetInputButton&quot; Content=&quot;获取输入框内容&quot; Click=&quot;GetDepProperty&quot; &gt;&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;&#10;                    &lt;!-- 这一列涉及控件DataGrid的使用方法 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;1&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;30&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;30&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;120&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;120&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Label Grid.Row=&quot;0&quot;&gt;这是一个DataGrid最基础的实例&lt;/Label&gt;&#10;                        &lt;!-- 在MSDN中，一个最为基础的DataGrid的使用方法 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid x:Name=&quot;CustomerDataGrid&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot;  &gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding FirstName}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column2&quot; Binding=&quot;{Binding LastName}&quot; /&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column3&quot; Binding=&quot;{Binding Email}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column4&quot; Binding=&quot;{Binding IsMember}&quot; /&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column5&quot; Binding=&quot;{Binding cell.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Label Grid.Row=&quot;2&quot;&gt;这是一个带有多个事件的DataGrid&lt;/Label&gt;&#10;                        &lt;!-- 对DataGrid进行更加丰富的操作，比如单元格编辑事件等等 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;3&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid x:Name=&quot;CustomerDataGrid_AddEvent&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot; SelectionUnit=&quot;Cell&quot; SelectionMode=&quot;Single&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding column1.name}&quot;/&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column2&quot; Binding=&quot;{Binding column2.name}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column3&quot; Binding=&quot;{Binding column3.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 触发单元格自动刷新 --&gt;&#10;                        &lt;StackPanel Grid.Row=&quot;4&quot;&gt;&#10;                            &lt;Label&gt;以下使用了数据模板为DataGrid丰富内容，并实现自动刷新功能&lt;/Label&gt;&#10;                            &lt;Button Click=&quot;Button_Click&quot;&gt;开始刷新DataGrid&lt;/Button&gt;&#10;                        &lt;/StackPanel&gt;&#10;&#10;                        &lt;!-- 使用DataTemplate对.NET自带的DataGrid进行定制化 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;5&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;!-- 一个数据模板，使用在后边DataGrid的最后一个单元格 --&gt;&#10;                            &lt;Border.Resources&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellEditingTemplate&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.ColumnDefinitions&gt;&#10;                                            &lt;ColumnDefinition/&gt;&#10;                                            &lt;ColumnDefinition Width=&quot;15&quot;/&gt;&#10;                                        &lt;/Grid.ColumnDefinitions&gt;&#10;                                        &lt;TextBlock Grid.Column=&quot;0&quot; Text=&quot;{Binding m_content}&quot;/&gt;&#10;                                        &lt;Button Grid.Column=&quot;1&quot; Content=&quot;...&quot; Command=&quot;{Binding ShowCommand}&quot;/&gt;&#10;                                    &lt;/Grid&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;!-- 数据模板对应的类型是MessageModel --&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellDropBox&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;ComboBox ItemsSource=&quot;{Binding m_content_detail}&quot; SelectedIndex=&quot;0&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;DataTemplate x:Key=&quot;cellTextBlock&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;TextBlock Text=&quot;{Binding m_content_detail}&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                            &lt;/Border.Resources&gt;&#10;&#10;                            &lt;!-- 表格，用来显示MessageVM中所有的消息,使用ItemsSource指定数据源 --&gt;&#10;                            &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;编号&quot; Binding=&quot;{Binding m_No}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;时间戳&quot; Binding=&quot;{Binding m_time}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息内容&quot; CellTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot; &#10;                                                            CellEditingTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息详情&quot; CellTemplate=&quot;{StaticResource ResourceKey=cellDropBox}&quot;/&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 表格，和上边的表格一样，但是只是应用了usercontrol封装了一下 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;6&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;localui:MessageDataGrid x:Name=&quot;MsgDataGrid2&quot;&gt;&lt;/localui:MessageDataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- &#10;                             这是一个使用Dynamic动态类型关联的DataGrid，&#10;                             这样一来，如果有非常多的同类型的表格，就不用为每个表格再去手工建立数据模型了&#10;                        --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;7&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid_AutoGenCol&quot;/&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 一个用于接收DataGrid空间拖拽事件的实验控件 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;8&quot;&gt;&#10;                            &lt;Label x:Name=&quot;ReceiveDataLabel&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;&#10;                    &lt;!-- !!综合使用,比较实用!!DataGrid的应用实例 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;2&quot;&gt;&#10;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;                        &lt;!-- &#10;                            Dynamic类型绑定DataGrid的同时，丰富单元格内显示类型&#10;                        --&gt;&#10;                        &lt;DataGrid Grid.Row=&quot;0&quot; AutoGenerateColumns=&quot;False&quot; SelectionMode=&quot;Single&quot; x:Name=&quot;MsgDataGrid_AutoGenColandCellMore&quot; &#10;                                  ItemsSource=&quot;{Binding Path=.}&quot; SelectionUnit=&quot;Cell&quot;/&gt;&#10;&#10;                        &lt;!--&#10;                            将Dynamic动态表封装成用户控件&#10;                        --&gt;&#10;                        &lt;localui:DyDataGrid x:Name=&quot;DynamicDataGrid&quot; Grid.Row=&quot;1&quot; &gt;&lt;/localui:DyDataGrid&gt;&#10;&#10;                        &lt;ScrollViewer Grid.Row=&quot;3&quot;&gt;&#10;                            &lt;Label x:Name=&quot;ReceiveDataLabel2&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;&#10;                    &lt;!-- 这一列涉及TreeView控件的使用 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;3&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;!-- 通过组合模式实现的树形结构 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;一个树形结构的类型容器，关联放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView x:Name=&quot;tv_composite&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;!-- 简单的通过读取Resourcees中的静态XML格式的树形结构 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;静态XML数据，放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView ItemsSource=&quot;{Binding Source={StaticResource xdp}}&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate ItemsSource=&quot;{Binding XPath=Folder}&quot;&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding XPath=@Name}&quot;/&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;Button Content=&quot;Start Parse XML&quot; Click=&quot;StartParseXML&quot; Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;&#10;                        &lt;Button Content=&quot;Refresh TreeView&quot; Click=&quot;RefreshTreeView&quot; Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;&#10;                        &lt;!-- 通过读取XML文件来填写属性结构的模板 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;4&quot;&gt;&#10;                            &lt;TreeView x:Name=&quot;TreeViewReadFromXMLFile&quot;&gt;&#10;                                &lt;TreeView.ItemTemplate&gt;&#10;                                    &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot;&gt;&#10;                                        &lt;StackPanel&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                        &lt;/StackPanel&gt;&#10;                                    &lt;/HierarchicalDataTemplate&gt;&#10;                                &lt;/TreeView.ItemTemplate&gt;&#10;                            &lt;/TreeView&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;ListBox x:Name=&quot;SearchRes&quot; Grid.Row=&quot;5&quot;&gt;&lt;/ListBox&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;                &lt;/Grid&gt;&#10;            &lt;/TabItem&gt;&#10;&#10;&#10;            &lt;TabItem Header=&quot;小实验&quot;&gt;&#10;                &lt;Grid&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!----&gt;&#10;                            &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Button Content=&quot;触发接口IEnumerable的实验程序&quot; Click=&quot;TryEnumerable&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;                        &#10;                            &lt;!-- 一个使用线程池特性BackgroundWorkder执行的进度条处理 --&gt;&#10;                            &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;ProgressBar x:Name=&quot;psb&quot; Style=&quot;{DynamicResource ProgressBarStyle1}&quot;&gt;&lt;/ProgressBar&gt;&#10;                                    &lt;Button Content=&quot;开始异步处理&quot; Click=&quot;StartBackgroundProgress&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;                                    &lt;Button Content=&quot;停止异步处理&quot; Click=&quot;StopBackgroundProgress&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;Border Grid.Row=&quot;2&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label x:Name=&quot;time_span_second&quot;&gt;0&lt;/Label&gt;&#10;                                    &lt;Button Content=&quot;开始计时&quot; x:Name=&quot;Time_Span_Button&quot; Click=&quot;TimeTick&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                        &lt;/Grid&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;                &lt;/Grid&gt;&#10;            &lt;/TabItem&gt;&#10;            &#10;            &lt;TabItem Header=&quot;接口测试&quot;&gt;&#10;                &lt;Grid x:Name=&quot;Interface_Grid&quot;&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;29&quot;&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition Width=&quot;171&quot;/&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;Grid Grid.Column=&quot;0&quot; Grid.ColumnSpan=&quot;2&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEquatable:&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_1&quot;&gt;比较两个值—没有继承IEquatable时&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_2&quot;&gt;比较两个值—重载GetHashCode&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_3&quot;&gt;比较两个值—继承IEquatable&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_4&quot;&gt;用ICompare作为函数入参&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEnumerable&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartForeach_1&quot;&gt;开始迭代&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;                    &lt;/Grid&gt;&#10;&#10;                &lt;/Grid&gt;&#10;&#10;&#10;            &lt;/TabItem&gt;&#10;&#10;&#10;        &lt;/TabControl&gt;&#10;&#10;&#10;    &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="882:6852" ph="&lt;&lt;ControlTemplate x:Key=&quot;cTmp&quot;&gt;&#10;            &lt;StackPanel&gt;&#10;                &lt;TextBox x:Name=&quot;textBox1&quot; Margin=&quot;6&quot;/&gt;&#10;                &lt;TextBox x:Name=&quot;textBox2&quot; Margin=&quot;6,0&quot;/&gt;&#10;                &lt;TextBox x:Name=&quot;textBox3&quot; Margin=&quot;6&quot;/&gt;&#10;            &lt;/StackPanel&gt;&#10;        &lt;/ControlTemplate&gt; &lt;sys:String x:Key=&quot;BindingStatic&quot;&gt;关联静态资源以及圆角Style&lt;/sys:String&gt; &lt;XmlDataProvider x:Key=&quot;xdp&quot; XPath=&quot;FileSystem/Folder&quot;&gt;&#10;            &lt;x:XData&gt;&#10;                &lt;FileSystem xmlns=&quot;&quot;&gt;&#10;                    &lt;Folder Name=&quot;Books&quot;&gt;&#10;                        &lt;Folder Name=&quot;Programming&quot;&gt;&#10;                            &lt;Folder Name=&quot;Windows&quot;&gt;&#10;                                &lt;Folder Name=&quot;WPF&quot;/&gt;&#10;                                &lt;Folder Name=&quot;MFC&quot;/&gt;&#10;                                &lt;Folder Name=&quot;Delphi&quot;/&gt;&#10;                            &lt;/Folder&gt;&#10;                        &lt;/Folder&gt;&#10;                        &lt;Folder Name=&quot;Tools&quot;&gt;&#10;                            &lt;Folder Name=&quot;Development&quot;/&gt;&#10;                            &lt;Folder Name=&quot;Designment&quot;/&gt;&#10;                            &lt;Folder Name=&quot;Players&quot;/&gt;&#10;                        &lt;/Folder&gt;&#10;                    &lt;/Folder&gt;&#10;                &lt;/FileSystem&gt;&#10;            &lt;/x:XData&gt;&#10;        &lt;/XmlDataProvider&gt; &lt;SolidColorBrush x:Key=&quot;ProgressBar.Progress&quot; Color=&quot;##FFFFB025&quot;/&gt; &lt;SolidColorBrush x:Key=&quot;ProgressBar.Background&quot; Color=&quot;##FFE6E6E6&quot;/&gt; &lt;SolidColorBrush x:Key=&quot;ProgressBar.Border&quot; Color=&quot;##FFBCBCBC&quot;/&gt; &lt;Style x:Key=&quot;ProgressBarStyle1&quot; TargetType=&quot;{x:Type ProgressBar}&quot;&gt;&#10;            &lt;Setter Property=&quot;Foreground&quot; Value=&quot;{StaticResource ProgressBar.Progress}&quot;/&gt;&#10;            &lt;Setter Property=&quot;Background&quot; Value=&quot;{StaticResource ProgressBar.Background}&quot;/&gt;&#10;            &lt;Setter Property=&quot;BorderBrush&quot; Value=&quot;{StaticResource ProgressBar.Border}&quot;/&gt;&#10;            &lt;Setter Property=&quot;BorderThickness&quot; Value=&quot;1&quot;/&gt;&#10;            &lt;Setter Property=&quot;Template&quot;&gt;&#10;                &lt;Setter.Value&gt;&#10;                    &lt;ControlTemplate TargetType=&quot;{x:Type ProgressBar}&quot;&gt;&#10;                        &lt;Grid x:Name=&quot;TemplateRoot&quot;&gt;&#10;                            &lt;VisualStateManager.VisualStateGroups&gt;&#10;                                &lt;VisualStateGroup x:Name=&quot;CommonStates&quot;&gt;&#10;                                    &lt;VisualState x:Name=&quot;Determinate&quot;/&gt;&#10;                                    &lt;VisualState x:Name=&quot;Indeterminate&quot;&gt;&#10;                                        &lt;Storyboard RepeatBehavior=&quot;Forever&quot;&gt;&#10;                                            &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;0.25&quot;/&gt;&#10;                                            &lt;/DoubleAnimationUsingKeyFrames&gt;&#10;                                            &lt;PointAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransformOrigin)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0&quot; Value=&quot;-0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;1.5,0.5&quot;/&gt;&#10;                                            &lt;/PointAnimationUsingKeyFrames&gt;&#10;                                        &lt;/Storyboard&gt;&#10;                                    &lt;/VisualState&gt;&#10;                                &lt;/VisualStateGroup&gt;&#10;                            &lt;/VisualStateManager.VisualStateGroups&gt;&#10;                            &lt;Border BorderBrush=&quot;{TemplateBinding BorderBrush}&quot; BorderThickness=&quot;{TemplateBinding BorderThickness}&quot; Background=&quot;{TemplateBinding Background}&quot;/&gt;&#10;                            &lt;Rectangle x:Name=&quot;PART_Track&quot;/&gt;&#10;                            &lt;Grid x:Name=&quot;PART_Indicator&quot; ClipToBounds=&quot;true&quot; HorizontalAlignment=&quot;Left&quot;&gt;&#10;                                &lt;Rectangle x:Name=&quot;Indicator&quot; Fill=&quot;{TemplateBinding Foreground}&quot;/&gt;&#10;                                &lt;Rectangle x:Name=&quot;Animation&quot; Fill=&quot;{TemplateBinding Foreground}&quot; RenderTransformOrigin=&quot;0.5,0.5&quot;&gt;&#10;                                    &lt;Rectangle.RenderTransform&gt;&#10;                                        &lt;TransformGroup&gt;&#10;                                            &lt;ScaleTransform/&gt;&#10;                                            &lt;SkewTransform/&gt;&#10;                                            &lt;RotateTransform/&gt;&#10;                                            &lt;TranslateTransform/&gt;&#10;                                        &lt;/TransformGroup&gt;&#10;                                    &lt;/Rectangle.RenderTransform&gt;&#10;                                &lt;/Rectangle&gt;&#10;                            &lt;/Grid&gt;&#10;                        &lt;/Grid&gt;&#10;                        &lt;ControlTemplate.Triggers&gt;&#10;                            &lt;Trigger Property=&quot;Orientation&quot; Value=&quot;Vertical&quot;&gt;&#10;                                &lt;Setter Property=&quot;LayoutTransform&quot; TargetName=&quot;TemplateRoot&quot;&gt;&#10;                                    &lt;Setter.Value&gt;&#10;                                        &lt;RotateTransform Angle=&quot;-90&quot;/&gt;&#10;                                    &lt;/Setter.Value&gt;&#10;                                &lt;/Setter&gt;&#10;                            &lt;/Trigger&gt;&#10;                            &lt;Trigger Property=&quot;IsIndeterminate&quot; Value=&quot;true&quot;&gt;&#10;                                &lt;Setter Property=&quot;Visibility&quot; TargetName=&quot;Indicator&quot; Value=&quot;Collapsed&quot;/&gt;&#10;                            &lt;/Trigger&gt;&#10;                        &lt;/ControlTemplate.Triggers&gt;&#10;                    &lt;/ControlTemplate&gt;&#10;                &lt;/Setter.Value&gt;&#10;            &lt;/Setter&gt;&#10;        &lt;/Style&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="941:1219" ph="&lt;&lt;StackPanel&gt;&#10;                &lt;TextBox x:Name=&quot;textBox1&quot; Margin=&quot;6&quot;/&gt;&#10;                &lt;TextBox x:Name=&quot;textBox2&quot; Margin=&quot;6,0&quot;/&gt;&#10;                &lt;TextBox x:Name=&quot;textBox3&quot; Margin=&quot;6&quot;/&gt;&#10;            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="984:1192" ph="&lt;&lt;TextBox x:Name=&quot;textBox1&quot; Margin=&quot;6&quot;/&gt; &lt;TextBox x:Name=&quot;textBox2&quot; Margin=&quot;6,0&quot;/&gt; &lt;TextBox x:Name=&quot;textBox3&quot; Margin=&quot;6&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="1368:2219" ph="&lt;&lt;x:XData&gt;&#10;                &lt;FileSystem xmlns=&quot;&quot;&gt;&#10;                    &lt;Folder Name=&quot;Books&quot;&gt;&#10;                        &lt;Folder Name=&quot;Programming&quot;&gt;&#10;                            &lt;Folder Name=&quot;Windows&quot;&gt;&#10;                                &lt;Folder Name=&quot;WPF&quot;/&gt;&#10;                                &lt;Folder Name=&quot;MFC&quot;/&gt;&#10;                                &lt;Folder Name=&quot;Delphi&quot;/&gt;&#10;                            &lt;/Folder&gt;&#10;                        &lt;/Folder&gt;&#10;                        &lt;Folder Name=&quot;Tools&quot;&gt;&#10;                            &lt;Folder Name=&quot;Development&quot;/&gt;&#10;                            &lt;Folder Name=&quot;Designment&quot;/&gt;&#10;                            &lt;Folder Name=&quot;Players&quot;/&gt;&#10;                        &lt;/Folder&gt;&#10;                    &lt;/Folder&gt;&#10;                &lt;/FileSystem&gt;&#10;            &lt;/x:XData&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="1436:2192" ph="&lt;&lt;FileSystem xmlns=&quot;&quot;&gt;&#10;                    &lt;Folder Name=&quot;Books&quot;&gt;&#10;                        &lt;Folder Name=&quot;Programming&quot;&gt;&#10;                            &lt;Folder Name=&quot;Windows&quot;&gt;&#10;                                &lt;Folder Name=&quot;WPF&quot;/&gt;&#10;                                &lt;Folder Name=&quot;MFC&quot;/&gt;&#10;                                &lt;Folder Name=&quot;Delphi&quot;/&gt;&#10;                            &lt;/Folder&gt;&#10;                        &lt;/Folder&gt;&#10;                        &lt;Folder Name=&quot;Tools&quot;&gt;&#10;                            &lt;Folder Name=&quot;Development&quot;/&gt;&#10;                            &lt;Folder Name=&quot;Designment&quot;/&gt;&#10;                            &lt;Folder Name=&quot;Players&quot;/&gt;&#10;                        &lt;/Folder&gt;&#10;                    &lt;/Folder&gt;&#10;                &lt;/FileSystem&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="1462:2169" ph="&lt;&lt;Folder Name=&quot;Books&quot;&gt;&#10;                        &lt;Folder Name=&quot;Programming&quot;&gt;&#10;                            &lt;Folder Name=&quot;Windows&quot;&gt;&#10;                                &lt;Folder Name=&quot;WPF&quot;/&gt;&#10;                                &lt;Folder Name=&quot;MFC&quot;/&gt;&#10;                                &lt;Folder Name=&quot;Delphi&quot;/&gt;&#10;                            &lt;/Folder&gt;&#10;                        &lt;/Folder&gt;&#10;                        &lt;Folder Name=&quot;Tools&quot;&gt;&#10;                            &lt;Folder Name=&quot;Development&quot;/&gt;&#10;                            &lt;Folder Name=&quot;Designment&quot;/&gt;&#10;                            &lt;Folder Name=&quot;Players&quot;/&gt;&#10;                        &lt;/Folder&gt;&#10;                    &lt;/Folder&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="1504:2139" ph="&lt;&lt;Folder Name=&quot;Programming&quot;&gt;&#10;                            &lt;Folder Name=&quot;Windows&quot;&gt;&#10;                                &lt;Folder Name=&quot;WPF&quot;/&gt;&#10;                                &lt;Folder Name=&quot;MFC&quot;/&gt;&#10;                                &lt;Folder Name=&quot;Delphi&quot;/&gt;&#10;                            &lt;/Folder&gt;&#10;                        &lt;/Folder&gt; &lt;Folder Name=&quot;Tools&quot;&gt;&#10;                            &lt;Folder Name=&quot;Development&quot;/&gt;&#10;                            &lt;Folder Name=&quot;Designment&quot;/&gt;&#10;                            &lt;Folder Name=&quot;Players&quot;/&gt;&#10;                        &lt;/Folder&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="1550:1863" ph="&lt;&lt;Folder Name=&quot;Windows&quot;&gt;&#10;                                &lt;Folder Name=&quot;WPF&quot;/&gt;&#10;                                &lt;Folder Name=&quot;MFC&quot;/&gt;&#10;                                &lt;Folder Name=&quot;Delphi&quot;/&gt;&#10;                            &lt;/Folder&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="1606:1829" ph="&lt;&lt;Folder Name=&quot;WPF&quot;/&gt; &lt;Folder Name=&quot;MFC&quot;/&gt; &lt;Folder Name=&quot;Delphi&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="1888:2109" ph="&lt;&lt;Folder Name=&quot;Development&quot;/&gt; &lt;Folder Name=&quot;Designment&quot;/&gt; &lt;Folder Name=&quot;Players&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="2451:6826" ph="&lt;&lt;Setter Property=&quot;Foreground&quot; Value=&quot;{StaticResource ProgressBar.Progress}&quot;/&gt; &lt;Setter Property=&quot;Background&quot; Value=&quot;{StaticResource ProgressBar.Background}&quot;/&gt; &lt;Setter Property=&quot;BorderBrush&quot; Value=&quot;{StaticResource ProgressBar.Border}&quot;/&gt; &lt;Setter Property=&quot;BorderThickness&quot; Value=&quot;1&quot;/&gt; &lt;Setter Property=&quot;Template&quot;&gt;&#10;                &lt;Setter.Value&gt;&#10;                    &lt;ControlTemplate TargetType=&quot;{x:Type ProgressBar}&quot;&gt;&#10;                        &lt;Grid x:Name=&quot;TemplateRoot&quot;&gt;&#10;                            &lt;VisualStateManager.VisualStateGroups&gt;&#10;                                &lt;VisualStateGroup x:Name=&quot;CommonStates&quot;&gt;&#10;                                    &lt;VisualState x:Name=&quot;Determinate&quot;/&gt;&#10;                                    &lt;VisualState x:Name=&quot;Indeterminate&quot;&gt;&#10;                                        &lt;Storyboard RepeatBehavior=&quot;Forever&quot;&gt;&#10;                                            &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;0.25&quot;/&gt;&#10;                                            &lt;/DoubleAnimationUsingKeyFrames&gt;&#10;                                            &lt;PointAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransformOrigin)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0&quot; Value=&quot;-0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;1.5,0.5&quot;/&gt;&#10;                                            &lt;/PointAnimationUsingKeyFrames&gt;&#10;                                        &lt;/Storyboard&gt;&#10;                                    &lt;/VisualState&gt;&#10;                                &lt;/VisualStateGroup&gt;&#10;                            &lt;/VisualStateManager.VisualStateGroups&gt;&#10;                            &lt;Border BorderBrush=&quot;{TemplateBinding BorderBrush}&quot; BorderThickness=&quot;{TemplateBinding BorderThickness}&quot; Background=&quot;{TemplateBinding Background}&quot;/&gt;&#10;                            &lt;Rectangle x:Name=&quot;PART_Track&quot;/&gt;&#10;                            &lt;Grid x:Name=&quot;PART_Indicator&quot; ClipToBounds=&quot;true&quot; HorizontalAlignment=&quot;Left&quot;&gt;&#10;                                &lt;Rectangle x:Name=&quot;Indicator&quot; Fill=&quot;{TemplateBinding Foreground}&quot;/&gt;&#10;                                &lt;Rectangle x:Name=&quot;Animation&quot; Fill=&quot;{TemplateBinding Foreground}&quot; RenderTransformOrigin=&quot;0.5,0.5&quot;&gt;&#10;                                    &lt;Rectangle.RenderTransform&gt;&#10;                                        &lt;TransformGroup&gt;&#10;                                            &lt;ScaleTransform/&gt;&#10;                                            &lt;SkewTransform/&gt;&#10;                                            &lt;RotateTransform/&gt;&#10;                                            &lt;TranslateTransform/&gt;&#10;                                        &lt;/TransformGroup&gt;&#10;                                    &lt;/Rectangle.RenderTransform&gt;&#10;                                &lt;/Rectangle&gt;&#10;                            &lt;/Grid&gt;&#10;                        &lt;/Grid&gt;&#10;                        &lt;ControlTemplate.Triggers&gt;&#10;                            &lt;Trigger Property=&quot;Orientation&quot; Value=&quot;Vertical&quot;&gt;&#10;                                &lt;Setter Property=&quot;LayoutTransform&quot; TargetName=&quot;TemplateRoot&quot;&gt;&#10;                                    &lt;Setter.Value&gt;&#10;                                        &lt;RotateTransform Angle=&quot;-90&quot;/&gt;&#10;                                    &lt;/Setter.Value&gt;&#10;                                &lt;/Setter&gt;&#10;                            &lt;/Trigger&gt;&#10;                            &lt;Trigger Property=&quot;IsIndeterminate&quot; Value=&quot;true&quot;&gt;&#10;                                &lt;Setter Property=&quot;Visibility&quot; TargetName=&quot;Indicator&quot; Value=&quot;Collapsed&quot;/&gt;&#10;                            &lt;/Trigger&gt;&#10;                        &lt;/ControlTemplate.Triggers&gt;&#10;                    &lt;/ControlTemplate&gt;&#10;                &lt;/Setter.Value&gt;&#10;            &lt;/Setter&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="2861:6809" ph="&lt;&lt;Setter.Value&gt;&#10;                    &lt;ControlTemplate TargetType=&quot;{x:Type ProgressBar}&quot;&gt;&#10;                        &lt;Grid x:Name=&quot;TemplateRoot&quot;&gt;&#10;                            &lt;VisualStateManager.VisualStateGroups&gt;&#10;                                &lt;VisualStateGroup x:Name=&quot;CommonStates&quot;&gt;&#10;                                    &lt;VisualState x:Name=&quot;Determinate&quot;/&gt;&#10;                                    &lt;VisualState x:Name=&quot;Indeterminate&quot;&gt;&#10;                                        &lt;Storyboard RepeatBehavior=&quot;Forever&quot;&gt;&#10;                                            &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;0.25&quot;/&gt;&#10;                                            &lt;/DoubleAnimationUsingKeyFrames&gt;&#10;                                            &lt;PointAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransformOrigin)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0&quot; Value=&quot;-0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;1.5,0.5&quot;/&gt;&#10;                                            &lt;/PointAnimationUsingKeyFrames&gt;&#10;                                        &lt;/Storyboard&gt;&#10;                                    &lt;/VisualState&gt;&#10;                                &lt;/VisualStateGroup&gt;&#10;                            &lt;/VisualStateManager.VisualStateGroups&gt;&#10;                            &lt;Border BorderBrush=&quot;{TemplateBinding BorderBrush}&quot; BorderThickness=&quot;{TemplateBinding BorderThickness}&quot; Background=&quot;{TemplateBinding Background}&quot;/&gt;&#10;                            &lt;Rectangle x:Name=&quot;PART_Track&quot;/&gt;&#10;                            &lt;Grid x:Name=&quot;PART_Indicator&quot; ClipToBounds=&quot;true&quot; HorizontalAlignment=&quot;Left&quot;&gt;&#10;                                &lt;Rectangle x:Name=&quot;Indicator&quot; Fill=&quot;{TemplateBinding Foreground}&quot;/&gt;&#10;                                &lt;Rectangle x:Name=&quot;Animation&quot; Fill=&quot;{TemplateBinding Foreground}&quot; RenderTransformOrigin=&quot;0.5,0.5&quot;&gt;&#10;                                    &lt;Rectangle.RenderTransform&gt;&#10;                                        &lt;TransformGroup&gt;&#10;                                            &lt;ScaleTransform/&gt;&#10;                                            &lt;SkewTransform/&gt;&#10;                                            &lt;RotateTransform/&gt;&#10;                                            &lt;TranslateTransform/&gt;&#10;                                        &lt;/TransformGroup&gt;&#10;                                    &lt;/Rectangle.RenderTransform&gt;&#10;                                &lt;/Rectangle&gt;&#10;                            &lt;/Grid&gt;&#10;                        &lt;/Grid&gt;&#10;                        &lt;ControlTemplate.Triggers&gt;&#10;                            &lt;Trigger Property=&quot;Orientation&quot; Value=&quot;Vertical&quot;&gt;&#10;                                &lt;Setter Property=&quot;LayoutTransform&quot; TargetName=&quot;TemplateRoot&quot;&gt;&#10;                                    &lt;Setter.Value&gt;&#10;                                        &lt;RotateTransform Angle=&quot;-90&quot;/&gt;&#10;                                    &lt;/Setter.Value&gt;&#10;                                &lt;/Setter&gt;&#10;                            &lt;/Trigger&gt;&#10;                            &lt;Trigger Property=&quot;IsIndeterminate&quot; Value=&quot;true&quot;&gt;&#10;                                &lt;Setter Property=&quot;Visibility&quot; TargetName=&quot;Indicator&quot; Value=&quot;Collapsed&quot;/&gt;&#10;                            &lt;/Trigger&gt;&#10;                        &lt;/ControlTemplate.Triggers&gt;&#10;                    &lt;/ControlTemplate&gt;&#10;                &lt;/Setter.Value&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="2906:6787" ph="&lt;&lt;ControlTemplate TargetType=&quot;{x:Type ProgressBar}&quot;&gt;&#10;                        &lt;Grid x:Name=&quot;TemplateRoot&quot;&gt;&#10;                            &lt;VisualStateManager.VisualStateGroups&gt;&#10;                                &lt;VisualStateGroup x:Name=&quot;CommonStates&quot;&gt;&#10;                                    &lt;VisualState x:Name=&quot;Determinate&quot;/&gt;&#10;                                    &lt;VisualState x:Name=&quot;Indeterminate&quot;&gt;&#10;                                        &lt;Storyboard RepeatBehavior=&quot;Forever&quot;&gt;&#10;                                            &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;0.25&quot;/&gt;&#10;                                            &lt;/DoubleAnimationUsingKeyFrames&gt;&#10;                                            &lt;PointAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransformOrigin)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0&quot; Value=&quot;-0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;1.5,0.5&quot;/&gt;&#10;                                            &lt;/PointAnimationUsingKeyFrames&gt;&#10;                                        &lt;/Storyboard&gt;&#10;                                    &lt;/VisualState&gt;&#10;                                &lt;/VisualStateGroup&gt;&#10;                            &lt;/VisualStateManager.VisualStateGroups&gt;&#10;                            &lt;Border BorderBrush=&quot;{TemplateBinding BorderBrush}&quot; BorderThickness=&quot;{TemplateBinding BorderThickness}&quot; Background=&quot;{TemplateBinding Background}&quot;/&gt;&#10;                            &lt;Rectangle x:Name=&quot;PART_Track&quot;/&gt;&#10;                            &lt;Grid x:Name=&quot;PART_Indicator&quot; ClipToBounds=&quot;true&quot; HorizontalAlignment=&quot;Left&quot;&gt;&#10;                                &lt;Rectangle x:Name=&quot;Indicator&quot; Fill=&quot;{TemplateBinding Foreground}&quot;/&gt;&#10;                                &lt;Rectangle x:Name=&quot;Animation&quot; Fill=&quot;{TemplateBinding Foreground}&quot; RenderTransformOrigin=&quot;0.5,0.5&quot;&gt;&#10;                                    &lt;Rectangle.RenderTransform&gt;&#10;                                        &lt;TransformGroup&gt;&#10;                                            &lt;ScaleTransform/&gt;&#10;                                            &lt;SkewTransform/&gt;&#10;                                            &lt;RotateTransform/&gt;&#10;                                            &lt;TranslateTransform/&gt;&#10;                                        &lt;/TransformGroup&gt;&#10;                                    &lt;/Rectangle.RenderTransform&gt;&#10;                                &lt;/Rectangle&gt;&#10;                            &lt;/Grid&gt;&#10;                        &lt;/Grid&gt;&#10;                        &lt;ControlTemplate.Triggers&gt;&#10;                            &lt;Trigger Property=&quot;Orientation&quot; Value=&quot;Vertical&quot;&gt;&#10;                                &lt;Setter Property=&quot;LayoutTransform&quot; TargetName=&quot;TemplateRoot&quot;&gt;&#10;                                    &lt;Setter.Value&gt;&#10;                                        &lt;RotateTransform Angle=&quot;-90&quot;/&gt;&#10;                                    &lt;/Setter.Value&gt;&#10;                                &lt;/Setter&gt;&#10;                            &lt;/Trigger&gt;&#10;                            &lt;Trigger Property=&quot;IsIndeterminate&quot; Value=&quot;true&quot;&gt;&#10;                                &lt;Setter Property=&quot;Visibility&quot; TargetName=&quot;Indicator&quot; Value=&quot;Collapsed&quot;/&gt;&#10;                            &lt;/Trigger&gt;&#10;                        &lt;/ControlTemplate.Triggers&gt;&#10;                    &lt;/ControlTemplate&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="2941:6755" ph="&lt;&lt;Grid x:Name=&quot;TemplateRoot&quot;&gt;&#10;                            &lt;VisualStateManager.VisualStateGroups&gt;&#10;                                &lt;VisualStateGroup x:Name=&quot;CommonStates&quot;&gt;&#10;                                    &lt;VisualState x:Name=&quot;Determinate&quot;/&gt;&#10;                                    &lt;VisualState x:Name=&quot;Indeterminate&quot;&gt;&#10;                                        &lt;Storyboard RepeatBehavior=&quot;Forever&quot;&gt;&#10;                                            &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;0.25&quot;/&gt;&#10;                                            &lt;/DoubleAnimationUsingKeyFrames&gt;&#10;                                            &lt;PointAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransformOrigin)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0&quot; Value=&quot;-0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;1.5,0.5&quot;/&gt;&#10;                                            &lt;/PointAnimationUsingKeyFrames&gt;&#10;                                        &lt;/Storyboard&gt;&#10;                                    &lt;/VisualState&gt;&#10;                                &lt;/VisualStateGroup&gt;&#10;                            &lt;/VisualStateManager.VisualStateGroups&gt;&#10;                            &lt;Border BorderBrush=&quot;{TemplateBinding BorderBrush}&quot; BorderThickness=&quot;{TemplateBinding BorderThickness}&quot; Background=&quot;{TemplateBinding Background}&quot;/&gt;&#10;                            &lt;Rectangle x:Name=&quot;PART_Track&quot;/&gt;&#10;                            &lt;Grid x:Name=&quot;PART_Indicator&quot; ClipToBounds=&quot;true&quot; HorizontalAlignment=&quot;Left&quot;&gt;&#10;                                &lt;Rectangle x:Name=&quot;Indicator&quot; Fill=&quot;{TemplateBinding Foreground}&quot;/&gt;&#10;                                &lt;Rectangle x:Name=&quot;Animation&quot; Fill=&quot;{TemplateBinding Foreground}&quot; RenderTransformOrigin=&quot;0.5,0.5&quot;&gt;&#10;                                    &lt;Rectangle.RenderTransform&gt;&#10;                                        &lt;TransformGroup&gt;&#10;                                            &lt;ScaleTransform/&gt;&#10;                                            &lt;SkewTransform/&gt;&#10;                                            &lt;RotateTransform/&gt;&#10;                                            &lt;TranslateTransform/&gt;&#10;                                        &lt;/TransformGroup&gt;&#10;                                    &lt;/Rectangle.RenderTransform&gt;&#10;                                &lt;/Rectangle&gt;&#10;                            &lt;/Grid&gt;&#10;                        &lt;/Grid&gt; &lt;ControlTemplate.Triggers&gt;&#10;                            &lt;Trigger Property=&quot;Orientation&quot; Value=&quot;Vertical&quot;&gt;&#10;                                &lt;Setter Property=&quot;LayoutTransform&quot; TargetName=&quot;TemplateRoot&quot;&gt;&#10;                                    &lt;Setter.Value&gt;&#10;                                        &lt;RotateTransform Angle=&quot;-90&quot;/&gt;&#10;                                    &lt;/Setter.Value&gt;&#10;                                &lt;/Setter&gt;&#10;                            &lt;/Trigger&gt;&#10;                            &lt;Trigger Property=&quot;IsIndeterminate&quot; Value=&quot;true&quot;&gt;&#10;                                &lt;Setter Property=&quot;Visibility&quot; TargetName=&quot;Indicator&quot; Value=&quot;Collapsed&quot;/&gt;&#10;                            &lt;/Trigger&gt;&#10;                        &lt;/ControlTemplate.Triggers&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="3017:5964" ph="&lt;&lt;VisualStateManager.VisualStateGroups&gt;&#10;                                &lt;VisualStateGroup x:Name=&quot;CommonStates&quot;&gt;&#10;                                    &lt;VisualState x:Name=&quot;Determinate&quot;/&gt;&#10;                                    &lt;VisualState x:Name=&quot;Indeterminate&quot;&gt;&#10;                                        &lt;Storyboard RepeatBehavior=&quot;Forever&quot;&gt;&#10;                                            &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;0.25&quot;/&gt;&#10;                                            &lt;/DoubleAnimationUsingKeyFrames&gt;&#10;                                            &lt;PointAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransformOrigin)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0&quot; Value=&quot;-0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;1.5,0.5&quot;/&gt;&#10;                                            &lt;/PointAnimationUsingKeyFrames&gt;&#10;                                        &lt;/Storyboard&gt;&#10;                                    &lt;/VisualState&gt;&#10;                                &lt;/VisualStateGroup&gt;&#10;                            &lt;/VisualStateManager.VisualStateGroups&gt; &lt;Border BorderBrush=&quot;{TemplateBinding BorderBrush}&quot; BorderThickness=&quot;{TemplateBinding BorderThickness}&quot; Background=&quot;{TemplateBinding Background}&quot;/&gt; &lt;Rectangle x:Name=&quot;PART_Track&quot;/&gt; &lt;Grid x:Name=&quot;PART_Indicator&quot; ClipToBounds=&quot;true&quot; HorizontalAlignment=&quot;Left&quot;&gt;&#10;                                &lt;Rectangle x:Name=&quot;Indicator&quot; Fill=&quot;{TemplateBinding Foreground}&quot;/&gt;&#10;                                &lt;Rectangle x:Name=&quot;Animation&quot; Fill=&quot;{TemplateBinding Foreground}&quot; RenderTransformOrigin=&quot;0.5,0.5&quot;&gt;&#10;                                    &lt;Rectangle.RenderTransform&gt;&#10;                                        &lt;TransformGroup&gt;&#10;                                            &lt;ScaleTransform/&gt;&#10;                                            &lt;SkewTransform/&gt;&#10;                                            &lt;RotateTransform/&gt;&#10;                                            &lt;TranslateTransform/&gt;&#10;                                        &lt;/TransformGroup&gt;&#10;                                    &lt;/Rectangle.RenderTransform&gt;&#10;                                &lt;/Rectangle&gt;&#10;                            &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="3074:4781" ph="&lt;&lt;VisualStateGroup x:Name=&quot;CommonStates&quot;&gt;&#10;                                    &lt;VisualState x:Name=&quot;Determinate&quot;/&gt;&#10;                                    &lt;VisualState x:Name=&quot;Indeterminate&quot;&gt;&#10;                                        &lt;Storyboard RepeatBehavior=&quot;Forever&quot;&gt;&#10;                                            &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;0.25&quot;/&gt;&#10;                                            &lt;/DoubleAnimationUsingKeyFrames&gt;&#10;                                            &lt;PointAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransformOrigin)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0&quot; Value=&quot;-0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;1.5,0.5&quot;/&gt;&#10;                                            &lt;/PointAnimationUsingKeyFrames&gt;&#10;                                        &lt;/Storyboard&gt;&#10;                                    &lt;/VisualState&gt;&#10;                                &lt;/VisualStateGroup&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="3145:4713" ph="&lt;&lt;VisualState x:Name=&quot;Determinate&quot;/&gt; &lt;VisualState x:Name=&quot;Indeterminate&quot;&gt;&#10;                                        &lt;Storyboard RepeatBehavior=&quot;Forever&quot;&gt;&#10;                                            &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;0.25&quot;/&gt;&#10;                                            &lt;/DoubleAnimationUsingKeyFrames&gt;&#10;                                            &lt;PointAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransformOrigin)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0&quot; Value=&quot;-0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;1.5,0.5&quot;/&gt;&#10;                                            &lt;/PointAnimationUsingKeyFrames&gt;&#10;                                        &lt;/Storyboard&gt;&#10;                                    &lt;/VisualState&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="3294:4661" ph="&lt;&lt;Storyboard RepeatBehavior=&quot;Forever&quot;&gt;&#10;                                            &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;0.25&quot;/&gt;&#10;                                            &lt;/DoubleAnimationUsingKeyFrames&gt;&#10;                                            &lt;PointAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransformOrigin)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0&quot; Value=&quot;-0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;1.5,0.5&quot;/&gt;&#10;                                            &lt;/PointAnimationUsingKeyFrames&gt;&#10;                                        &lt;/Storyboard&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="3371:4610" ph="&lt;&lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.25&quot;/&gt;&#10;                                                &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;0.25&quot;/&gt;&#10;                                            &lt;/DoubleAnimationUsingKeyFrames&gt; &lt;PointAnimationUsingKeyFrames Storyboard.TargetProperty=&quot;(UIElement.RenderTransformOrigin)&quot; Storyboard.TargetName=&quot;Animation&quot;&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0&quot; Value=&quot;-0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.5,0.5&quot;/&gt;&#10;                                                &lt;EasingPointKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;1.5,0.5&quot;/&gt;&#10;                                            &lt;/PointAnimationUsingKeyFrames&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="3453:4003" ph="&lt;&lt;EasingDoubleKeyFrame KeyTime=&quot;0&quot; Value=&quot;0.25&quot;/&gt; &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.25&quot;/&gt; &lt;EasingDoubleKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;0.25&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="4048:4556" ph="&lt;&lt;EasingPointKeyFrame KeyTime=&quot;0&quot; Value=&quot;-0.5,0.5&quot;/&gt; &lt;EasingPointKeyFrame KeyTime=&quot;0:0:1&quot; Value=&quot;0.5,0.5&quot;/&gt; &lt;EasingPointKeyFrame KeyTime=&quot;0:0:2&quot; Value=&quot;1.5,0.5&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="5047:5932" ph="&lt;&lt;Rectangle x:Name=&quot;Indicator&quot; Fill=&quot;{TemplateBinding Foreground}&quot;/&gt; &lt;Rectangle x:Name=&quot;Animation&quot; Fill=&quot;{TemplateBinding Foreground}&quot; RenderTransformOrigin=&quot;0.5,0.5&quot;&gt;&#10;                                    &lt;Rectangle.RenderTransform&gt;&#10;                                        &lt;TransformGroup&gt;&#10;                                            &lt;ScaleTransform/&gt;&#10;                                            &lt;SkewTransform/&gt;&#10;                                            &lt;RotateTransform/&gt;&#10;                                            &lt;TranslateTransform/&gt;&#10;                                        &lt;/TransformGroup&gt;&#10;                                    &lt;/Rectangle.RenderTransform&gt;&#10;                                &lt;/Rectangle&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="5257:5896" ph="&lt;&lt;Rectangle.RenderTransform&gt;&#10;                                        &lt;TransformGroup&gt;&#10;                                            &lt;ScaleTransform/&gt;&#10;                                            &lt;SkewTransform/&gt;&#10;                                            &lt;RotateTransform/&gt;&#10;                                            &lt;TranslateTransform/&gt;&#10;                                        &lt;/TransformGroup&gt;&#10;                                    &lt;/Rectangle.RenderTransform&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="5392:5851" ph="&lt;&lt;TransformGroup&gt;&#10;                                            &lt;ScaleTransform/&gt;&#10;                                            &lt;SkewTransform/&gt;&#10;                                            &lt;RotateTransform/&gt;&#10;                                            &lt;TranslateTransform/&gt;&#10;                                        &lt;/TransformGroup&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="5460:5786" ph="&lt;&lt;ScaleTransform/&gt; &lt;SkewTransform/&gt; &lt;RotateTransform/&gt; &lt;TranslateTransform/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="5989:6716" ph="&lt;&lt;Trigger Property=&quot;Orientation&quot; Value=&quot;Vertical&quot;&gt;&#10;                                &lt;Setter Property=&quot;LayoutTransform&quot; TargetName=&quot;TemplateRoot&quot;&gt;&#10;                                    &lt;Setter.Value&gt;&#10;                                        &lt;RotateTransform Angle=&quot;-90&quot;/&gt;&#10;                                    &lt;/Setter.Value&gt;&#10;                                &lt;/Setter&gt;&#10;                            &lt;/Trigger&gt; &lt;Trigger Property=&quot;IsIndeterminate&quot; Value=&quot;true&quot;&gt;&#10;                                &lt;Setter Property=&quot;Visibility&quot; TargetName=&quot;Indicator&quot; Value=&quot;Collapsed&quot;/&gt;&#10;                            &lt;/Trigger&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="6044:6442" ph="&lt;&lt;Setter Property=&quot;LayoutTransform&quot; TargetName=&quot;TemplateRoot&quot;&gt;&#10;                                    &lt;Setter.Value&gt;&#10;                                        &lt;RotateTransform Angle=&quot;-90&quot;/&gt;&#10;                                    &lt;/Setter.Value&gt;&#10;                                &lt;/Setter&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="6126:6403" ph="&lt;&lt;Setter.Value&gt;&#10;                                        &lt;RotateTransform Angle=&quot;-90&quot;/&gt;&#10;                                    &lt;/Setter.Value&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="6224:6361" ph="&lt;&lt;RotateTransform Angle=&quot;-90&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="6471:6664" ph="&lt;&lt;Setter Property=&quot;Visibility&quot; TargetName=&quot;Indicator&quot; Value=&quot;Collapsed&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="6858:38997" ph="&lt;&lt;TabControl&gt;&#10;            &#10;            &lt;!-- 主要用来展示WPF的基础知识 --&gt;&#10;            &lt;TabItem Header=&quot;前端\路由事件\依赖属性\命令&quot;&gt;&#10;                &lt;Grid&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第一列：WPF基础知识--&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第二列：WPF高级知识，路由事件\依赖属性\命令--&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第三列：WPF如何解耦和前后端代码--&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;!-- WPF的纯前端交互处理 --&gt;&#10;                    &lt;DockPanel Grid.Column=&quot;0&quot; Margin=&quot;10,0,10,0&quot; x:Name=&quot;None_RouteEvent_DockPanel&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 使用Style对控件进行定制化，即所谓的CSS和Javascript --&gt;&#10;                            &lt;Border Grid.Row=&quot;0&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label routeevt:ButtonTime.ReportTime=&quot;RptTime&quot; x:Name=&quot;StyleWPF&quot;&gt;Style的用法:&lt;/Label&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource BlueButton}&quot; Margin=&quot;0,5&quot;&gt;蓝色按钮&lt;/Button&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource ButtonTrigger}&quot;&gt;蓝色按钮和触发事件&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- WPF还支持画线，画图 --&gt;&#10;                            &lt;Border Grid.Row=&quot;1&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label&gt;用WPF画图&lt;/Label&gt;&#10;                                    &lt;Canvas x:Name=&quot;canvas1&quot;&gt;&lt;/Canvas&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- 使用controlTemplate组合一个控件出来 --&gt;&#10;                            &lt;Border Grid.Row=&quot;2&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;在前端直接用ControlTemplate组合用户控件&lt;/Label&gt;&#10;                                    &lt;UserControl x:Name=&quot;uc&quot; Template=&quot;{StaticResource cTmp}&quot; Grid.Row=&quot;2&quot;/&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- 可以使用Binding关联一个静态Source，既然是静态Source，Path就使用.来代替（因为不用指定属性） --&gt;&#10;                            &lt;TextBox x:Name=&quot;tb&quot; Text=&quot;{Binding Path=., Source={StaticResource ResourceKey=BindingStatic}}&quot;  Style=&quot;{StaticResource tbstyle}&quot; Grid.Row=&quot;3&quot;/&gt;&#10;&#10;                            &lt;!-- 也可以使用Binding关联其他控件的属性 --&gt;&#10;                            &lt;Border Grid.Row=&quot;4&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;控件绑定前端元素：&lt;/Label&gt;&#10;                                    &lt;!-- 在控件中具有DependencyProperty能力的属性，才可以支持将Binding实例赋值到这个属性上 --&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}&quot; Width=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Slider x:Name=&quot;slider1&quot; Maximum=&quot;20&quot; Width=&quot;150&quot;&gt;&lt;/Slider&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                        &lt;/Grid&gt;&#10;&#10;                    &lt;/DockPanel&gt;&#10;&#10;                    &lt;!-- 路由事件和依赖属性 --&gt;&#10;                    &lt;DockPanel Grid.Column=&quot;1&quot; x:Name=&quot;DockPanel_RouteEvent&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 路由事件和依赖属性都在这里 --&gt;&#10;                            &lt;Grid x:Name=&quot;RouteEventGrid1&quot; Grid.Row=&quot;0&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                &#10;                                &lt;StackPanel x:Name=&quot;sp1&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                    &#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.RowDefinitions&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                                        &lt;!-- ！！不在timebutton的路由路径上，所以路由事件无法到达！！ --&gt;&#10;                                        &lt;StackPanel x:Name=&quot;sp2&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                        &lt;/StackPanel&gt;&#10;&#10;                                        &lt;routeevt:ButtonTime x:Name=&quot;timebutton&quot; Height=&quot;40&quot; Grid.Row=&quot;1&quot; Click=&quot;TimeButton_Click&quot; routeevt:ButtonTime.ReportTime=&quot;Button_Click2&quot;&gt;&#10;                                            我是一个从Button继承带有路由事件的按钮&#10;                                        &lt;/routeevt:ButtonTime&gt;&#10;&#10;                                    &lt;/Grid&gt;&#10;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;&#10;                            &lt;!-- WPF中的命令系统 --&gt;&#10;                            &lt;Grid Grid.Row=&quot;1&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Button x:Name=&quot;CommandButton&quot;&gt;清空命令(清空以上输入)&lt;/Button&gt;&#10;                                    &#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;                            &#10;                            &lt;!-- WPF中的命令系统二 --&gt;&#10;                            &lt;Grid Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel2&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox2&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;&#10;                            &lt;Grid Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&#10;                            &lt;/Grid&gt;&#10;                            &#10;                        &lt;/Grid&gt;&#10;                    &lt;/DockPanel&gt;&#10;&#10;                    &lt;!-- 所有都是自定义控件，看看控件解耦和之后，如何处理控件之间的关系 --&gt;&#10;                    &lt;DockPanel Grid.Column=&quot;2&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;180&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 搜索TextBox，更新下边的TreeView --&gt;&#10;                            &lt;Border BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;0,10,0,10&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;localui:SearchTextBox&gt;&lt;/localui:SearchTextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;&#10;                        &lt;/Grid&gt;&#10;                    &lt;/DockPanel&gt;&#10;&#10;                &lt;/Grid&gt;&#10;            &lt;/TabItem&gt;&#10;&#10;            &lt;TabItem Header=&quot;Binding专用&quot;&gt;&#10;&#10;                &lt;Grid&gt;&#10;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;350&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;400&quot;/&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;有关于Binding的本质：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingBase&quot;&gt;&lt;/Label&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel&quot; Content=&quot;{Binding Path=m_iA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;2&quot;&gt;&#10;                            &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联（静态属性）：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel2&quot; Content=&quot;{Binding Path=m_sA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;                    &lt;/Grid&gt;&#10;&#10;                &lt;/Grid&gt;&#10;            &lt;/TabItem&gt;&#10;&#10;            &lt;!-- 汇总各个控件的使用方法 --&gt;&#10;            &lt;TabItem x:Name=&quot;AllControlUsage&quot; Header=&quot;各类控件的使用&quot;&gt;&#10;&#10;                &lt;Grid&gt;&#10;                    &lt;!-- 总宽度1000 --&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;500&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;500&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;/&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;!-- 总高度800 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;170&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;!-- &#10;                            在此使用DataContext指定一个ClassA的一个实例，&#10;                            并且在该区域内的所有控件都能访问这个类实例的属性 &#10;                        --&gt;&#10;                        &lt;Border  BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;!-- 在Border范围内实例化了一个ClassA，名为class_a --&gt;&#10;                            &lt;Border.DataContext&gt;&#10;                                &lt;local:ClassA x:Name=&quot;class_a&quot;&gt;&lt;/local:ClassA&gt;&#10;                            &lt;/Border.DataContext&gt;&#10;&#10;                            &lt;!-- 指定了DataContext后，可以通过Binding的path关联实例对应的属性 --&gt;&#10;                            &lt;TreeView Name=&quot;tree&quot;&gt;&#10;                                &lt;TreeViewItem Header=&quot;Root&quot;&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding Path = m_A}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding m_B}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                &lt;/TreeViewItem&gt;&#10;                            &lt;/TreeView&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl（ListBox）类型的控件，使用ItemSource进行Binding --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox x:Name=&quot;PersonID&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList&quot; Margin=&quot;0,5&quot;&gt;&#10;                                    &lt;ListBox.ItemTemplate&gt;&#10;                                        &lt;DataTemplate&gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_ID}&quot; Width=&quot;30&quot;/&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_Name}&quot; Width=&quot;60&quot;/&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/DataTemplate&gt;&#10;                                    &lt;/ListBox.ItemTemplate&gt;&#10;                                &lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl（ListBox）类型的控件，使用ItemSource进行Binding --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;2&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox Text =&quot;{Binding m_ID}&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList2&quot; Margin=&quot;0,5&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl(ListBox)控件，使用一个List&lt;Person&gt;绑定 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;3&quot; Margin=&quot;5,5,5,5&quot; &gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;!-- &#10;                                     每个控件都有自己的DataContext&#10;                                     DataContext可以指定为某一个区域 &#10;                                     这样使用DataContext，也相当于实例化了一个Student对象&#10;                                --&gt;&#10;                                &lt;StackPanel.DataContext&gt;&#10;                                    &lt;local:Student x:Name=&quot;stus&quot;&gt;&lt;/local:Student&gt;&#10;                                &lt;/StackPanel.DataContext&gt;&#10;                                &lt;ListBox x:Name=&quot;StuList&quot; ItemsSource=&quot;{Binding m_StuList}&quot; DisplayMemberPath=&quot;m_Name&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 一个实时更新的输入框，绑定函数返回值的例子 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;4&quot; Margin=&quot;5,5,5,5&quot; &gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcX&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcY&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcRes&quot;&gt;&lt;/TextBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 这个是学习依赖属性用的，DP暂时没学透彻呢 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;5&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;text1&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;Button x:Name=&quot;GetInputButton&quot; Content=&quot;获取输入框内容&quot; Click=&quot;GetDepProperty&quot; &gt;&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;&#10;                    &lt;!-- 这一列涉及控件DataGrid的使用方法 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;1&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;30&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;30&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;120&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;120&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Label Grid.Row=&quot;0&quot;&gt;这是一个DataGrid最基础的实例&lt;/Label&gt;&#10;                        &lt;!-- 在MSDN中，一个最为基础的DataGrid的使用方法 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid x:Name=&quot;CustomerDataGrid&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot;  &gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding FirstName}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column2&quot; Binding=&quot;{Binding LastName}&quot; /&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column3&quot; Binding=&quot;{Binding Email}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column4&quot; Binding=&quot;{Binding IsMember}&quot; /&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column5&quot; Binding=&quot;{Binding cell.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Label Grid.Row=&quot;2&quot;&gt;这是一个带有多个事件的DataGrid&lt;/Label&gt;&#10;                        &lt;!-- 对DataGrid进行更加丰富的操作，比如单元格编辑事件等等 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;3&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid x:Name=&quot;CustomerDataGrid_AddEvent&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot; SelectionUnit=&quot;Cell&quot; SelectionMode=&quot;Single&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding column1.name}&quot;/&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column2&quot; Binding=&quot;{Binding column2.name}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column3&quot; Binding=&quot;{Binding column3.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 触发单元格自动刷新 --&gt;&#10;                        &lt;StackPanel Grid.Row=&quot;4&quot;&gt;&#10;                            &lt;Label&gt;以下使用了数据模板为DataGrid丰富内容，并实现自动刷新功能&lt;/Label&gt;&#10;                            &lt;Button Click=&quot;Button_Click&quot;&gt;开始刷新DataGrid&lt;/Button&gt;&#10;                        &lt;/StackPanel&gt;&#10;&#10;                        &lt;!-- 使用DataTemplate对.NET自带的DataGrid进行定制化 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;5&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;!-- 一个数据模板，使用在后边DataGrid的最后一个单元格 --&gt;&#10;                            &lt;Border.Resources&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellEditingTemplate&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.ColumnDefinitions&gt;&#10;                                            &lt;ColumnDefinition/&gt;&#10;                                            &lt;ColumnDefinition Width=&quot;15&quot;/&gt;&#10;                                        &lt;/Grid.ColumnDefinitions&gt;&#10;                                        &lt;TextBlock Grid.Column=&quot;0&quot; Text=&quot;{Binding m_content}&quot;/&gt;&#10;                                        &lt;Button Grid.Column=&quot;1&quot; Content=&quot;...&quot; Command=&quot;{Binding ShowCommand}&quot;/&gt;&#10;                                    &lt;/Grid&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;!-- 数据模板对应的类型是MessageModel --&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellDropBox&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;ComboBox ItemsSource=&quot;{Binding m_content_detail}&quot; SelectedIndex=&quot;0&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;DataTemplate x:Key=&quot;cellTextBlock&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;TextBlock Text=&quot;{Binding m_content_detail}&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                            &lt;/Border.Resources&gt;&#10;&#10;                            &lt;!-- 表格，用来显示MessageVM中所有的消息,使用ItemsSource指定数据源 --&gt;&#10;                            &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;编号&quot; Binding=&quot;{Binding m_No}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;时间戳&quot; Binding=&quot;{Binding m_time}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息内容&quot; CellTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot; &#10;                                                            CellEditingTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息详情&quot; CellTemplate=&quot;{StaticResource ResourceKey=cellDropBox}&quot;/&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 表格，和上边的表格一样，但是只是应用了usercontrol封装了一下 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;6&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;localui:MessageDataGrid x:Name=&quot;MsgDataGrid2&quot;&gt;&lt;/localui:MessageDataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- &#10;                             这是一个使用Dynamic动态类型关联的DataGrid，&#10;                             这样一来，如果有非常多的同类型的表格，就不用为每个表格再去手工建立数据模型了&#10;                        --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;7&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid_AutoGenCol&quot;/&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 一个用于接收DataGrid空间拖拽事件的实验控件 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;8&quot;&gt;&#10;                            &lt;Label x:Name=&quot;ReceiveDataLabel&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;&#10;                    &lt;!-- !!综合使用,比较实用!!DataGrid的应用实例 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;2&quot;&gt;&#10;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;                        &lt;!-- &#10;                            Dynamic类型绑定DataGrid的同时，丰富单元格内显示类型&#10;                        --&gt;&#10;                        &lt;DataGrid Grid.Row=&quot;0&quot; AutoGenerateColumns=&quot;False&quot; SelectionMode=&quot;Single&quot; x:Name=&quot;MsgDataGrid_AutoGenColandCellMore&quot; &#10;                                  ItemsSource=&quot;{Binding Path=.}&quot; SelectionUnit=&quot;Cell&quot;/&gt;&#10;&#10;                        &lt;!--&#10;                            将Dynamic动态表封装成用户控件&#10;                        --&gt;&#10;                        &lt;localui:DyDataGrid x:Name=&quot;DynamicDataGrid&quot; Grid.Row=&quot;1&quot; &gt;&lt;/localui:DyDataGrid&gt;&#10;&#10;                        &lt;ScrollViewer Grid.Row=&quot;3&quot;&gt;&#10;                            &lt;Label x:Name=&quot;ReceiveDataLabel2&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;&#10;                    &lt;!-- 这一列涉及TreeView控件的使用 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;3&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;!-- 通过组合模式实现的树形结构 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;一个树形结构的类型容器，关联放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView x:Name=&quot;tv_composite&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;!-- 简单的通过读取Resourcees中的静态XML格式的树形结构 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;静态XML数据，放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView ItemsSource=&quot;{Binding Source={StaticResource xdp}}&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate ItemsSource=&quot;{Binding XPath=Folder}&quot;&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding XPath=@Name}&quot;/&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;Button Content=&quot;Start Parse XML&quot; Click=&quot;StartParseXML&quot; Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;&#10;                        &lt;Button Content=&quot;Refresh TreeView&quot; Click=&quot;RefreshTreeView&quot; Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;&#10;                        &lt;!-- 通过读取XML文件来填写属性结构的模板 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;4&quot;&gt;&#10;                            &lt;TreeView x:Name=&quot;TreeViewReadFromXMLFile&quot;&gt;&#10;                                &lt;TreeView.ItemTemplate&gt;&#10;                                    &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot;&gt;&#10;                                        &lt;StackPanel&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                        &lt;/StackPanel&gt;&#10;                                    &lt;/HierarchicalDataTemplate&gt;&#10;                                &lt;/TreeView.ItemTemplate&gt;&#10;                            &lt;/TreeView&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;ListBox x:Name=&quot;SearchRes&quot; Grid.Row=&quot;5&quot;&gt;&lt;/ListBox&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;                &lt;/Grid&gt;&#10;            &lt;/TabItem&gt;&#10;&#10;&#10;            &lt;TabItem Header=&quot;小实验&quot;&gt;&#10;                &lt;Grid&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!----&gt;&#10;                            &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Button Content=&quot;触发接口IEnumerable的实验程序&quot; Click=&quot;TryEnumerable&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;                        &#10;                            &lt;!-- 一个使用线程池特性BackgroundWorkder执行的进度条处理 --&gt;&#10;                            &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;ProgressBar x:Name=&quot;psb&quot; Style=&quot;{DynamicResource ProgressBarStyle1}&quot;&gt;&lt;/ProgressBar&gt;&#10;                                    &lt;Button Content=&quot;开始异步处理&quot; Click=&quot;StartBackgroundProgress&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;                                    &lt;Button Content=&quot;停止异步处理&quot; Click=&quot;StopBackgroundProgress&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;Border Grid.Row=&quot;2&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label x:Name=&quot;time_span_second&quot;&gt;0&lt;/Label&gt;&#10;                                    &lt;Button Content=&quot;开始计时&quot; x:Name=&quot;Time_Span_Button&quot; Click=&quot;TimeTick&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                        &lt;/Grid&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;                &lt;/Grid&gt;&#10;            &lt;/TabItem&gt;&#10;            &#10;            &lt;TabItem Header=&quot;接口测试&quot;&gt;&#10;                &lt;Grid x:Name=&quot;Interface_Grid&quot;&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;29&quot;&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition Width=&quot;171&quot;/&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;Grid Grid.Column=&quot;0&quot; Grid.ColumnSpan=&quot;2&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEquatable:&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_1&quot;&gt;比较两个值—没有继承IEquatable时&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_2&quot;&gt;比较两个值—重载GetHashCode&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_3&quot;&gt;比较两个值—继承IEquatable&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_4&quot;&gt;用ICompare作为函数入参&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEnumerable&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartForeach_1&quot;&gt;开始迭代&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;                    &lt;/Grid&gt;&#10;&#10;                &lt;/Grid&gt;&#10;&#10;&#10;            &lt;/TabItem&gt;&#10;&#10;&#10;        &lt;/TabControl&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="6873:38983" ph="&lt;&lt;TabItem Header=&quot;前端\路由事件\依赖属性\命令&quot;&gt;&#10;                &lt;Grid&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第一列：WPF基础知识--&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第二列：WPF高级知识，路由事件\依赖属性\命令--&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第三列：WPF如何解耦和前后端代码--&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;!-- WPF的纯前端交互处理 --&gt;&#10;                    &lt;DockPanel Grid.Column=&quot;0&quot; Margin=&quot;10,0,10,0&quot; x:Name=&quot;None_RouteEvent_DockPanel&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 使用Style对控件进行定制化，即所谓的CSS和Javascript --&gt;&#10;                            &lt;Border Grid.Row=&quot;0&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label routeevt:ButtonTime.ReportTime=&quot;RptTime&quot; x:Name=&quot;StyleWPF&quot;&gt;Style的用法:&lt;/Label&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource BlueButton}&quot; Margin=&quot;0,5&quot;&gt;蓝色按钮&lt;/Button&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource ButtonTrigger}&quot;&gt;蓝色按钮和触发事件&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- WPF还支持画线，画图 --&gt;&#10;                            &lt;Border Grid.Row=&quot;1&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label&gt;用WPF画图&lt;/Label&gt;&#10;                                    &lt;Canvas x:Name=&quot;canvas1&quot;&gt;&lt;/Canvas&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- 使用controlTemplate组合一个控件出来 --&gt;&#10;                            &lt;Border Grid.Row=&quot;2&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;在前端直接用ControlTemplate组合用户控件&lt;/Label&gt;&#10;                                    &lt;UserControl x:Name=&quot;uc&quot; Template=&quot;{StaticResource cTmp}&quot; Grid.Row=&quot;2&quot;/&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- 可以使用Binding关联一个静态Source，既然是静态Source，Path就使用.来代替（因为不用指定属性） --&gt;&#10;                            &lt;TextBox x:Name=&quot;tb&quot; Text=&quot;{Binding Path=., Source={StaticResource ResourceKey=BindingStatic}}&quot;  Style=&quot;{StaticResource tbstyle}&quot; Grid.Row=&quot;3&quot;/&gt;&#10;&#10;                            &lt;!-- 也可以使用Binding关联其他控件的属性 --&gt;&#10;                            &lt;Border Grid.Row=&quot;4&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;控件绑定前端元素：&lt;/Label&gt;&#10;                                    &lt;!-- 在控件中具有DependencyProperty能力的属性，才可以支持将Binding实例赋值到这个属性上 --&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}&quot; Width=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Slider x:Name=&quot;slider1&quot; Maximum=&quot;20&quot; Width=&quot;150&quot;&gt;&lt;/Slider&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                        &lt;/Grid&gt;&#10;&#10;                    &lt;/DockPanel&gt;&#10;&#10;                    &lt;!-- 路由事件和依赖属性 --&gt;&#10;                    &lt;DockPanel Grid.Column=&quot;1&quot; x:Name=&quot;DockPanel_RouteEvent&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 路由事件和依赖属性都在这里 --&gt;&#10;                            &lt;Grid x:Name=&quot;RouteEventGrid1&quot; Grid.Row=&quot;0&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                &#10;                                &lt;StackPanel x:Name=&quot;sp1&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                    &#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.RowDefinitions&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                                        &lt;!-- ！！不在timebutton的路由路径上，所以路由事件无法到达！！ --&gt;&#10;                                        &lt;StackPanel x:Name=&quot;sp2&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                        &lt;/StackPanel&gt;&#10;&#10;                                        &lt;routeevt:ButtonTime x:Name=&quot;timebutton&quot; Height=&quot;40&quot; Grid.Row=&quot;1&quot; Click=&quot;TimeButton_Click&quot; routeevt:ButtonTime.ReportTime=&quot;Button_Click2&quot;&gt;&#10;                                            我是一个从Button继承带有路由事件的按钮&#10;                                        &lt;/routeevt:ButtonTime&gt;&#10;&#10;                                    &lt;/Grid&gt;&#10;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;&#10;                            &lt;!-- WPF中的命令系统 --&gt;&#10;                            &lt;Grid Grid.Row=&quot;1&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Button x:Name=&quot;CommandButton&quot;&gt;清空命令(清空以上输入)&lt;/Button&gt;&#10;                                    &#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;                            &#10;                            &lt;!-- WPF中的命令系统二 --&gt;&#10;                            &lt;Grid Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel2&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox2&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;&#10;                            &lt;Grid Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&#10;                            &lt;/Grid&gt;&#10;                            &#10;                        &lt;/Grid&gt;&#10;                    &lt;/DockPanel&gt;&#10;&#10;                    &lt;!-- 所有都是自定义控件，看看控件解耦和之后，如何处理控件之间的关系 --&gt;&#10;                    &lt;DockPanel Grid.Column=&quot;2&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;180&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 搜索TextBox，更新下边的TreeView --&gt;&#10;                            &lt;Border BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;0,10,0,10&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;localui:SearchTextBox&gt;&lt;/localui:SearchTextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;&#10;                        &lt;/Grid&gt;&#10;                    &lt;/DockPanel&gt;&#10;&#10;                &lt;/Grid&gt;&#10;            &lt;/TabItem&gt; &lt;TabItem Header=&quot;Binding专用&quot;&gt;&#10;&#10;                &lt;Grid&gt;&#10;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;350&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;400&quot;/&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;有关于Binding的本质：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingBase&quot;&gt;&lt;/Label&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel&quot; Content=&quot;{Binding Path=m_iA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;2&quot;&gt;&#10;                            &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联（静态属性）：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel2&quot; Content=&quot;{Binding Path=m_sA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;                    &lt;/Grid&gt;&#10;&#10;                &lt;/Grid&gt;&#10;            &lt;/TabItem&gt; &lt;TabItem x:Name=&quot;AllControlUsage&quot; Header=&quot;各类控件的使用&quot;&gt;&#10;&#10;                &lt;Grid&gt;&#10;                    &lt;!-- 总宽度1000 --&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;500&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;500&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;/&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;!-- 总高度800 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;170&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;!-- &#10;                            在此使用DataContext指定一个ClassA的一个实例，&#10;                            并且在该区域内的所有控件都能访问这个类实例的属性 &#10;                        --&gt;&#10;                        &lt;Border  BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;!-- 在Border范围内实例化了一个ClassA，名为class_a --&gt;&#10;                            &lt;Border.DataContext&gt;&#10;                                &lt;local:ClassA x:Name=&quot;class_a&quot;&gt;&lt;/local:ClassA&gt;&#10;                            &lt;/Border.DataContext&gt;&#10;&#10;                            &lt;!-- 指定了DataContext后，可以通过Binding的path关联实例对应的属性 --&gt;&#10;                            &lt;TreeView Name=&quot;tree&quot;&gt;&#10;                                &lt;TreeViewItem Header=&quot;Root&quot;&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding Path = m_A}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding m_B}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                &lt;/TreeViewItem&gt;&#10;                            &lt;/TreeView&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl（ListBox）类型的控件，使用ItemSource进行Binding --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox x:Name=&quot;PersonID&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList&quot; Margin=&quot;0,5&quot;&gt;&#10;                                    &lt;ListBox.ItemTemplate&gt;&#10;                                        &lt;DataTemplate&gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_ID}&quot; Width=&quot;30&quot;/&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_Name}&quot; Width=&quot;60&quot;/&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/DataTemplate&gt;&#10;                                    &lt;/ListBox.ItemTemplate&gt;&#10;                                &lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl（ListBox）类型的控件，使用ItemSource进行Binding --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;2&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox Text =&quot;{Binding m_ID}&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList2&quot; Margin=&quot;0,5&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl(ListBox)控件，使用一个List&lt;Person&gt;绑定 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;3&quot; Margin=&quot;5,5,5,5&quot; &gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;!-- &#10;                                     每个控件都有自己的DataContext&#10;                                     DataContext可以指定为某一个区域 &#10;                                     这样使用DataContext，也相当于实例化了一个Student对象&#10;                                --&gt;&#10;                                &lt;StackPanel.DataContext&gt;&#10;                                    &lt;local:Student x:Name=&quot;stus&quot;&gt;&lt;/local:Student&gt;&#10;                                &lt;/StackPanel.DataContext&gt;&#10;                                &lt;ListBox x:Name=&quot;StuList&quot; ItemsSource=&quot;{Binding m_StuList}&quot; DisplayMemberPath=&quot;m_Name&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 一个实时更新的输入框，绑定函数返回值的例子 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;4&quot; Margin=&quot;5,5,5,5&quot; &gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcX&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcY&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcRes&quot;&gt;&lt;/TextBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 这个是学习依赖属性用的，DP暂时没学透彻呢 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;5&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;text1&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;Button x:Name=&quot;GetInputButton&quot; Content=&quot;获取输入框内容&quot; Click=&quot;GetDepProperty&quot; &gt;&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;&#10;                    &lt;!-- 这一列涉及控件DataGrid的使用方法 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;1&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;30&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;30&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;120&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;120&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Label Grid.Row=&quot;0&quot;&gt;这是一个DataGrid最基础的实例&lt;/Label&gt;&#10;                        &lt;!-- 在MSDN中，一个最为基础的DataGrid的使用方法 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid x:Name=&quot;CustomerDataGrid&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot;  &gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding FirstName}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column2&quot; Binding=&quot;{Binding LastName}&quot; /&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column3&quot; Binding=&quot;{Binding Email}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column4&quot; Binding=&quot;{Binding IsMember}&quot; /&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column5&quot; Binding=&quot;{Binding cell.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Label Grid.Row=&quot;2&quot;&gt;这是一个带有多个事件的DataGrid&lt;/Label&gt;&#10;                        &lt;!-- 对DataGrid进行更加丰富的操作，比如单元格编辑事件等等 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;3&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid x:Name=&quot;CustomerDataGrid_AddEvent&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot; SelectionUnit=&quot;Cell&quot; SelectionMode=&quot;Single&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding column1.name}&quot;/&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column2&quot; Binding=&quot;{Binding column2.name}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column3&quot; Binding=&quot;{Binding column3.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 触发单元格自动刷新 --&gt;&#10;                        &lt;StackPanel Grid.Row=&quot;4&quot;&gt;&#10;                            &lt;Label&gt;以下使用了数据模板为DataGrid丰富内容，并实现自动刷新功能&lt;/Label&gt;&#10;                            &lt;Button Click=&quot;Button_Click&quot;&gt;开始刷新DataGrid&lt;/Button&gt;&#10;                        &lt;/StackPanel&gt;&#10;&#10;                        &lt;!-- 使用DataTemplate对.NET自带的DataGrid进行定制化 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;5&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;!-- 一个数据模板，使用在后边DataGrid的最后一个单元格 --&gt;&#10;                            &lt;Border.Resources&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellEditingTemplate&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.ColumnDefinitions&gt;&#10;                                            &lt;ColumnDefinition/&gt;&#10;                                            &lt;ColumnDefinition Width=&quot;15&quot;/&gt;&#10;                                        &lt;/Grid.ColumnDefinitions&gt;&#10;                                        &lt;TextBlock Grid.Column=&quot;0&quot; Text=&quot;{Binding m_content}&quot;/&gt;&#10;                                        &lt;Button Grid.Column=&quot;1&quot; Content=&quot;...&quot; Command=&quot;{Binding ShowCommand}&quot;/&gt;&#10;                                    &lt;/Grid&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;!-- 数据模板对应的类型是MessageModel --&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellDropBox&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;ComboBox ItemsSource=&quot;{Binding m_content_detail}&quot; SelectedIndex=&quot;0&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;DataTemplate x:Key=&quot;cellTextBlock&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;TextBlock Text=&quot;{Binding m_content_detail}&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                            &lt;/Border.Resources&gt;&#10;&#10;                            &lt;!-- 表格，用来显示MessageVM中所有的消息,使用ItemsSource指定数据源 --&gt;&#10;                            &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;编号&quot; Binding=&quot;{Binding m_No}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;时间戳&quot; Binding=&quot;{Binding m_time}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息内容&quot; CellTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot; &#10;                                                            CellEditingTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息详情&quot; CellTemplate=&quot;{StaticResource ResourceKey=cellDropBox}&quot;/&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 表格，和上边的表格一样，但是只是应用了usercontrol封装了一下 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;6&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;localui:MessageDataGrid x:Name=&quot;MsgDataGrid2&quot;&gt;&lt;/localui:MessageDataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- &#10;                             这是一个使用Dynamic动态类型关联的DataGrid，&#10;                             这样一来，如果有非常多的同类型的表格，就不用为每个表格再去手工建立数据模型了&#10;                        --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;7&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid_AutoGenCol&quot;/&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 一个用于接收DataGrid空间拖拽事件的实验控件 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;8&quot;&gt;&#10;                            &lt;Label x:Name=&quot;ReceiveDataLabel&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;&#10;                    &lt;!-- !!综合使用,比较实用!!DataGrid的应用实例 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;2&quot;&gt;&#10;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;                        &lt;!-- &#10;                            Dynamic类型绑定DataGrid的同时，丰富单元格内显示类型&#10;                        --&gt;&#10;                        &lt;DataGrid Grid.Row=&quot;0&quot; AutoGenerateColumns=&quot;False&quot; SelectionMode=&quot;Single&quot; x:Name=&quot;MsgDataGrid_AutoGenColandCellMore&quot; &#10;                                  ItemsSource=&quot;{Binding Path=.}&quot; SelectionUnit=&quot;Cell&quot;/&gt;&#10;&#10;                        &lt;!--&#10;                            将Dynamic动态表封装成用户控件&#10;                        --&gt;&#10;                        &lt;localui:DyDataGrid x:Name=&quot;DynamicDataGrid&quot; Grid.Row=&quot;1&quot; &gt;&lt;/localui:DyDataGrid&gt;&#10;&#10;                        &lt;ScrollViewer Grid.Row=&quot;3&quot;&gt;&#10;                            &lt;Label x:Name=&quot;ReceiveDataLabel2&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;&#10;                    &lt;!-- 这一列涉及TreeView控件的使用 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;3&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;!-- 通过组合模式实现的树形结构 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;一个树形结构的类型容器，关联放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView x:Name=&quot;tv_composite&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;!-- 简单的通过读取Resourcees中的静态XML格式的树形结构 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;静态XML数据，放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView ItemsSource=&quot;{Binding Source={StaticResource xdp}}&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate ItemsSource=&quot;{Binding XPath=Folder}&quot;&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding XPath=@Name}&quot;/&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;Button Content=&quot;Start Parse XML&quot; Click=&quot;StartParseXML&quot; Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;&#10;                        &lt;Button Content=&quot;Refresh TreeView&quot; Click=&quot;RefreshTreeView&quot; Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;&#10;                        &lt;!-- 通过读取XML文件来填写属性结构的模板 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;4&quot;&gt;&#10;                            &lt;TreeView x:Name=&quot;TreeViewReadFromXMLFile&quot;&gt;&#10;                                &lt;TreeView.ItemTemplate&gt;&#10;                                    &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot;&gt;&#10;                                        &lt;StackPanel&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                        &lt;/StackPanel&gt;&#10;                                    &lt;/HierarchicalDataTemplate&gt;&#10;                                &lt;/TreeView.ItemTemplate&gt;&#10;                            &lt;/TreeView&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;ListBox x:Name=&quot;SearchRes&quot; Grid.Row=&quot;5&quot;&gt;&lt;/ListBox&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;                &lt;/Grid&gt;&#10;            &lt;/TabItem&gt; &lt;TabItem Header=&quot;小实验&quot;&gt;&#10;                &lt;Grid&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!----&gt;&#10;                            &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Button Content=&quot;触发接口IEnumerable的实验程序&quot; Click=&quot;TryEnumerable&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;                        &#10;                            &lt;!-- 一个使用线程池特性BackgroundWorkder执行的进度条处理 --&gt;&#10;                            &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;ProgressBar x:Name=&quot;psb&quot; Style=&quot;{DynamicResource ProgressBarStyle1}&quot;&gt;&lt;/ProgressBar&gt;&#10;                                    &lt;Button Content=&quot;开始异步处理&quot; Click=&quot;StartBackgroundProgress&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;                                    &lt;Button Content=&quot;停止异步处理&quot; Click=&quot;StopBackgroundProgress&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;Border Grid.Row=&quot;2&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label x:Name=&quot;time_span_second&quot;&gt;0&lt;/Label&gt;&#10;                                    &lt;Button Content=&quot;开始计时&quot; x:Name=&quot;Time_Span_Button&quot; Click=&quot;TimeTick&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                        &lt;/Grid&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;                &lt;/Grid&gt;&#10;            &lt;/TabItem&gt; &lt;TabItem Header=&quot;接口测试&quot;&gt;&#10;                &lt;Grid x:Name=&quot;Interface_Grid&quot;&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;29&quot;&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition Width=&quot;171&quot;/&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;Grid Grid.Column=&quot;0&quot; Grid.ColumnSpan=&quot;2&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEquatable:&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_1&quot;&gt;比较两个值—没有继承IEquatable时&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_2&quot;&gt;比较两个值—重载GetHashCode&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_3&quot;&gt;比较两个值—继承IEquatable&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_4&quot;&gt;用ICompare作为函数入参&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEnumerable&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartForeach_1&quot;&gt;开始迭代&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;                    &lt;/Grid&gt;&#10;&#10;                &lt;/Grid&gt;&#10;&#10;&#10;            &lt;/TabItem&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="6947:15257" ph="&lt;&lt;Grid&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第一列：WPF基础知识--&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第二列：WPF高级知识，路由事件\依赖属性\命令--&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第三列：WPF如何解耦和前后端代码--&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;!-- WPF的纯前端交互处理 --&gt;&#10;                    &lt;DockPanel Grid.Column=&quot;0&quot; Margin=&quot;10,0,10,0&quot; x:Name=&quot;None_RouteEvent_DockPanel&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 使用Style对控件进行定制化，即所谓的CSS和Javascript --&gt;&#10;                            &lt;Border Grid.Row=&quot;0&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label routeevt:ButtonTime.ReportTime=&quot;RptTime&quot; x:Name=&quot;StyleWPF&quot;&gt;Style的用法:&lt;/Label&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource BlueButton}&quot; Margin=&quot;0,5&quot;&gt;蓝色按钮&lt;/Button&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource ButtonTrigger}&quot;&gt;蓝色按钮和触发事件&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- WPF还支持画线，画图 --&gt;&#10;                            &lt;Border Grid.Row=&quot;1&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label&gt;用WPF画图&lt;/Label&gt;&#10;                                    &lt;Canvas x:Name=&quot;canvas1&quot;&gt;&lt;/Canvas&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- 使用controlTemplate组合一个控件出来 --&gt;&#10;                            &lt;Border Grid.Row=&quot;2&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;在前端直接用ControlTemplate组合用户控件&lt;/Label&gt;&#10;                                    &lt;UserControl x:Name=&quot;uc&quot; Template=&quot;{StaticResource cTmp}&quot; Grid.Row=&quot;2&quot;/&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- 可以使用Binding关联一个静态Source，既然是静态Source，Path就使用.来代替（因为不用指定属性） --&gt;&#10;                            &lt;TextBox x:Name=&quot;tb&quot; Text=&quot;{Binding Path=., Source={StaticResource ResourceKey=BindingStatic}}&quot;  Style=&quot;{StaticResource tbstyle}&quot; Grid.Row=&quot;3&quot;/&gt;&#10;&#10;                            &lt;!-- 也可以使用Binding关联其他控件的属性 --&gt;&#10;                            &lt;Border Grid.Row=&quot;4&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;控件绑定前端元素：&lt;/Label&gt;&#10;                                    &lt;!-- 在控件中具有DependencyProperty能力的属性，才可以支持将Binding实例赋值到这个属性上 --&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}&quot; Width=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Slider x:Name=&quot;slider1&quot; Maximum=&quot;20&quot; Width=&quot;150&quot;&gt;&lt;/Slider&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                        &lt;/Grid&gt;&#10;&#10;                    &lt;/DockPanel&gt;&#10;&#10;                    &lt;!-- 路由事件和依赖属性 --&gt;&#10;                    &lt;DockPanel Grid.Column=&quot;1&quot; x:Name=&quot;DockPanel_RouteEvent&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 路由事件和依赖属性都在这里 --&gt;&#10;                            &lt;Grid x:Name=&quot;RouteEventGrid1&quot; Grid.Row=&quot;0&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                &#10;                                &lt;StackPanel x:Name=&quot;sp1&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                    &#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.RowDefinitions&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                                        &lt;!-- ！！不在timebutton的路由路径上，所以路由事件无法到达！！ --&gt;&#10;                                        &lt;StackPanel x:Name=&quot;sp2&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                        &lt;/StackPanel&gt;&#10;&#10;                                        &lt;routeevt:ButtonTime x:Name=&quot;timebutton&quot; Height=&quot;40&quot; Grid.Row=&quot;1&quot; Click=&quot;TimeButton_Click&quot; routeevt:ButtonTime.ReportTime=&quot;Button_Click2&quot;&gt;&#10;                                            我是一个从Button继承带有路由事件的按钮&#10;                                        &lt;/routeevt:ButtonTime&gt;&#10;&#10;                                    &lt;/Grid&gt;&#10;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;&#10;                            &lt;!-- WPF中的命令系统 --&gt;&#10;                            &lt;Grid Grid.Row=&quot;1&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Button x:Name=&quot;CommandButton&quot;&gt;清空命令(清空以上输入)&lt;/Button&gt;&#10;                                    &#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;                            &#10;                            &lt;!-- WPF中的命令系统二 --&gt;&#10;                            &lt;Grid Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel2&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox2&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;&#10;                            &lt;Grid Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&#10;                            &lt;/Grid&gt;&#10;                            &#10;                        &lt;/Grid&gt;&#10;                    &lt;/DockPanel&gt;&#10;&#10;                    &lt;!-- 所有都是自定义控件，看看控件解耦和之后，如何处理控件之间的关系 --&gt;&#10;                    &lt;DockPanel Grid.Column=&quot;2&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;180&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 搜索TextBox，更新下边的TreeView --&gt;&#10;                            &lt;Border BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;0,10,0,10&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;localui:SearchTextBox&gt;&lt;/localui:SearchTextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;&#10;                        &lt;/Grid&gt;&#10;                    &lt;/DockPanel&gt;&#10;&#10;                &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="6998:15234" ph="&lt;&lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第一列：WPF基础知识--&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第二列：WPF高级知识，路由事件\依赖属性\命令--&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;  &lt;!--第三列：WPF如何解耦和前后端代码--&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt; &lt;DockPanel Grid.Column=&quot;0&quot; Margin=&quot;10,0,10,0&quot; x:Name=&quot;None_RouteEvent_DockPanel&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 使用Style对控件进行定制化，即所谓的CSS和Javascript --&gt;&#10;                            &lt;Border Grid.Row=&quot;0&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label routeevt:ButtonTime.ReportTime=&quot;RptTime&quot; x:Name=&quot;StyleWPF&quot;&gt;Style的用法:&lt;/Label&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource BlueButton}&quot; Margin=&quot;0,5&quot;&gt;蓝色按钮&lt;/Button&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource ButtonTrigger}&quot;&gt;蓝色按钮和触发事件&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- WPF还支持画线，画图 --&gt;&#10;                            &lt;Border Grid.Row=&quot;1&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label&gt;用WPF画图&lt;/Label&gt;&#10;                                    &lt;Canvas x:Name=&quot;canvas1&quot;&gt;&lt;/Canvas&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- 使用controlTemplate组合一个控件出来 --&gt;&#10;                            &lt;Border Grid.Row=&quot;2&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;在前端直接用ControlTemplate组合用户控件&lt;/Label&gt;&#10;                                    &lt;UserControl x:Name=&quot;uc&quot; Template=&quot;{StaticResource cTmp}&quot; Grid.Row=&quot;2&quot;/&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- 可以使用Binding关联一个静态Source，既然是静态Source，Path就使用.来代替（因为不用指定属性） --&gt;&#10;                            &lt;TextBox x:Name=&quot;tb&quot; Text=&quot;{Binding Path=., Source={StaticResource ResourceKey=BindingStatic}}&quot;  Style=&quot;{StaticResource tbstyle}&quot; Grid.Row=&quot;3&quot;/&gt;&#10;&#10;                            &lt;!-- 也可以使用Binding关联其他控件的属性 --&gt;&#10;                            &lt;Border Grid.Row=&quot;4&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;控件绑定前端元素：&lt;/Label&gt;&#10;                                    &lt;!-- 在控件中具有DependencyProperty能力的属性，才可以支持将Binding实例赋值到这个属性上 --&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}&quot; Width=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Slider x:Name=&quot;slider1&quot; Maximum=&quot;20&quot; Width=&quot;150&quot;&gt;&lt;/Slider&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                        &lt;/Grid&gt;&#10;&#10;                    &lt;/DockPanel&gt; &lt;DockPanel Grid.Column=&quot;1&quot; x:Name=&quot;DockPanel_RouteEvent&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 路由事件和依赖属性都在这里 --&gt;&#10;                            &lt;Grid x:Name=&quot;RouteEventGrid1&quot; Grid.Row=&quot;0&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                &#10;                                &lt;StackPanel x:Name=&quot;sp1&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                    &#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.RowDefinitions&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                                        &lt;!-- ！！不在timebutton的路由路径上，所以路由事件无法到达！！ --&gt;&#10;                                        &lt;StackPanel x:Name=&quot;sp2&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                        &lt;/StackPanel&gt;&#10;&#10;                                        &lt;routeevt:ButtonTime x:Name=&quot;timebutton&quot; Height=&quot;40&quot; Grid.Row=&quot;1&quot; Click=&quot;TimeButton_Click&quot; routeevt:ButtonTime.ReportTime=&quot;Button_Click2&quot;&gt;&#10;                                            我是一个从Button继承带有路由事件的按钮&#10;                                        &lt;/routeevt:ButtonTime&gt;&#10;&#10;                                    &lt;/Grid&gt;&#10;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;&#10;                            &lt;!-- WPF中的命令系统 --&gt;&#10;                            &lt;Grid Grid.Row=&quot;1&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Button x:Name=&quot;CommandButton&quot;&gt;清空命令(清空以上输入)&lt;/Button&gt;&#10;                                    &#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;                            &#10;                            &lt;!-- WPF中的命令系统二 --&gt;&#10;                            &lt;Grid Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel2&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox2&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;&#10;                            &lt;Grid Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&#10;                            &lt;/Grid&gt;&#10;                            &#10;                        &lt;/Grid&gt;&#10;                    &lt;/DockPanel&gt; &lt;DockPanel Grid.Column=&quot;2&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;180&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 搜索TextBox，更新下边的TreeView --&gt;&#10;                            &lt;Border BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;0,10,0,10&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;localui:SearchTextBox&gt;&lt;/localui:SearchTextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;&#10;                        &lt;/Grid&gt;&#10;                    &lt;/DockPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="7025:7396" ph="&lt;&lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt; &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt; &lt;ColumnDefinition Width=&quot;300&quot;&gt;&lt;/ColumnDefinition&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="7459:10921" ph="&lt;&lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 使用Style对控件进行定制化，即所谓的CSS和Javascript --&gt;&#10;                            &lt;Border Grid.Row=&quot;0&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label routeevt:ButtonTime.ReportTime=&quot;RptTime&quot; x:Name=&quot;StyleWPF&quot;&gt;Style的用法:&lt;/Label&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource BlueButton}&quot; Margin=&quot;0,5&quot;&gt;蓝色按钮&lt;/Button&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource ButtonTrigger}&quot;&gt;蓝色按钮和触发事件&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- WPF还支持画线，画图 --&gt;&#10;                            &lt;Border Grid.Row=&quot;1&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label&gt;用WPF画图&lt;/Label&gt;&#10;                                    &lt;Canvas x:Name=&quot;canvas1&quot;&gt;&lt;/Canvas&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- 使用controlTemplate组合一个控件出来 --&gt;&#10;                            &lt;Border Grid.Row=&quot;2&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;在前端直接用ControlTemplate组合用户控件&lt;/Label&gt;&#10;                                    &lt;UserControl x:Name=&quot;uc&quot; Template=&quot;{StaticResource cTmp}&quot; Grid.Row=&quot;2&quot;/&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;!-- 可以使用Binding关联一个静态Source，既然是静态Source，Path就使用.来代替（因为不用指定属性） --&gt;&#10;                            &lt;TextBox x:Name=&quot;tb&quot; Text=&quot;{Binding Path=., Source={StaticResource ResourceKey=BindingStatic}}&quot;  Style=&quot;{StaticResource tbstyle}&quot; Grid.Row=&quot;3&quot;/&gt;&#10;&#10;                            &lt;!-- 也可以使用Binding关联其他控件的属性 --&gt;&#10;                            &lt;Border Grid.Row=&quot;4&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;控件绑定前端元素：&lt;/Label&gt;&#10;                                    &lt;!-- 在控件中具有DependencyProperty能力的属性，才可以支持将Binding实例赋值到这个属性上 --&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}&quot; Width=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Slider x:Name=&quot;slider1&quot; Maximum=&quot;20&quot; Width=&quot;150&quot;&gt;&lt;/Slider&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                        &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="7606:10887" ph="&lt;&lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt; &lt;Border Grid.Row=&quot;0&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label routeevt:ButtonTime.ReportTime=&quot;RptTime&quot; x:Name=&quot;StyleWPF&quot;&gt;Style的用法:&lt;/Label&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource BlueButton}&quot; Margin=&quot;0,5&quot;&gt;蓝色按钮&lt;/Button&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource ButtonTrigger}&quot;&gt;蓝色按钮和触发事件&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt; &lt;Border Grid.Row=&quot;1&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label&gt;用WPF画图&lt;/Label&gt;&#10;                                    &lt;Canvas x:Name=&quot;canvas1&quot;&gt;&lt;/Canvas&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt; &lt;Border Grid.Row=&quot;2&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;在前端直接用ControlTemplate组合用户控件&lt;/Label&gt;&#10;                                    &lt;UserControl x:Name=&quot;uc&quot; Template=&quot;{StaticResource cTmp}&quot; Grid.Row=&quot;2&quot;/&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt; &lt;TextBox x:Name=&quot;tb&quot; Text=&quot;{Binding Path=., Source={StaticResource ResourceKey=BindingStatic}}&quot;  Style=&quot;{StaticResource tbstyle}&quot; Grid.Row=&quot;3&quot;/&gt; &lt;Border Grid.Row=&quot;4&quot; BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Margin=&quot;0,5&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label&gt;控件绑定前端元素：&lt;/Label&gt;&#10;                                    &lt;!-- 在控件中具有DependencyProperty能力的属性，才可以支持将Binding实例赋值到这个属性上 --&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}&quot; Width=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Slider x:Name=&quot;slider1&quot; Maximum=&quot;20&quot; Width=&quot;150&quot;&gt;&lt;/Slider&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="7641:8175" ph="&lt;&lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="8277:8814" ph="&lt;&lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label routeevt:ButtonTime.ReportTime=&quot;RptTime&quot; x:Name=&quot;StyleWPF&quot;&gt;Style的用法:&lt;/Label&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource BlueButton}&quot; Margin=&quot;0,5&quot;&gt;蓝色按钮&lt;/Button&gt;&#10;                                    &lt;Button Style=&quot;{StaticResource ButtonTrigger}&quot;&gt;蓝色按钮和触发事件&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="8371:8776" ph="&lt;&lt;Label routeevt:ButtonTime.ReportTime=&quot;RptTime&quot; x:Name=&quot;StyleWPF&quot;&gt;Style的用法:&lt;/Label&gt; &lt;Button Style=&quot;{StaticResource BlueButton}&quot; Margin=&quot;0,5&quot;&gt;蓝色按钮&lt;/Button&gt; &lt;Button Style=&quot;{StaticResource ButtonTrigger}&quot;&gt;蓝色按钮和触发事件&lt;/Button&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="8893:9243" ph="&lt;&lt;StackPanel  Margin=&quot;3,3,3,3&quot;&gt;&#10;                                    &lt;Label&gt;用WPF画图&lt;/Label&gt;&#10;                                    &lt;Canvas x:Name=&quot;canvas1&quot;&gt;&lt;/Canvas&gt;&#10;                                &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="9000:9205" ph="&lt;&lt;Label&gt;用WPF画图&lt;/Label&gt; &lt;Canvas x:Name=&quot;canvas1&quot;&gt;&lt;/Canvas&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="9336:9727" ph="&lt;&lt;StackPanel&gt;&#10;                                    &lt;Label&gt;在前端直接用ControlTemplate组合用户控件&lt;/Label&gt;&#10;                                    &lt;UserControl x:Name=&quot;uc&quot; Template=&quot;{StaticResource cTmp}&quot; Grid.Row=&quot;2&quot;/&gt;&#10;                                &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="9443:9689" ph="&lt;&lt;Label&gt;在前端直接用ControlTemplate组合用户控件&lt;/Label&gt; &lt;UserControl x:Name=&quot;uc&quot; Template=&quot;{StaticResource cTmp}&quot; Grid.Row=&quot;2&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="10085:10854" ph="&lt;&lt;StackPanel&gt;&#10;                                    &lt;Label&gt;控件绑定前端元素：&lt;/Label&gt;&#10;                                    &lt;!-- 在控件中具有DependencyProperty能力的属性，才可以支持将Binding实例赋值到这个属性上 --&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}&quot; Width=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Slider x:Name=&quot;slider1&quot; Maximum=&quot;20&quot; Width=&quot;150&quot;&gt;&lt;/Slider&gt;&#10;                                &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="10192:10816" ph="&lt;&lt;Label&gt;控件绑定前端元素：&lt;/Label&gt; &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}&quot; Width=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt; &lt;TextBox Text=&quot;{Binding ElementName=slider1, Path=Width}&quot;&gt;&lt;/TextBox&gt; &lt;Slider x:Name=&quot;slider1&quot; Maximum=&quot;20&quot; Width=&quot;150&quot;&gt;&lt;/Slider&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="10982:14074" ph="&lt;&lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 路由事件和依赖属性都在这里 --&gt;&#10;                            &lt;Grid x:Name=&quot;RouteEventGrid1&quot; Grid.Row=&quot;0&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                &#10;                                &lt;StackPanel x:Name=&quot;sp1&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                    &#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.RowDefinitions&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                                        &lt;!-- ！！不在timebutton的路由路径上，所以路由事件无法到达！！ --&gt;&#10;                                        &lt;StackPanel x:Name=&quot;sp2&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                        &lt;/StackPanel&gt;&#10;&#10;                                        &lt;routeevt:ButtonTime x:Name=&quot;timebutton&quot; Height=&quot;40&quot; Grid.Row=&quot;1&quot; Click=&quot;TimeButton_Click&quot; routeevt:ButtonTime.ReportTime=&quot;Button_Click2&quot;&gt;&#10;                                            我是一个从Button继承带有路由事件的按钮&#10;                                        &lt;/routeevt:ButtonTime&gt;&#10;&#10;                                    &lt;/Grid&gt;&#10;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;&#10;                            &lt;!-- WPF中的命令系统 --&gt;&#10;                            &lt;Grid Grid.Row=&quot;1&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Button x:Name=&quot;CommandButton&quot;&gt;清空命令(清空以上输入)&lt;/Button&gt;&#10;                                    &#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;                            &#10;                            &lt;!-- WPF中的命令系统二 --&gt;&#10;                            &lt;Grid Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel2&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox2&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt;&#10;&#10;                            &lt;Grid Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&#10;                            &lt;/Grid&gt;&#10;                            &#10;                        &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="11105:14041" ph="&lt;&lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt; &lt;Grid x:Name=&quot;RouteEventGrid1&quot; Grid.Row=&quot;0&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                &#10;                                &lt;StackPanel x:Name=&quot;sp1&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                    &#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.RowDefinitions&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                                        &lt;!-- ！！不在timebutton的路由路径上，所以路由事件无法到达！！ --&gt;&#10;                                        &lt;StackPanel x:Name=&quot;sp2&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                        &lt;/StackPanel&gt;&#10;&#10;                                        &lt;routeevt:ButtonTime x:Name=&quot;timebutton&quot; Height=&quot;40&quot; Grid.Row=&quot;1&quot; Click=&quot;TimeButton_Click&quot; routeevt:ButtonTime.ReportTime=&quot;Button_Click2&quot;&gt;&#10;                                            我是一个从Button继承带有路由事件的按钮&#10;                                        &lt;/routeevt:ButtonTime&gt;&#10;&#10;                                    &lt;/Grid&gt;&#10;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt; &lt;Grid Grid.Row=&quot;1&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Button x:Name=&quot;CommandButton&quot;&gt;清空命令(清空以上输入)&lt;/Button&gt;&#10;                                    &#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt; &lt;Grid Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&#10;                                &lt;StackPanel x:Name=&quot;CommandStackPanel2&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox2&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Grid&gt; &lt;Grid Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&#10;                            &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="11140:11674" ph="&lt;&lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="11755:13036" ph="&lt;&lt;StackPanel x:Name=&quot;sp1&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                    &#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.RowDefinitions&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                                        &lt;!-- ！！不在timebutton的路由路径上，所以路由事件无法到达！！ --&gt;&#10;                                        &lt;StackPanel x:Name=&quot;sp2&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                        &lt;/StackPanel&gt;&#10;&#10;                                        &lt;routeevt:ButtonTime x:Name=&quot;timebutton&quot; Height=&quot;40&quot; Grid.Row=&quot;1&quot; Click=&quot;TimeButton_Click&quot; routeevt:ButtonTime.ReportTime=&quot;Button_Click2&quot;&gt;&#10;                                            我是一个从Button继承带有路由事件的按钮&#10;                                        &lt;/routeevt:ButtonTime&gt;&#10;&#10;                                    &lt;/Grid&gt;&#10;&#10;                                &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="11906:13000" ph="&lt;&lt;Grid&gt;&#10;                                        &lt;Grid.RowDefinitions&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                                        &lt;!-- ！！不在timebutton的路由路径上，所以路由事件无法到达！！ --&gt;&#10;                                        &lt;StackPanel x:Name=&quot;sp2&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                        &lt;/StackPanel&gt;&#10;&#10;                                        &lt;routeevt:ButtonTime x:Name=&quot;timebutton&quot; Height=&quot;40&quot; Grid.Row=&quot;1&quot; Click=&quot;TimeButton_Click&quot; routeevt:ButtonTime.ReportTime=&quot;Button_Click2&quot;&gt;&#10;                                            我是一个从Button继承带有路由事件的按钮&#10;                                        &lt;/routeevt:ButtonTime&gt;&#10;&#10;                                    &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="12046:12953" ph="&lt;&lt;Grid.RowDefinitions&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                            &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;&#10;                                        &lt;/Grid.RowDefinitions&gt; &lt;StackPanel x:Name=&quot;sp2&quot; routeevt:ButtonTime.ReportTime=&quot;RptTime&quot;&gt;&#10;                                        &lt;/StackPanel&gt; &lt;routeevt:ButtonTime x:Name=&quot;timebutton&quot; Height=&quot;40&quot; Grid.Row=&quot;1&quot; Click=&quot;TimeButton_Click&quot; routeevt:ButtonTime.ReportTime=&quot;Button_Click2&quot;&gt;&#10;                                            我是一个从Button继承带有路由事件的按钮&#10;                                        &lt;/routeevt:ButtonTime&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="12093:12353" ph="&lt;&lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;40&quot;&gt;&lt;/RowDefinition&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="12478:12598" ph="&lt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="12640:12908" ph="&lt;我是一个从Button继承带有路由事件的按钮.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="13113:13506" ph="&lt;&lt;StackPanel x:Name=&quot;CommandStackPanel&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox&quot;&gt;&lt;/TextBox&gt;&#10;                                    &lt;Button x:Name=&quot;CommandButton&quot;&gt;清空命令(清空以上输入)&lt;/Button&gt;&#10;                                    &#10;                                &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="13179:13470" ph="&lt;&lt;TextBox x:Name=&quot;CommandTextBox&quot;&gt;&lt;/TextBox&gt; &lt;Button x:Name=&quot;CommandButton&quot;&gt;清空命令(清空以上输入)&lt;/Button&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="13612:13881" ph="&lt;&lt;StackPanel x:Name=&quot;CommandStackPanel2&quot;&gt;&#10;                                    &lt;TextBox x:Name=&quot;CommandTextBox2&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="13678:13845" ph="&lt;&lt;TextBox x:Name=&quot;CommandTextBox2&quot;&gt;&lt;/TextBox&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="13911:13980" ph="&lt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="14157:15209" ph="&lt;&lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;180&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!-- 搜索TextBox，更新下边的TreeView --&gt;&#10;                            &lt;Border BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;0,10,0,10&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;localui:SearchTextBox&gt;&lt;/localui:SearchTextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;&#10;                        &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="14209:15176" ph="&lt;&lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;180&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt; &lt;Border BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;0,10,0,10&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;localui:SearchTextBox&gt;&lt;/localui:SearchTextBox&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="14244:14778" ph="&lt;&lt;RowDefinition Height=&quot;180&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;150&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;120&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;100&quot;&gt;&lt;/RowDefinition&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="14869:15142" ph="&lt;&lt;StackPanel&gt;&#10;                                    &lt;localui:SearchTextBox&gt;&lt;/localui:SearchTextBox&gt;&#10;                                &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="14962:15104" ph="&lt;&lt;localui:SearchTextBox&gt;&lt;/localui:SearchTextBox&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="15271:17410" ph="&lt;&lt;Grid&gt;&#10;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;350&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;400&quot;/&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;有关于Binding的本质：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingBase&quot;&gt;&lt;/Label&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel&quot; Content=&quot;{Binding Path=m_iA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;2&quot;&gt;&#10;                            &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联（静态属性）：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel2&quot; Content=&quot;{Binding Path=m_sA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;                    &lt;/Grid&gt;&#10;&#10;                &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="15317:17387" ph="&lt;&lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;350&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;300&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;400&quot;/&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt; &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;有关于Binding的本质：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingBase&quot;&gt;&lt;/Label&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel&quot; Content=&quot;{Binding Path=m_iA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;2&quot;&gt;&#10;                            &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联（静态属性）：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel2&quot; Content=&quot;{Binding Path=m_sA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;                    &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="15345:15639" ph="&lt;&lt;ColumnDefinition Width=&quot;350&quot;/&gt; &lt;ColumnDefinition Width=&quot;300&quot;/&gt; &lt;ColumnDefinition Width=&quot;300&quot;/&gt; &lt;ColumnDefinition Width=&quot;400&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="15661:17362" ph="&lt;&lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;有关于Binding的本质：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingBase&quot;&gt;&lt;/Label&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel&quot; Content=&quot;{Binding Path=m_iA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;2&quot;&gt;&#10;                            &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联（静态属性）：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel2&quot; Content=&quot;{Binding Path=m_sA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="15708:16208" ph="&lt;&lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="16234:16543" ph="&lt;&lt;StackPanel&gt;&#10;                                &lt;Label&gt;有关于Binding的本质：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingBase&quot;&gt;&lt;/Label&gt;&#10;                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="16324:16509" ph="&lt;&lt;Label&gt;有关于Binding的本质：&lt;/Label&gt; &lt;Label x:Name=&quot;BindingBase&quot;&gt;&lt;/Label&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="16569:16935" ph="&lt;&lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel&quot; Content=&quot;{Binding Path=m_iA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="16659:16901" ph="&lt;&lt;Label&gt;利用DataContext来Binding关联：&lt;/Label&gt; &lt;Label x:Name=&quot;BindingLabel&quot; Content=&quot;{Binding Path=m_iA}&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="16961:17334" ph="&lt;&lt;StackPanel Orientation=&quot;Vertical&quot;&gt;&#10;                                &lt;Label&gt;利用DataContext来Binding关联（静态属性）：&lt;/Label&gt;&#10;                                &lt;Label x:Name=&quot;BindingLabel2&quot; Content=&quot;{Binding Path=m_sA}&quot;/&gt;&#10;                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="17051:17300" ph="&lt;&lt;Label&gt;利用DataContext来Binding关联（静态属性）：&lt;/Label&gt; &lt;Label x:Name=&quot;BindingLabel2&quot; Content=&quot;{Binding Path=m_sA}&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="17457:34720" ph="&lt;&lt;Grid&gt;&#10;                    &lt;!-- 总宽度1000 --&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;500&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;500&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;/&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;!-- 总高度800 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;170&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;!-- &#10;                            在此使用DataContext指定一个ClassA的一个实例，&#10;                            并且在该区域内的所有控件都能访问这个类实例的属性 &#10;                        --&gt;&#10;                        &lt;Border  BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;!-- 在Border范围内实例化了一个ClassA，名为class_a --&gt;&#10;                            &lt;Border.DataContext&gt;&#10;                                &lt;local:ClassA x:Name=&quot;class_a&quot;&gt;&lt;/local:ClassA&gt;&#10;                            &lt;/Border.DataContext&gt;&#10;&#10;                            &lt;!-- 指定了DataContext后，可以通过Binding的path关联实例对应的属性 --&gt;&#10;                            &lt;TreeView Name=&quot;tree&quot;&gt;&#10;                                &lt;TreeViewItem Header=&quot;Root&quot;&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding Path = m_A}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding m_B}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                &lt;/TreeViewItem&gt;&#10;                            &lt;/TreeView&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl（ListBox）类型的控件，使用ItemSource进行Binding --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox x:Name=&quot;PersonID&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList&quot; Margin=&quot;0,5&quot;&gt;&#10;                                    &lt;ListBox.ItemTemplate&gt;&#10;                                        &lt;DataTemplate&gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_ID}&quot; Width=&quot;30&quot;/&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_Name}&quot; Width=&quot;60&quot;/&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/DataTemplate&gt;&#10;                                    &lt;/ListBox.ItemTemplate&gt;&#10;                                &lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl（ListBox）类型的控件，使用ItemSource进行Binding --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;2&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox Text =&quot;{Binding m_ID}&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList2&quot; Margin=&quot;0,5&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl(ListBox)控件，使用一个List&lt;Person&gt;绑定 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;3&quot; Margin=&quot;5,5,5,5&quot; &gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;!-- &#10;                                     每个控件都有自己的DataContext&#10;                                     DataContext可以指定为某一个区域 &#10;                                     这样使用DataContext，也相当于实例化了一个Student对象&#10;                                --&gt;&#10;                                &lt;StackPanel.DataContext&gt;&#10;                                    &lt;local:Student x:Name=&quot;stus&quot;&gt;&lt;/local:Student&gt;&#10;                                &lt;/StackPanel.DataContext&gt;&#10;                                &lt;ListBox x:Name=&quot;StuList&quot; ItemsSource=&quot;{Binding m_StuList}&quot; DisplayMemberPath=&quot;m_Name&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 一个实时更新的输入框，绑定函数返回值的例子 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;4&quot; Margin=&quot;5,5,5,5&quot; &gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcX&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcY&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcRes&quot;&gt;&lt;/TextBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 这个是学习依赖属性用的，DP暂时没学透彻呢 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;5&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;text1&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;Button x:Name=&quot;GetInputButton&quot; Content=&quot;获取输入框内容&quot; Click=&quot;GetDepProperty&quot; &gt;&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;&#10;                    &lt;!-- 这一列涉及控件DataGrid的使用方法 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;1&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;30&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;30&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;120&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;120&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Label Grid.Row=&quot;0&quot;&gt;这是一个DataGrid最基础的实例&lt;/Label&gt;&#10;                        &lt;!-- 在MSDN中，一个最为基础的DataGrid的使用方法 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid x:Name=&quot;CustomerDataGrid&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot;  &gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding FirstName}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column2&quot; Binding=&quot;{Binding LastName}&quot; /&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column3&quot; Binding=&quot;{Binding Email}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column4&quot; Binding=&quot;{Binding IsMember}&quot; /&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column5&quot; Binding=&quot;{Binding cell.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Label Grid.Row=&quot;2&quot;&gt;这是一个带有多个事件的DataGrid&lt;/Label&gt;&#10;                        &lt;!-- 对DataGrid进行更加丰富的操作，比如单元格编辑事件等等 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;3&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid x:Name=&quot;CustomerDataGrid_AddEvent&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot; SelectionUnit=&quot;Cell&quot; SelectionMode=&quot;Single&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding column1.name}&quot;/&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column2&quot; Binding=&quot;{Binding column2.name}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column3&quot; Binding=&quot;{Binding column3.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 触发单元格自动刷新 --&gt;&#10;                        &lt;StackPanel Grid.Row=&quot;4&quot;&gt;&#10;                            &lt;Label&gt;以下使用了数据模板为DataGrid丰富内容，并实现自动刷新功能&lt;/Label&gt;&#10;                            &lt;Button Click=&quot;Button_Click&quot;&gt;开始刷新DataGrid&lt;/Button&gt;&#10;                        &lt;/StackPanel&gt;&#10;&#10;                        &lt;!-- 使用DataTemplate对.NET自带的DataGrid进行定制化 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;5&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;!-- 一个数据模板，使用在后边DataGrid的最后一个单元格 --&gt;&#10;                            &lt;Border.Resources&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellEditingTemplate&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.ColumnDefinitions&gt;&#10;                                            &lt;ColumnDefinition/&gt;&#10;                                            &lt;ColumnDefinition Width=&quot;15&quot;/&gt;&#10;                                        &lt;/Grid.ColumnDefinitions&gt;&#10;                                        &lt;TextBlock Grid.Column=&quot;0&quot; Text=&quot;{Binding m_content}&quot;/&gt;&#10;                                        &lt;Button Grid.Column=&quot;1&quot; Content=&quot;...&quot; Command=&quot;{Binding ShowCommand}&quot;/&gt;&#10;                                    &lt;/Grid&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;!-- 数据模板对应的类型是MessageModel --&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellDropBox&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;ComboBox ItemsSource=&quot;{Binding m_content_detail}&quot; SelectedIndex=&quot;0&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;DataTemplate x:Key=&quot;cellTextBlock&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;TextBlock Text=&quot;{Binding m_content_detail}&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                            &lt;/Border.Resources&gt;&#10;&#10;                            &lt;!-- 表格，用来显示MessageVM中所有的消息,使用ItemsSource指定数据源 --&gt;&#10;                            &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;编号&quot; Binding=&quot;{Binding m_No}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;时间戳&quot; Binding=&quot;{Binding m_time}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息内容&quot; CellTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot; &#10;                                                            CellEditingTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息详情&quot; CellTemplate=&quot;{StaticResource ResourceKey=cellDropBox}&quot;/&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 表格，和上边的表格一样，但是只是应用了usercontrol封装了一下 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;6&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;localui:MessageDataGrid x:Name=&quot;MsgDataGrid2&quot;&gt;&lt;/localui:MessageDataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- &#10;                             这是一个使用Dynamic动态类型关联的DataGrid，&#10;                             这样一来，如果有非常多的同类型的表格，就不用为每个表格再去手工建立数据模型了&#10;                        --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;7&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid_AutoGenCol&quot;/&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 一个用于接收DataGrid空间拖拽事件的实验控件 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;8&quot;&gt;&#10;                            &lt;Label x:Name=&quot;ReceiveDataLabel&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;&#10;                    &lt;!-- !!综合使用,比较实用!!DataGrid的应用实例 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;2&quot;&gt;&#10;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;                        &lt;!-- &#10;                            Dynamic类型绑定DataGrid的同时，丰富单元格内显示类型&#10;                        --&gt;&#10;                        &lt;DataGrid Grid.Row=&quot;0&quot; AutoGenerateColumns=&quot;False&quot; SelectionMode=&quot;Single&quot; x:Name=&quot;MsgDataGrid_AutoGenColandCellMore&quot; &#10;                                  ItemsSource=&quot;{Binding Path=.}&quot; SelectionUnit=&quot;Cell&quot;/&gt;&#10;&#10;                        &lt;!--&#10;                            将Dynamic动态表封装成用户控件&#10;                        --&gt;&#10;                        &lt;localui:DyDataGrid x:Name=&quot;DynamicDataGrid&quot; Grid.Row=&quot;1&quot; &gt;&lt;/localui:DyDataGrid&gt;&#10;&#10;                        &lt;ScrollViewer Grid.Row=&quot;3&quot;&gt;&#10;                            &lt;Label x:Name=&quot;ReceiveDataLabel2&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;&#10;                    &lt;!-- 这一列涉及TreeView控件的使用 --&gt;&#10;                    &lt;Grid Grid.Column=&quot;3&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;!-- 通过组合模式实现的树形结构 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;一个树形结构的类型容器，关联放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView x:Name=&quot;tv_composite&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;!-- 简单的通过读取Resourcees中的静态XML格式的树形结构 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;静态XML数据，放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView ItemsSource=&quot;{Binding Source={StaticResource xdp}}&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate ItemsSource=&quot;{Binding XPath=Folder}&quot;&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding XPath=@Name}&quot;/&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;Button Content=&quot;Start Parse XML&quot; Click=&quot;StartParseXML&quot; Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;&#10;                        &lt;Button Content=&quot;Refresh TreeView&quot; Click=&quot;RefreshTreeView&quot; Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;&#10;                        &lt;!-- 通过读取XML文件来填写属性结构的模板 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;4&quot;&gt;&#10;                            &lt;TreeView x:Name=&quot;TreeViewReadFromXMLFile&quot;&gt;&#10;                                &lt;TreeView.ItemTemplate&gt;&#10;                                    &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot;&gt;&#10;                                        &lt;StackPanel&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                        &lt;/StackPanel&gt;&#10;                                    &lt;/HierarchicalDataTemplate&gt;&#10;                                &lt;/TreeView.ItemTemplate&gt;&#10;                            &lt;/TreeView&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;ListBox x:Name=&quot;SearchRes&quot; Grid.Row=&quot;5&quot;&gt;&lt;/ListBox&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;                &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="17526:34697" ph="&lt;&lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;500&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;500&quot;/&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;/&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt; &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;170&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;!-- &#10;                            在此使用DataContext指定一个ClassA的一个实例，&#10;                            并且在该区域内的所有控件都能访问这个类实例的属性 &#10;                        --&gt;&#10;                        &lt;Border  BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;!-- 在Border范围内实例化了一个ClassA，名为class_a --&gt;&#10;                            &lt;Border.DataContext&gt;&#10;                                &lt;local:ClassA x:Name=&quot;class_a&quot;&gt;&lt;/local:ClassA&gt;&#10;                            &lt;/Border.DataContext&gt;&#10;&#10;                            &lt;!-- 指定了DataContext后，可以通过Binding的path关联实例对应的属性 --&gt;&#10;                            &lt;TreeView Name=&quot;tree&quot;&gt;&#10;                                &lt;TreeViewItem Header=&quot;Root&quot;&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding Path = m_A}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding m_B}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                &lt;/TreeViewItem&gt;&#10;                            &lt;/TreeView&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl（ListBox）类型的控件，使用ItemSource进行Binding --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox x:Name=&quot;PersonID&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList&quot; Margin=&quot;0,5&quot;&gt;&#10;                                    &lt;ListBox.ItemTemplate&gt;&#10;                                        &lt;DataTemplate&gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_ID}&quot; Width=&quot;30&quot;/&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_Name}&quot; Width=&quot;60&quot;/&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/DataTemplate&gt;&#10;                                    &lt;/ListBox.ItemTemplate&gt;&#10;                                &lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl（ListBox）类型的控件，使用ItemSource进行Binding --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;2&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox Text =&quot;{Binding m_ID}&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList2&quot; Margin=&quot;0,5&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 有关于ItemsControl(ListBox)控件，使用一个List&lt;Person&gt;绑定 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;3&quot; Margin=&quot;5,5,5,5&quot; &gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;!-- &#10;                                     每个控件都有自己的DataContext&#10;                                     DataContext可以指定为某一个区域 &#10;                                     这样使用DataContext，也相当于实例化了一个Student对象&#10;                                --&gt;&#10;                                &lt;StackPanel.DataContext&gt;&#10;                                    &lt;local:Student x:Name=&quot;stus&quot;&gt;&lt;/local:Student&gt;&#10;                                &lt;/StackPanel.DataContext&gt;&#10;                                &lt;ListBox x:Name=&quot;StuList&quot; ItemsSource=&quot;{Binding m_StuList}&quot; DisplayMemberPath=&quot;m_Name&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 一个实时更新的输入框，绑定函数返回值的例子 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;4&quot; Margin=&quot;5,5,5,5&quot; &gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcX&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcY&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcRes&quot;&gt;&lt;/TextBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 这个是学习依赖属性用的，DP暂时没学透彻呢 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;5&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;text1&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;Button x:Name=&quot;GetInputButton&quot; Content=&quot;获取输入框内容&quot; Click=&quot;GetDepProperty&quot; &gt;&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                    &lt;/Grid&gt; &lt;Grid Grid.Column=&quot;1&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;30&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;30&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;120&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;120&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Label Grid.Row=&quot;0&quot;&gt;这是一个DataGrid最基础的实例&lt;/Label&gt;&#10;                        &lt;!-- 在MSDN中，一个最为基础的DataGrid的使用方法 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid x:Name=&quot;CustomerDataGrid&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot;  &gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding FirstName}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column2&quot; Binding=&quot;{Binding LastName}&quot; /&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column3&quot; Binding=&quot;{Binding Email}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column4&quot; Binding=&quot;{Binding IsMember}&quot; /&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column5&quot; Binding=&quot;{Binding cell.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Label Grid.Row=&quot;2&quot;&gt;这是一个带有多个事件的DataGrid&lt;/Label&gt;&#10;                        &lt;!-- 对DataGrid进行更加丰富的操作，比如单元格编辑事件等等 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;3&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid x:Name=&quot;CustomerDataGrid_AddEvent&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot; SelectionUnit=&quot;Cell&quot; SelectionMode=&quot;Single&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding column1.name}&quot;/&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column2&quot; Binding=&quot;{Binding column2.name}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column3&quot; Binding=&quot;{Binding column3.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 触发单元格自动刷新 --&gt;&#10;                        &lt;StackPanel Grid.Row=&quot;4&quot;&gt;&#10;                            &lt;Label&gt;以下使用了数据模板为DataGrid丰富内容，并实现自动刷新功能&lt;/Label&gt;&#10;                            &lt;Button Click=&quot;Button_Click&quot;&gt;开始刷新DataGrid&lt;/Button&gt;&#10;                        &lt;/StackPanel&gt;&#10;&#10;                        &lt;!-- 使用DataTemplate对.NET自带的DataGrid进行定制化 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;5&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;!-- 一个数据模板，使用在后边DataGrid的最后一个单元格 --&gt;&#10;                            &lt;Border.Resources&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellEditingTemplate&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.ColumnDefinitions&gt;&#10;                                            &lt;ColumnDefinition/&gt;&#10;                                            &lt;ColumnDefinition Width=&quot;15&quot;/&gt;&#10;                                        &lt;/Grid.ColumnDefinitions&gt;&#10;                                        &lt;TextBlock Grid.Column=&quot;0&quot; Text=&quot;{Binding m_content}&quot;/&gt;&#10;                                        &lt;Button Grid.Column=&quot;1&quot; Content=&quot;...&quot; Command=&quot;{Binding ShowCommand}&quot;/&gt;&#10;                                    &lt;/Grid&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;!-- 数据模板对应的类型是MessageModel --&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellDropBox&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;ComboBox ItemsSource=&quot;{Binding m_content_detail}&quot; SelectedIndex=&quot;0&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;DataTemplate x:Key=&quot;cellTextBlock&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;TextBlock Text=&quot;{Binding m_content_detail}&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                            &lt;/Border.Resources&gt;&#10;&#10;                            &lt;!-- 表格，用来显示MessageVM中所有的消息,使用ItemsSource指定数据源 --&gt;&#10;                            &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;编号&quot; Binding=&quot;{Binding m_No}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;时间戳&quot; Binding=&quot;{Binding m_time}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息内容&quot; CellTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot; &#10;                                                            CellEditingTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息详情&quot; CellTemplate=&quot;{StaticResource ResourceKey=cellDropBox}&quot;/&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 表格，和上边的表格一样，但是只是应用了usercontrol封装了一下 --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;6&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;localui:MessageDataGrid x:Name=&quot;MsgDataGrid2&quot;&gt;&lt;/localui:MessageDataGrid&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- &#10;                             这是一个使用Dynamic动态类型关联的DataGrid，&#10;                             这样一来，如果有非常多的同类型的表格，就不用为每个表格再去手工建立数据模型了&#10;                        --&gt;&#10;                        &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;7&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid_AutoGenCol&quot;/&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;!-- 一个用于接收DataGrid空间拖拽事件的实验控件 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;8&quot;&gt;&#10;                            &lt;Label x:Name=&quot;ReceiveDataLabel&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                    &lt;/Grid&gt; &lt;Grid Grid.Column=&quot;2&quot;&gt;&#10;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;                        &lt;!-- &#10;                            Dynamic类型绑定DataGrid的同时，丰富单元格内显示类型&#10;                        --&gt;&#10;                        &lt;DataGrid Grid.Row=&quot;0&quot; AutoGenerateColumns=&quot;False&quot; SelectionMode=&quot;Single&quot; x:Name=&quot;MsgDataGrid_AutoGenColandCellMore&quot; &#10;                                  ItemsSource=&quot;{Binding Path=.}&quot; SelectionUnit=&quot;Cell&quot;/&gt;&#10;&#10;                        &lt;!--&#10;                            将Dynamic动态表封装成用户控件&#10;                        --&gt;&#10;                        &lt;localui:DyDataGrid x:Name=&quot;DynamicDataGrid&quot; Grid.Row=&quot;1&quot; &gt;&lt;/localui:DyDataGrid&gt;&#10;&#10;                        &lt;ScrollViewer Grid.Row=&quot;3&quot;&gt;&#10;                            &lt;Label x:Name=&quot;ReceiveDataLabel2&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                    &lt;/Grid&gt; &lt;Grid Grid.Column=&quot;3&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;!-- 通过组合模式实现的树形结构 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;一个树形结构的类型容器，关联放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView x:Name=&quot;tv_composite&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;!-- 简单的通过读取Resourcees中的静态XML格式的树形结构 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;静态XML数据，放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView ItemsSource=&quot;{Binding Source={StaticResource xdp}}&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate ItemsSource=&quot;{Binding XPath=Folder}&quot;&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding XPath=@Name}&quot;/&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;Button Content=&quot;Start Parse XML&quot; Click=&quot;StartParseXML&quot; Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;&#10;                        &lt;Button Content=&quot;Refresh TreeView&quot; Click=&quot;RefreshTreeView&quot; Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;&#10;                        &lt;!-- 通过读取XML文件来填写属性结构的模板 --&gt;&#10;                        &lt;ScrollViewer Grid.Row=&quot;4&quot;&gt;&#10;                            &lt;TreeView x:Name=&quot;TreeViewReadFromXMLFile&quot;&gt;&#10;                                &lt;TreeView.ItemTemplate&gt;&#10;                                    &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot;&gt;&#10;                                        &lt;StackPanel&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                        &lt;/StackPanel&gt;&#10;                                    &lt;/HierarchicalDataTemplate&gt;&#10;                                &lt;/TreeView.ItemTemplate&gt;&#10;                            &lt;/TreeView&gt;&#10;                        &lt;/ScrollViewer&gt;&#10;&#10;                        &lt;ListBox x:Name=&quot;SearchRes&quot; Grid.Row=&quot;5&quot;&gt;&lt;/ListBox&gt;&#10;&#10;                    &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="17590:17884" ph="&lt;&lt;ColumnDefinition Width=&quot;200&quot;/&gt; &lt;ColumnDefinition Width=&quot;500&quot;/&gt; &lt;ColumnDefinition Width=&quot;500&quot;/&gt; &lt;ColumnDefinition Width=&quot;200&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="17942:23294" ph="&lt;&lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;170&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt; &lt;Border  BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;0&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;!-- 在Border范围内实例化了一个ClassA，名为class_a --&gt;&#10;                            &lt;Border.DataContext&gt;&#10;                                &lt;local:ClassA x:Name=&quot;class_a&quot;&gt;&lt;/local:ClassA&gt;&#10;                            &lt;/Border.DataContext&gt;&#10;&#10;                            &lt;!-- 指定了DataContext后，可以通过Binding的path关联实例对应的属性 --&gt;&#10;                            &lt;TreeView Name=&quot;tree&quot;&gt;&#10;                                &lt;TreeViewItem Header=&quot;Root&quot;&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding Path = m_A}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding m_B}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                &lt;/TreeViewItem&gt;&#10;                            &lt;/TreeView&gt;&#10;                        &lt;/Border&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox x:Name=&quot;PersonID&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList&quot; Margin=&quot;0,5&quot;&gt;&#10;                                    &lt;ListBox.ItemTemplate&gt;&#10;                                        &lt;DataTemplate&gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_ID}&quot; Width=&quot;30&quot;/&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_Name}&quot; Width=&quot;60&quot;/&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/DataTemplate&gt;&#10;                                    &lt;/ListBox.ItemTemplate&gt;&#10;                                &lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;2&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox Text =&quot;{Binding m_ID}&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList2&quot; Margin=&quot;0,5&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;3&quot; Margin=&quot;5,5,5,5&quot; &gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;!-- &#10;                                     每个控件都有自己的DataContext&#10;                                     DataContext可以指定为某一个区域 &#10;                                     这样使用DataContext，也相当于实例化了一个Student对象&#10;                                --&gt;&#10;                                &lt;StackPanel.DataContext&gt;&#10;                                    &lt;local:Student x:Name=&quot;stus&quot;&gt;&lt;/local:Student&gt;&#10;                                &lt;/StackPanel.DataContext&gt;&#10;                                &lt;ListBox x:Name=&quot;StuList&quot; ItemsSource=&quot;{Binding m_StuList}&quot; DisplayMemberPath=&quot;m_Name&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;4&quot; Margin=&quot;5,5,5,5&quot; &gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcX&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcY&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcRes&quot;&gt;&lt;/TextBox&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;5&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;text1&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;Button x:Name=&quot;GetInputButton&quot; Content=&quot;获取输入框内容&quot; Click=&quot;GetDepProperty&quot; &gt;&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="17989:18405" ph="&lt;&lt;RowDefinition Height=&quot;100&quot;/&gt; &lt;RowDefinition Height=&quot;150&quot;/&gt; &lt;RowDefinition Height=&quot;170&quot;/&gt; &lt;RowDefinition Height=&quot;150&quot;/&gt; &lt;RowDefinition Height=&quot;100&quot;/&gt; &lt;RowDefinition Height=&quot;100&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="18431:18578" ph="&lt;!--...--&gt;" />
            <marker date="1544952190280" expanded="true" signature="18603:19429" ph="&lt;&lt;Border.DataContext&gt;&#10;                                &lt;local:ClassA x:Name=&quot;class_a&quot;&gt;&lt;/local:ClassA&gt;&#10;                            &lt;/Border.DataContext&gt; &lt;TreeView Name=&quot;tree&quot;&gt;&#10;                                &lt;TreeViewItem Header=&quot;Root&quot;&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding Path = m_A}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding m_B}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                &lt;/TreeViewItem&gt;&#10;                            &lt;/TreeView&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="18781:18930" ph="&lt;&lt;local:ClassA x:Name=&quot;class_a&quot;&gt;&lt;/local:ClassA&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="19039:19395" ph="&lt;&lt;TreeViewItem Header=&quot;Root&quot;&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding Path = m_A}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                    &lt;TreeViewItem Header=&quot;{Binding m_B}&quot;&gt;&lt;/TreeViewItem&gt;&#10;                                &lt;/TreeViewItem&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="19094:19355" ph="&lt;&lt;TreeViewItem Header=&quot;{Binding Path = m_A}&quot;&gt;&lt;/TreeViewItem&gt; &lt;TreeViewItem Header=&quot;{Binding m_B}&quot;&gt;&lt;/TreeViewItem&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="19540:20714" ph="&lt;&lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox x:Name=&quot;PersonID&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList&quot; Margin=&quot;0,5&quot;&gt;&#10;                                    &lt;ListBox.ItemTemplate&gt;&#10;                                        &lt;DataTemplate&gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_ID}&quot; Width=&quot;30&quot;/&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_Name}&quot; Width=&quot;60&quot;/&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/DataTemplate&gt;&#10;                                    &lt;/ListBox.ItemTemplate&gt;&#10;                                &lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="19647:20680" ph="&lt;&lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt; &lt;TextBox x:Name=&quot;PersonID&quot;&gt;&lt;/TextBox&gt; &lt;ListBox x:Name=&quot;PersonList&quot; Margin=&quot;0,5&quot;&gt;&#10;                                    &lt;ListBox.ItemTemplate&gt;&#10;                                        &lt;DataTemplate&gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_ID}&quot; Width=&quot;30&quot;/&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_Name}&quot; Width=&quot;60&quot;/&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/DataTemplate&gt;&#10;                                    &lt;/ListBox.ItemTemplate&gt;&#10;                                &lt;/ListBox&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="19983:20638" ph="&lt;&lt;ListBox.ItemTemplate&gt;&#10;                                        &lt;DataTemplate&gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_ID}&quot; Width=&quot;30&quot;/&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_Name}&quot; Width=&quot;60&quot;/&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/DataTemplate&gt;&#10;                                    &lt;/ListBox.ItemTemplate&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="20062:20595" ph="&lt;&lt;DataTemplate&gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_ID}&quot; Width=&quot;30&quot;/&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_Name}&quot; Width=&quot;60&quot;/&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/DataTemplate&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="20125:20535" ph="&lt;&lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_ID}&quot; Width=&quot;30&quot;/&gt;&#10;                                                &lt;TextBlock Text=&quot;{Binding Path=m_Name}&quot; Width=&quot;60&quot;/&gt;&#10;                                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="20184:20479" ph="&lt;&lt;TextBlock Text=&quot;{Binding Path=m_ID}&quot; Width=&quot;30&quot;/&gt; &lt;TextBlock Text=&quot;{Binding Path=m_Name}&quot; Width=&quot;60&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="20825:21433" ph="&lt;&lt;StackPanel Margin=&quot;3,3,3,3&quot;&gt;&#10;                                &lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt;&#10;                                &lt;!-- 显示下边ListBox选择的PersonID --&gt;&#10;                                &lt;TextBox Text =&quot;{Binding m_ID}&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;!-- 关联ItemSource为一个List&lt;person&gt;容器的列表 --&gt;&#10;                                &lt;ListBox x:Name=&quot;PersonList2&quot; Margin=&quot;0,5&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="20932:21399" ph="&lt;&lt;Label&gt;绑定ItemControl类型的控件&lt;/Label&gt; &lt;TextBox Text =&quot;{Binding m_ID}&quot;&gt;&lt;/TextBox&gt; &lt;ListBox x:Name=&quot;PersonList2&quot; Margin=&quot;0,5&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&lt;/ListBox&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="21538:22326" ph="&lt;&lt;StackPanel&gt;&#10;                                &lt;!-- &#10;                                     每个控件都有自己的DataContext&#10;                                     DataContext可以指定为某一个区域 &#10;                                     这样使用DataContext，也相当于实例化了一个Student对象&#10;                                --&gt;&#10;                                &lt;StackPanel.DataContext&gt;&#10;                                    &lt;local:Student x:Name=&quot;stus&quot;&gt;&lt;/local:Student&gt;&#10;                                &lt;/StackPanel.DataContext&gt;&#10;                                &lt;ListBox x:Name=&quot;StuList&quot; ItemsSource=&quot;{Binding m_StuList}&quot; DisplayMemberPath=&quot;m_Name&quot;&gt;&lt;/ListBox&gt;&#10;                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="21646:22292" ph="&lt;&lt;StackPanel.DataContext&gt;&#10;                                    &lt;local:Student x:Name=&quot;stus&quot;&gt;&lt;/local:Student&gt;&#10;                                &lt;/StackPanel.DataContext&gt; &lt;ListBox x:Name=&quot;StuList&quot; ItemsSource=&quot;{Binding m_StuList}&quot; DisplayMemberPath=&quot;m_Name&quot;&gt;&lt;/ListBox&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="21691:21923" ph="&lt;!--...--&gt;" />
            <marker date="1544952190280" expanded="true" signature="21956:22120" ph="&lt;&lt;local:Student x:Name=&quot;stus&quot;&gt;&lt;/local:Student&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="22407:22806" ph="&lt;&lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcX&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcY&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;TextBox x:Name=&quot;CalcRes&quot;&gt;&lt;/TextBox&gt;&#10;                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="22515:22772" ph="&lt;&lt;TextBox x:Name=&quot;CalcX&quot;&gt;&lt;/TextBox&gt; &lt;TextBox x:Name=&quot;CalcY&quot;&gt;&lt;/TextBox&gt; &lt;TextBox x:Name=&quot;CalcRes&quot;&gt;&lt;/TextBox&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="22887:23265" ph="&lt;&lt;StackPanel&gt;&#10;                                &lt;TextBox x:Name=&quot;text1&quot;&gt;&lt;/TextBox&gt;&#10;                                &lt;Button x:Name=&quot;GetInputButton&quot; Content=&quot;获取输入框内容&quot; Click=&quot;GetDepProperty&quot; &gt;&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="22994:23231" ph="&lt;&lt;TextBox x:Name=&quot;text1&quot;&gt;&lt;/TextBox&gt; &lt;Button x:Name=&quot;GetInputButton&quot; Content=&quot;获取输入框内容&quot; Click=&quot;GetDepProperty&quot; &gt;&lt;/Button&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="23366:29915" ph="&lt;&lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;30&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;30&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;120&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;120&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt; &lt;Label Grid.Row=&quot;0&quot;&gt;这是一个DataGrid最基础的实例&lt;/Label&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;1&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid x:Name=&quot;CustomerDataGrid&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot;  &gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding FirstName}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column2&quot; Binding=&quot;{Binding LastName}&quot; /&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column3&quot; Binding=&quot;{Binding Email}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column4&quot; Binding=&quot;{Binding IsMember}&quot; /&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column5&quot; Binding=&quot;{Binding cell.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt; &lt;Label Grid.Row=&quot;2&quot;&gt;这是一个带有多个事件的DataGrid&lt;/Label&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;3&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid x:Name=&quot;CustomerDataGrid_AddEvent&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot; SelectionUnit=&quot;Cell&quot; SelectionMode=&quot;Single&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding column1.name}&quot;/&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column2&quot; Binding=&quot;{Binding column2.name}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column3&quot; Binding=&quot;{Binding column3.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt; &lt;StackPanel Grid.Row=&quot;4&quot;&gt;&#10;                            &lt;Label&gt;以下使用了数据模板为DataGrid丰富内容，并实现自动刷新功能&lt;/Label&gt;&#10;                            &lt;Button Click=&quot;Button_Click&quot;&gt;开始刷新DataGrid&lt;/Button&gt;&#10;                        &lt;/StackPanel&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;5&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;!-- 一个数据模板，使用在后边DataGrid的最后一个单元格 --&gt;&#10;                            &lt;Border.Resources&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellEditingTemplate&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.ColumnDefinitions&gt;&#10;                                            &lt;ColumnDefinition/&gt;&#10;                                            &lt;ColumnDefinition Width=&quot;15&quot;/&gt;&#10;                                        &lt;/Grid.ColumnDefinitions&gt;&#10;                                        &lt;TextBlock Grid.Column=&quot;0&quot; Text=&quot;{Binding m_content}&quot;/&gt;&#10;                                        &lt;Button Grid.Column=&quot;1&quot; Content=&quot;...&quot; Command=&quot;{Binding ShowCommand}&quot;/&gt;&#10;                                    &lt;/Grid&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;!-- 数据模板对应的类型是MessageModel --&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellDropBox&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;ComboBox ItemsSource=&quot;{Binding m_content_detail}&quot; SelectedIndex=&quot;0&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;DataTemplate x:Key=&quot;cellTextBlock&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;TextBlock Text=&quot;{Binding m_content_detail}&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                            &lt;/Border.Resources&gt;&#10;&#10;                            &lt;!-- 表格，用来显示MessageVM中所有的消息,使用ItemsSource指定数据源 --&gt;&#10;                            &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;编号&quot; Binding=&quot;{Binding m_No}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;时间戳&quot; Binding=&quot;{Binding m_time}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息内容&quot; CellTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot; &#10;                                                            CellEditingTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息详情&quot; CellTemplate=&quot;{StaticResource ResourceKey=cellDropBox}&quot;/&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;&#10;                        &lt;/Border&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;6&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;localui:MessageDataGrid x:Name=&quot;MsgDataGrid2&quot;&gt;&lt;/localui:MessageDataGrid&gt;&#10;                        &lt;/Border&gt; &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Grid.Row=&quot;7&quot; Margin=&quot;5,5,5,5&quot;&gt;&#10;                            &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid_AutoGenCol&quot;/&gt;&#10;                        &lt;/Border&gt; &lt;ScrollViewer Grid.Row=&quot;8&quot;&gt;&#10;                            &lt;Label x:Name=&quot;ReceiveDataLabel&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;&#10;                        &lt;/ScrollViewer&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="23413:24000" ph="&lt;&lt;RowDefinition Height=&quot;30&quot;/&gt; &lt;RowDefinition Height=&quot;100&quot;/&gt; &lt;RowDefinition Height=&quot;30&quot;/&gt; &lt;RowDefinition Height=&quot;100&quot;/&gt; &lt;RowDefinition Height=&quot;50&quot;/&gt; &lt;RowDefinition Height=&quot;120&quot;/&gt; &lt;RowDefinition Height=&quot;120&quot;/&gt; &lt;RowDefinition Height=&quot;150&quot;/&gt; &lt;RowDefinition Height=&quot;150&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="24158:25075" ph="&lt;&lt;DataGrid x:Name=&quot;CustomerDataGrid&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot;  &gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding FirstName}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column2&quot; Binding=&quot;{Binding LastName}&quot; /&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column3&quot; Binding=&quot;{Binding Email}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column4&quot; Binding=&quot;{Binding IsMember}&quot; /&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column5&quot; Binding=&quot;{Binding cell.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="24265:25041" ph="&lt;&lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding FirstName}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column2&quot; Binding=&quot;{Binding LastName}&quot; /&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column3&quot; Binding=&quot;{Binding Email}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column4&quot; Binding=&quot;{Binding IsMember}&quot; /&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column5&quot; Binding=&quot;{Binding cell.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="24397:25001" ph="&lt;&lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding FirstName}&quot;/&gt; &lt;DataGridTextColumn Header=&quot;Column2&quot; Binding=&quot;{Binding LastName}&quot; /&gt; &lt;DataGridHyperlinkColumn Header=&quot;Column3&quot; Binding=&quot;{Binding Email}&quot;  /&gt; &lt;DataGridCheckBoxColumn Header=&quot;Column4&quot; Binding=&quot;{Binding IsMember}&quot; /&gt; &lt;DataGridTextColumn Header=&quot;Column5&quot; Binding=&quot;{Binding cell.name}&quot; /&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="25237:26008" ph="&lt;&lt;DataGrid x:Name=&quot;CustomerDataGrid_AddEvent&quot; ItemsSource=&quot;{Binding Path = .}&quot; AutoGenerateColumns=&quot;False&quot; SelectionUnit=&quot;Cell&quot; SelectionMode=&quot;Single&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding column1.name}&quot;/&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column2&quot; Binding=&quot;{Binding column2.name}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column3&quot; Binding=&quot;{Binding column3.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="25344:25974" ph="&lt;&lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding column1.name}&quot;/&gt;&#10;                                    &lt;DataGridHyperlinkColumn Header=&quot;Column2&quot; Binding=&quot;{Binding column2.name}&quot;  /&gt;&#10;                                    &lt;DataGridCheckBoxColumn Header=&quot;Column3&quot; Binding=&quot;{Binding column3.name}&quot; /&gt;&#10;                                &lt;/DataGrid.Columns&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="25527:25934" ph="&lt;&lt;DataGridTextColumn Header=&quot;Column1&quot;  Binding=&quot;{Binding column1.name}&quot;/&gt; &lt;DataGridHyperlinkColumn Header=&quot;Column2&quot; Binding=&quot;{Binding column2.name}&quot;  /&gt; &lt;DataGridCheckBoxColumn Header=&quot;Column3&quot; Binding=&quot;{Binding column3.name}&quot; /&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="26077:26295" ph="&lt;&lt;Label&gt;以下使用了数据模板为DataGrid丰富内容，并实现自动刷新功能&lt;/Label&gt; &lt;Button Click=&quot;Button_Click&quot;&gt;开始刷新DataGrid&lt;/Button&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="26390:28902" ph="&lt;&lt;Border.Resources&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellEditingTemplate&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.ColumnDefinitions&gt;&#10;                                            &lt;ColumnDefinition/&gt;&#10;                                            &lt;ColumnDefinition Width=&quot;15&quot;/&gt;&#10;                                        &lt;/Grid.ColumnDefinitions&gt;&#10;                                        &lt;TextBlock Grid.Column=&quot;0&quot; Text=&quot;{Binding m_content}&quot;/&gt;&#10;                                        &lt;Button Grid.Column=&quot;1&quot; Content=&quot;...&quot; Command=&quot;{Binding ShowCommand}&quot;/&gt;&#10;                                    &lt;/Grid&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;!-- 数据模板对应的类型是MessageModel --&gt;&#10;                                &lt;DataTemplate x:Key=&quot;cellDropBox&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;ComboBox ItemsSource=&quot;{Binding m_content_detail}&quot; SelectedIndex=&quot;0&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                                &lt;DataTemplate x:Key=&quot;cellTextBlock&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;TextBlock Text=&quot;{Binding m_content_detail}&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;&#10;&#10;                            &lt;/Border.Resources&gt; &lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid&quot; ItemsSource=&quot;{Binding Path=.}&quot;&gt;&#10;                                &lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;编号&quot; Binding=&quot;{Binding m_No}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;时间戳&quot; Binding=&quot;{Binding m_time}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息内容&quot; CellTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot; &#10;                                                            CellEditingTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息详情&quot; CellTemplate=&quot;{StaticResource ResourceKey=cellDropBox}&quot;/&gt;&#10;                                &lt;/DataGrid.Columns&gt;&#10;                            &lt;/DataGrid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="26563:27925" ph="&lt;&lt;DataTemplate x:Key=&quot;cellEditingTemplate&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;Grid&gt;&#10;                                        &lt;Grid.ColumnDefinitions&gt;&#10;                                            &lt;ColumnDefinition/&gt;&#10;                                            &lt;ColumnDefinition Width=&quot;15&quot;/&gt;&#10;                                        &lt;/Grid.ColumnDefinitions&gt;&#10;                                        &lt;TextBlock Grid.Column=&quot;0&quot; Text=&quot;{Binding m_content}&quot;/&gt;&#10;                                        &lt;Button Grid.Column=&quot;1&quot; Content=&quot;...&quot; Command=&quot;{Binding ShowCommand}&quot;/&gt;&#10;                                    &lt;/Grid&gt;&#10;                                &lt;/DataTemplate&gt; &lt;DataTemplate x:Key=&quot;cellDropBox&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;ComboBox ItemsSource=&quot;{Binding m_content_detail}&quot; SelectedIndex=&quot;0&quot; /&gt;&#10;                                &lt;/DataTemplate&gt; &lt;DataTemplate x:Key=&quot;cellTextBlock&quot; DataType=&quot;{x:Type model:MessageModel}&quot;&gt;&#10;                                    &lt;TextBlock Text=&quot;{Binding m_content_detail}&quot; /&gt;&#10;                                &lt;/DataTemplate&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="26614:27308" ph="&lt;&lt;Grid&gt;&#10;                                        &lt;Grid.ColumnDefinitions&gt;&#10;                                            &lt;ColumnDefinition/&gt;&#10;                                            &lt;ColumnDefinition Width=&quot;15&quot;/&gt;&#10;                                        &lt;/Grid.ColumnDefinitions&gt;&#10;                                        &lt;TextBlock Grid.Column=&quot;0&quot; Text=&quot;{Binding m_content}&quot;/&gt;&#10;                                        &lt;Button Grid.Column=&quot;1&quot; Content=&quot;...&quot; Command=&quot;{Binding ShowCommand}&quot;/&gt;&#10;                                    &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="26732:27260" ph="&lt;&lt;Grid.ColumnDefinitions&gt;&#10;                                            &lt;ColumnDefinition/&gt;&#10;                                            &lt;ColumnDefinition Width=&quot;15&quot;/&gt;&#10;                                        &lt;/Grid.ColumnDefinitions&gt; &lt;TextBlock Grid.Column=&quot;0&quot; Text=&quot;{Binding m_content}&quot;/&gt; &lt;Button Grid.Column=&quot;1&quot; Content=&quot;...&quot; Command=&quot;{Binding ShowCommand}&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="26779:27008" ph="&lt;&lt;ColumnDefinition/&gt; &lt;ColumnDefinition Width=&quot;15&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="27406:27635" ph="&lt;&lt;ComboBox ItemsSource=&quot;{Binding m_content_detail}&quot; SelectedIndex=&quot;0&quot; /&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="27669:27876" ph="&lt;&lt;TextBlock Text=&quot;{Binding m_content_detail}&quot; /&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="28034:28868" ph="&lt;&lt;DataGrid.Columns&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;编号&quot; Binding=&quot;{Binding m_No}&quot;/&gt;&#10;                                    &lt;DataGridTextColumn Header=&quot;时间戳&quot; Binding=&quot;{Binding m_time}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息内容&quot; CellTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot; &#10;                                                            CellEditingTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot;/&gt;&#10;                                    &lt;DataGridTemplateColumn Header=&quot;消息详情&quot; CellTemplate=&quot;{StaticResource ResourceKey=cellDropBox}&quot;/&gt;&#10;                                &lt;/DataGrid.Columns&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="28157:28828" ph="&lt;&lt;DataGridTextColumn Header=&quot;编号&quot; Binding=&quot;{Binding m_No}&quot;/&gt; &lt;DataGridTextColumn Header=&quot;时间戳&quot; Binding=&quot;{Binding m_time}&quot;/&gt; &lt;DataGridTemplateColumn Header=&quot;消息内容&quot; CellTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot; &#10;                                                            CellEditingTemplate=&quot;{StaticResource ResourceKey = cellEditingTemplate}&quot;/&gt; &lt;DataGridTemplateColumn Header=&quot;消息详情&quot; CellTemplate=&quot;{StaticResource ResourceKey=cellDropBox}&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="28405:28644" ph="&lt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="28997:29211" ph="&lt;&lt;localui:MessageDataGrid x:Name=&quot;MsgDataGrid2&quot;&gt;&lt;/localui:MessageDataGrid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="29237:29397" ph="&lt;!--...--&gt;" />
            <marker date="1544952190280" expanded="true" signature="29422:29634" ph="&lt;&lt;DataGrid AutoGenerateColumns=&quot;False&quot; x:Name=&quot;MsgDataGrid_AutoGenCol&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="29719:29886" ph="&lt;&lt;Label x:Name=&quot;ReceiveDataLabel&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="29993:31183" ph="&lt;&lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt; &lt;DataGrid Grid.Row=&quot;0&quot; AutoGenerateColumns=&quot;False&quot; SelectionMode=&quot;Single&quot; x:Name=&quot;MsgDataGrid_AutoGenColandCellMore&quot; &#10;                                  ItemsSource=&quot;{Binding Path=.}&quot; SelectionUnit=&quot;Cell&quot;/&gt; &lt;localui:DyDataGrid x:Name=&quot;DynamicDataGrid&quot; Grid.Row=&quot;1&quot; &gt;&lt;/localui:DyDataGrid&gt; &lt;ScrollViewer Grid.Row=&quot;3&quot;&gt;&#10;                            &lt;Label x:Name=&quot;ReceiveDataLabel2&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;&#10;                        &lt;/ScrollViewer&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="30041:30400" ph="&lt;&lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;50&quot;&gt;&lt;/RowDefinition&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="30425:30520" ph="&lt;!--...--&gt;" />
            <marker date="1544952190280" expanded="true" signature="30545:30750" ph="&lt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="30776:30855" ph="&lt;!--...--&gt;" />
            <marker date="1544952190280" expanded="true" signature="30986:31154" ph="&lt;&lt;Label x:Name=&quot;ReceiveDataLabel2&quot; Content=&quot;在此接收DataGrid拖拽过来的数值&quot;&gt;&lt;/Label&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="31253:34673" ph="&lt;&lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;100&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;50&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                            &lt;RowDefinition Height=&quot;150&quot;/&gt;&#10;                        &lt;/Grid.RowDefinitions&gt; &lt;ScrollViewer Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;一个树形结构的类型容器，关联放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView x:Name=&quot;tv_composite&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/ScrollViewer&gt; &lt;ScrollViewer Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;静态XML数据，放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView ItemsSource=&quot;{Binding Source={StaticResource xdp}}&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate ItemsSource=&quot;{Binding XPath=Folder}&quot;&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding XPath=@Name}&quot;/&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/ScrollViewer&gt; &lt;Button Content=&quot;Start Parse XML&quot; Click=&quot;StartParseXML&quot; Grid.Row=&quot;2&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt; &lt;Button Content=&quot;Refresh TreeView&quot; Click=&quot;RefreshTreeView&quot; Grid.Row=&quot;3&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt; &lt;ScrollViewer Grid.Row=&quot;4&quot;&gt;&#10;                            &lt;TreeView x:Name=&quot;TreeViewReadFromXMLFile&quot;&gt;&#10;                                &lt;TreeView.ItemTemplate&gt;&#10;                                    &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot;&gt;&#10;                                        &lt;StackPanel&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                        &lt;/StackPanel&gt;&#10;                                    &lt;/HierarchicalDataTemplate&gt;&#10;                                &lt;/TreeView.ItemTemplate&gt;&#10;                            &lt;/TreeView&gt;&#10;                        &lt;/ScrollViewer&gt; &lt;ListBox x:Name=&quot;SearchRes&quot; Grid.Row=&quot;5&quot;&gt;&lt;/ListBox&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="31300:31714" ph="&lt;&lt;RowDefinition Height=&quot;100&quot;/&gt; &lt;RowDefinition Height=&quot;150&quot;/&gt; &lt;RowDefinition Height=&quot;50&quot;/&gt; &lt;RowDefinition Height=&quot;50&quot;/&gt; &lt;RowDefinition Height=&quot;150&quot;/&gt; &lt;RowDefinition Height=&quot;150&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="31787:32722" ph="&lt;&lt;StackPanel&gt;&#10;                                &lt;Label&gt;一个树形结构的类型容器，关联放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView x:Name=&quot;tv_composite&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="31843:32682" ph="&lt;&lt;Label&gt;一个树形结构的类型容器，关联放入Treeview当中&lt;/Label&gt; &lt;TreeView x:Name=&quot;tv_composite&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="31962:32640" ph="&lt;&lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="32031:32596" ph="&lt;&lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                                            &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                            &lt;/StackPanel&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="32095:32535" ph="&lt;&lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                                                &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="32245:32467" ph="&lt;&lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="32813:33549" ph="&lt;&lt;StackPanel&gt;&#10;                                &lt;Label&gt;静态XML数据，放入Treeview当中&lt;/Label&gt;&#10;                                &lt;TreeView ItemsSource=&quot;{Binding Source={StaticResource xdp}}&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate ItemsSource=&quot;{Binding XPath=Folder}&quot;&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding XPath=@Name}&quot;/&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;&#10;                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="32869:33509" ph="&lt;&lt;Label&gt;静态XML数据，放入Treeview当中&lt;/Label&gt; &lt;TreeView ItemsSource=&quot;{Binding Source={StaticResource xdp}}&quot;&gt;&#10;                                    &lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate ItemsSource=&quot;{Binding XPath=Folder}&quot;&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding XPath=@Name}&quot;/&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;&#10;                                &lt;/TreeView&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="32982:33467" ph="&lt;&lt;TreeView.ItemTemplate&gt;&#10;                                        &lt;HierarchicalDataTemplate ItemsSource=&quot;{Binding XPath=Folder}&quot;&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding XPath=@Name}&quot;/&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;&#10;                                    &lt;/TreeView.ItemTemplate&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="33081:33423" ph="&lt;&lt;HierarchicalDataTemplate ItemsSource=&quot;{Binding XPath=Folder}&quot;&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding XPath=@Name}&quot;/&gt;&#10;                                        &lt;/HierarchicalDataTemplate&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="33145:33362" ph="&lt;&lt;TextBlock Text=&quot;{Binding XPath=@Name}&quot;/&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="33867:34567" ph="&lt;&lt;TreeView x:Name=&quot;TreeViewReadFromXMLFile&quot;&gt;&#10;                                &lt;TreeView.ItemTemplate&gt;&#10;                                    &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot;&gt;&#10;                                        &lt;StackPanel&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                        &lt;/StackPanel&gt;&#10;                                    &lt;/HierarchicalDataTemplate&gt;&#10;                                &lt;/TreeView.ItemTemplate&gt;&#10;                            &lt;/TreeView&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="33923:34527" ph="&lt;&lt;TreeView.ItemTemplate&gt;&#10;                                    &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot;&gt;&#10;                                        &lt;StackPanel&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                        &lt;/StackPanel&gt;&#10;                                    &lt;/HierarchicalDataTemplate&gt;&#10;                                &lt;/TreeView.ItemTemplate&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="33999:34487" ph="&lt;&lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot;&gt;&#10;                                        &lt;StackPanel&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                        &lt;/StackPanel&gt;&#10;                                    &lt;/HierarchicalDataTemplate&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="34059:34430" ph="&lt;&lt;StackPanel&gt;&#10;                                            &lt;TextBlock Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                                        &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="34204:34366" ph="&lt;&lt;TextBlock Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="34735:37034" ph="&lt;&lt;Grid&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!----&gt;&#10;                            &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Button Content=&quot;触发接口IEnumerable的实验程序&quot; Click=&quot;TryEnumerable&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;                        &#10;                            &lt;!-- 一个使用线程池特性BackgroundWorkder执行的进度条处理 --&gt;&#10;                            &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;ProgressBar x:Name=&quot;psb&quot; Style=&quot;{DynamicResource ProgressBarStyle1}&quot;&gt;&lt;/ProgressBar&gt;&#10;                                    &lt;Button Content=&quot;开始异步处理&quot; Click=&quot;StartBackgroundProgress&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;                                    &lt;Button Content=&quot;停止异步处理&quot; Click=&quot;StopBackgroundProgress&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;Border Grid.Row=&quot;2&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label x:Name=&quot;time_span_second&quot;&gt;0&lt;/Label&gt;&#10;                                    &lt;Button Content=&quot;开始计时&quot; x:Name=&quot;Time_Span_Button&quot; Click=&quot;TimeTick&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                        &lt;/Grid&gt;&#10;&#10;                    &lt;/Grid&gt;&#10;                &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="34774:37011" ph="&lt;&lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;200&quot;&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt; &lt;Grid Grid.Column=&quot;0&quot;&gt;&#10;                        &lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!----&gt;&#10;                            &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Button Content=&quot;触发接口IEnumerable的实验程序&quot; Click=&quot;TryEnumerable&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;                        &#10;                            &lt;!-- 一个使用线程池特性BackgroundWorkder执行的进度条处理 --&gt;&#10;                            &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;ProgressBar x:Name=&quot;psb&quot; Style=&quot;{DynamicResource ProgressBarStyle1}&quot;&gt;&lt;/ProgressBar&gt;&#10;                                    &lt;Button Content=&quot;开始异步处理&quot; Click=&quot;StartBackgroundProgress&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;                                    &lt;Button Content=&quot;停止异步处理&quot; Click=&quot;StopBackgroundProgress&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;Border Grid.Row=&quot;2&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label x:Name=&quot;time_span_second&quot;&gt;0&lt;/Label&gt;&#10;                                    &lt;Button Content=&quot;开始计时&quot; x:Name=&quot;Time_Span_Button&quot; Click=&quot;TimeTick&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                        &lt;/Grid&gt;&#10;&#10;                    &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="34801:35131" ph="&lt;&lt;ColumnDefinition Width=&quot;200&quot;&gt;&lt;/ColumnDefinition&gt; &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt; &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt; &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="35153:36987" ph="&lt;&lt;Grid&gt;&#10;                            &lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt;&#10;&#10;                            &lt;!----&gt;&#10;                            &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Button Content=&quot;触发接口IEnumerable的实验程序&quot; Click=&quot;TryEnumerable&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;                        &#10;                            &lt;!-- 一个使用线程池特性BackgroundWorkder执行的进度条处理 --&gt;&#10;                            &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;ProgressBar x:Name=&quot;psb&quot; Style=&quot;{DynamicResource ProgressBarStyle1}&quot;&gt;&lt;/ProgressBar&gt;&#10;                                    &lt;Button Content=&quot;开始异步处理&quot; Click=&quot;StartBackgroundProgress&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;                                    &lt;Button Content=&quot;停止异步处理&quot; Click=&quot;StopBackgroundProgress&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                            &lt;Border Grid.Row=&quot;2&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label x:Name=&quot;time_span_second&quot;&gt;0&lt;/Label&gt;&#10;                                    &lt;Button Content=&quot;开始计时&quot; x:Name=&quot;Time_Span_Button&quot; Click=&quot;TimeTick&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;&#10;&#10;                        &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="35200:36958" ph="&lt;&lt;Grid.RowDefinitions&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                                &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;/Grid.RowDefinitions&gt; &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Button Content=&quot;触发接口IEnumerable的实验程序&quot; Click=&quot;TryEnumerable&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt; &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;ProgressBar x:Name=&quot;psb&quot; Style=&quot;{DynamicResource ProgressBarStyle1}&quot;&gt;&lt;/ProgressBar&gt;&#10;                                    &lt;Button Content=&quot;开始异步处理&quot; Click=&quot;StartBackgroundProgress&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;                                    &lt;Button Content=&quot;停止异步处理&quot; Click=&quot;StopBackgroundProgress&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt; &lt;Border Grid.Row=&quot;2&quot;&gt;&#10;                                &lt;StackPanel&gt;&#10;                                    &lt;Label x:Name=&quot;time_span_second&quot;&gt;0&lt;/Label&gt;&#10;                                    &lt;Button Content=&quot;开始计时&quot; x:Name=&quot;Time_Span_Button&quot; Click=&quot;TimeTick&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;&#10;                            &lt;/Border&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="35235:35615" ph="&lt;&lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="35681:35938" ph="&lt;&lt;StackPanel&gt;&#10;                                    &lt;Button Content=&quot;触发接口IEnumerable的实验程序&quot; Click=&quot;TryEnumerable&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="35735:35900" ph="&lt;&lt;Button Content=&quot;触发接口IEnumerable的实验程序&quot; Click=&quot;TryEnumerable&quot;&gt;&lt;/Button&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="36064:36554" ph="&lt;&lt;StackPanel&gt;&#10;                                    &lt;ProgressBar x:Name=&quot;psb&quot; Style=&quot;{DynamicResource ProgressBarStyle1}&quot;&gt;&lt;/ProgressBar&gt;&#10;                                    &lt;Button Content=&quot;开始异步处理&quot; Click=&quot;StartBackgroundProgress&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt;&#10;                                    &lt;Button Content=&quot;停止异步处理&quot; Click=&quot;StopBackgroundProgress&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="36118:36516" ph="&lt;&lt;ProgressBar x:Name=&quot;psb&quot; Style=&quot;{DynamicResource ProgressBarStyle1}&quot;&gt;&lt;/ProgressBar&gt; &lt;Button Content=&quot;开始异步处理&quot; Click=&quot;StartBackgroundProgress&quot; Margin=&quot;0,10&quot;&gt;&lt;/Button&gt; &lt;Button Content=&quot;停止异步处理&quot; Click=&quot;StopBackgroundProgress&quot;&gt;&lt;/Button&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="36584:36925" ph="&lt;&lt;StackPanel&gt;&#10;                                    &lt;Label x:Name=&quot;time_span_second&quot;&gt;0&lt;/Label&gt;&#10;                                    &lt;Button Content=&quot;开始计时&quot; x:Name=&quot;Time_Span_Button&quot; Click=&quot;TimeTick&quot;&gt;&lt;/Button&gt;&#10;                                &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="36638:36887" ph="&lt;&lt;Label x:Name=&quot;time_span_second&quot;&gt;0&lt;/Label&gt; &lt;Button Content=&quot;开始计时&quot; x:Name=&quot;Time_Span_Button&quot; Click=&quot;TimeTick&quot;&gt;&lt;/Button&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="37060:38959" ph="&lt;&lt;Grid x:Name=&quot;Interface_Grid&quot;&gt;&#10;                    &lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;29&quot;&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition Width=&quot;171&quot;/&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt;&#10;&#10;                    &lt;Grid Grid.Column=&quot;0&quot; Grid.ColumnSpan=&quot;2&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEquatable:&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_1&quot;&gt;比较两个值—没有继承IEquatable时&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_2&quot;&gt;比较两个值—重载GetHashCode&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_3&quot;&gt;比较两个值—继承IEquatable&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_4&quot;&gt;用ICompare作为函数入参&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEnumerable&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartForeach_1&quot;&gt;开始迭代&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;                    &lt;/Grid&gt;&#10;&#10;                &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="37100:38934" ph="&lt;&lt;Grid.ColumnDefinitions&gt;&#10;                        &lt;ColumnDefinition Width=&quot;29&quot;&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition Width=&quot;171&quot;/&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                        &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;&#10;                    &lt;/Grid.ColumnDefinitions&gt; &lt;Grid Grid.Column=&quot;0&quot; Grid.ColumnSpan=&quot;2&quot;&gt;&#10;                        &lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt;&#10;&#10;                        &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEquatable:&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_1&quot;&gt;比较两个值—没有继承IEquatable时&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_2&quot;&gt;比较两个值—重载GetHashCode&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_3&quot;&gt;比较两个值—继承IEquatable&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_4&quot;&gt;用ICompare作为函数入参&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;&#10;                        &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEnumerable&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartForeach_1&quot;&gt;开始迭代&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;&#10;                    &lt;/Grid&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="37151:37536" ph="&lt;&lt;ColumnDefinition Width=&quot;29&quot;&gt;&lt;/ColumnDefinition&gt; &lt;ColumnDefinition Width=&quot;171&quot;/&gt; &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt; &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt; &lt;ColumnDefinition&gt;&lt;/ColumnDefinition&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="37558:38909" ph="&lt;&lt;Grid.RowDefinitions&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                            &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;&#10;                        &lt;/Grid.RowDefinitions&gt; &lt;Border Grid.Row=&quot;0&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEquatable:&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_1&quot;&gt;比较两个值—没有继承IEquatable时&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_2&quot;&gt;比较两个值—重载GetHashCode&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_3&quot;&gt;比较两个值—继承IEquatable&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_4&quot;&gt;用ICompare作为函数入参&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt; &lt;Border Grid.Row=&quot;1&quot;&gt;&#10;                            &lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEnumerable&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartForeach_1&quot;&gt;开始迭代&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;&#10;                        &lt;/Border&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="37625:37985" ph="&lt;&lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt; &lt;RowDefinition Height=&quot;200&quot;&gt;&lt;/RowDefinition&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="38011:38581" ph="&lt;&lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEquatable:&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_1&quot;&gt;比较两个值—没有继承IEquatable时&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_2&quot;&gt;比较两个值—重载GetHashCode&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_3&quot;&gt;比较两个值—继承IEquatable&lt;/Button&gt;&#10;                                &lt;Button Click=&quot;StartEquatable_4&quot;&gt;用ICompare作为函数入参&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="38061:38547" ph="&lt;&lt;Label&gt;IEquatable:&lt;/Label&gt; &lt;Button Click=&quot;StartEquatable_1&quot;&gt;比较两个值—没有继承IEquatable时&lt;/Button&gt; &lt;Button Click=&quot;StartEquatable_2&quot;&gt;比较两个值—重载GetHashCode&lt;/Button&gt; &lt;Button Click=&quot;StartEquatable_3&quot;&gt;比较两个值—继承IEquatable&lt;/Button&gt; &lt;Button Click=&quot;StartEquatable_4&quot;&gt;用ICompare作为函数入参&lt;/Button&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="38607:38881" ph="&lt;&lt;StackPanel&gt;&#10;                                &lt;Label&gt;IEnumerable&lt;/Label&gt;&#10;                                &lt;Button Click=&quot;StartForeach_1&quot;&gt;开始迭代&lt;/Button&gt;&#10;                            &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544952190280" expanded="true" signature="38657:38847" ph="&lt;&lt;Label&gt;IEnumerable&lt;/Label&gt; &lt;Button Click=&quot;StartForeach_1&quot;&gt;开始迭代&lt;/Button&gt;.../&gt;" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/WPF/UserControlTemplate/TreeViewComposite.xaml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="176">
          <caret line="11" column="14" selection-start-line="11" selection-start-column="14" selection-end-line="11" selection-end-column="14" />
          <folding>
            <marker date="1544975846082" expanded="true" signature="0:1132" ph="&lt;&lt;Grid&gt;&#10;        &lt;!-- 这是一个常规的属性结构 --&gt;&#10;        &lt;TreeView x:Name=&quot;tv_composite&quot;&gt;&#10;            &lt;TreeView.ItemTemplate&gt;&#10;                &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                    &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                        &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                    &lt;/StackPanel&gt;&#10;                &lt;/HierarchicalDataTemplate&gt;&#10;            &lt;/TreeView.ItemTemplate&gt;&#10;        &lt;/TreeView&gt;&#10;    &lt;/Grid&gt;.../&gt;" />
            <marker date="1544975846082" expanded="true" signature="575:1117" ph="&lt;&lt;TreeView x:Name=&quot;tv_composite&quot;&gt;&#10;            &lt;TreeView.ItemTemplate&gt;&#10;                &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                    &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                        &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                    &lt;/StackPanel&gt;&#10;                &lt;/HierarchicalDataTemplate&gt;&#10;            &lt;/TreeView.ItemTemplate&gt;&#10;        &lt;/TreeView&gt;.../&gt;" />
            <marker date="1544975846082" expanded="true" signature="619:1105" ph="&lt;&lt;TreeView.ItemTemplate&gt;&#10;                &lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                    &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                        &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                    &lt;/StackPanel&gt;&#10;                &lt;/HierarchicalDataTemplate&gt;&#10;            &lt;/TreeView.ItemTemplate&gt;.../&gt;" />
            <marker date="1544975846082" expanded="true" signature="664:1085" ph="&lt;&lt;HierarchicalDataTemplate DataType=&quot;{x:Type model:TreeViewComposite}&quot; ItemsSource=&quot;{Binding m_SubList}&quot; &gt;&#10;                    &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                        &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                    &lt;/StackPanel&gt;&#10;                &lt;/HierarchicalDataTemplate&gt;.../&gt;" />
            <marker date="1544975846082" expanded="true" signature="704:1048" ph="&lt;&lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;&#10;                        &lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;&#10;                    &lt;/StackPanel&gt;.../&gt;" />
            <marker date="1544975846082" expanded="true" signature="830:1004" ph="&lt;&lt;TextBlock VerticalAlignment=&quot;Center&quot; Text=&quot;{Binding m_ItemName}&quot;&gt;&lt;/TextBlock&gt;.../&gt;" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/WPF/MainWindow.xaml.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="170">
          <caret line="854" lean-forward="true" selection-start-line="854" selection-end-line="854" />
          <folding>
            <marker date="1544974951108" expanded="false" signature="6:607" ph="..." />
            <marker date="1544974951108" expanded="true" signature="622:43293" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="629:692" ph="/// MainWindow.xaml 的交互逻辑; ... " />
            <marker date="1544974951108" expanded="true" signature="737:43291" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="1770:1961" ph="/// RouteCommand的作用是; ... " />
            <marker date="1544974951108" expanded="true" signature="2116:3455" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="3264:3329" ph="/* WPF中的ItemsSource是可以使用LINQ进行查询筛选的; ... */" />
            <marker date="1544974951108" expanded="false" signature="3473:4755" ph="纯前端操作" />
            <marker date="1544974951108" expanded="true" signature="3495:3559" ph="/// WPF可以实现简单的绘图功能; ... " />
            <marker date="1544974951108" expanded="true" signature="3594:4049" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="4058:4204" ph="/// 当ListBox控件选择发生变化时; ... " />
            <marker date="1544974951108" expanded="true" signature="4297:4408" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="4479:4736" ph="{...}" />
            <marker date="1544974951108" expanded="false" signature="4765:8831" ph="Binding的基本使用方法" />
            <marker date="1544974951108" expanded="true" signature="4796:4861" ph="/// 有关于Binding的基础原理; ... " />
            <marker date="1544974951108" expanded="true" signature="4905:5565" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="4928:5013" ph="/* Binding可以形象比喻成UI元素和逻辑对象之间的高速公路\桥梁; ... */" />
            <marker date="1544974951108" expanded="true" signature="5575:5639" ph="/// 初始化实验数据Persons; ... " />
            <marker date="1544974951108" expanded="true" signature="5674:6239" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="6039:6202" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="6081:6188" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="6249:6311" ph="/// WPF控件关联类型中的属性 ... " />
            <marker date="1544974951108" expanded="true" signature="6352:7181" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="6375:6517" ph="/* _____________________________________________________________以下是使用Binding关联XAML和C##属性的实验 ... */" />
            <marker date="1544974951108" expanded="true" signature="7055:7169" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="7191:7253" ph="/// WPF控件关联类型中的方法 ... " />
            <marker date="1544974951108" expanded="true" signature="7294:8812" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="7317:7457" ph="/* _____________________________________________________________以下是使用Binding关联XAML和C##命令的实验 ... */" />
            <marker date="1544974951108" expanded="true" signature="7817:8175" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="8307:8665" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="8756:8800" ph="{...}" />
            <marker date="1544974951108" expanded="false" signature="8849:29518" ph="有关DagaGrid控件的使用方法" />
            <marker date="1544974951108" expanded="true" signature="8883:8974" ph="/// DagaGrid最简单的用法，将一个容器中的内容添加到一个DataGrid控件当中; ... " />
            <marker date="1544974951108" expanded="true" signature="9023:9153" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="9163:9231" ph="/// 向DataGrid当中添加对应的事件; ... " />
            <marker date="1544974951108" expanded="true" signature="9283:10894" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="10904:11045" ph="/// 事件一：当单元给被编辑时; ... " />
            <marker date="1544974951108" expanded="true" signature="11155:11510" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="11520:11663" ph="/// 事件二：单元格选择出现变化时; ... " />
            <marker date="1544974951108" expanded="true" signature="11771:11884" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="11894:12049" ph="/// 事件三：DataGrid表格点击单元格获取焦点的事件; ... " />
            <marker date="1544974951108" expanded="true" signature="12139:12253" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="12263:12406" ph="/// 事件四：鼠标经过这个单元格时; ... " />
            <marker date="1544974951108" expanded="true" signature="12496:13450" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="12522:13300" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="12590:13286" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="13100:13268" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="13332:13427" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="13460:13633" ph="/// 事件五：鼠标选中事件; ... " />
            <marker date="1544974951108" expanded="true" signature="13729:14602" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="13755:14491" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="13860:14477" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="14146:14459" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="14238:14437" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="14524:14591" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="14612:14792" ph="/// 事件六：鼠标左键按下的事件; ... " />
            <marker date="1544974951108" expanded="true" signature="14898:15221" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="15239:15435" ph="/// 事件七：鼠标进入整个DataGrid表格后就会触发; ... " />
            <marker date="1544974951108" expanded="true" signature="15547:15843" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="15853:15996" ph="/// 事件八：当单元格被双击的时候; ... " />
            <marker date="1544974951108" expanded="true" signature="16099:16413" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="16423:16560" ph="/// 接收鼠标拖拽事件; ... " />
            <marker date="1544974951108" expanded="true" signature="16635:16873" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="16883:17011" ph="///  ... " />
            <marker date="1544974951108" expanded="true" signature="17087:17258" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="17276:17354" ph="/// 同一个数据源可以显示到两个不同的DataGrid控件当中; ... " />
            <marker date="1544974951108" expanded="true" signature="17399:17554" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="17564:17668" ph="/// 为一个表格动态添加列以及内容; ... " />
            <marker date="1544974951108" expanded="true" signature="17718:26946" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="17741:17882" ph="/* ________________________________________________________________________________以下是通过简单的生成 ... */" />
            <marker date="1544974951108" expanded="true" signature="17923:18435" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="18010:18120" ph="/* 向单元格内动态添加属性及其; ... */" />
            <marker date="1544974951108" expanded="true" signature="18515:18791" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="19471:26850" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="19601:20105" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="19802:19952" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="20137:20641" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="20338:20488" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="20673:21178" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="20875:21025" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="21296:26835" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="21575:21722" ph="/* ______________________________________________________________________________________________________________ ... */" />
            <marker date="1544974951108" expanded="true" signature="21771:26817" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="21885:23321" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="23422:25994" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="23729:24106" ph="/* 当单元格被编辑的时候; ... */" />
            <marker date="1544974951108" expanded="true" signature="26035:26394" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="26435:26794" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="26964:27126" ph="/// 普通只显示字符类型的DynamicDataGrid的正在被编辑事件; ... " />
            <marker date="1544974951108" expanded="true" signature="27233:27663" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="27673:27815" ph="/// 当单元格失去鼠标焦点的时候; ... " />
            <marker date="1544974951108" expanded="true" signature="27914:27947" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="27957:28098" ph="/// DataGrid的模拟数据 ... " />
            <marker date="1544974951108" expanded="true" signature="28166:29499" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="28397:29169" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="28470:29155" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="28725:29071" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="29257:29487" ph="{...}" />
            <marker date="1544974951108" expanded="false" signature="29528:31224" ph="有关Treeview以及解析XML" />
            <marker date="1544974951108" expanded="true" signature="29622:30100" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="29795:29886" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="30004:30090" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="30172:30356" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="30366:30444" ph="/// 构建一个组合模式的树形结构，并显示在Treeview当中; ... " />
            <marker date="1544974951108" expanded="true" signature="30489:31196" ph="{...}" />
            <marker date="1544974951108" expanded="false" signature="31234:35646" ph="有关路由事件、依赖属性和命令" />
            <marker date="1544974951108" expanded="true" signature="31265:31332" ph="/// 有关路由事件和依赖属性在这里初始化; ... " />
            <marker date="1544974951108" expanded="true" signature="31384:33181" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="31407:31487" ph="/* 路由事件，在最外层的Grid可以收到内层Button发出的Click事件; ... */" />
            <marker date="1544974951108" expanded="true" signature="31622:32712" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="31896:31962" ph="/* ————————依赖属性————————————; ... */" />
            <marker date="1544974951108" expanded="true" signature="32522:32584" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="32892:33168" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="32923:33154" ph="/* Console.WriteLine(&quot;The &quot; + sender.GetType() + &quot; Receive a Button Event and the Button is &quot; + (e.OriginalSource ... */" />
            <marker date="1544974951108" expanded="true" signature="33191:33340" ph="/// 初始化命令; ... " />
            <marker date="1544974951108" expanded="true" signature="33387:34715" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="33729:34025" ph="/* this.CommandButton.CommandTarget = this.CommandTextBox2; ... */" />
            <marker date="1544974951108" expanded="true" signature="34725:34992" ph="/// 这个附加在Button所在控件树之上的StackPanel控件上的监听线程; ... " />
            <marker date="1544974951108" expanded="true" signature="35071:35334" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="35145:35211" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="35228:35293" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="35410:35627" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="35465:35548" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="35656:35784" ph="///  ... " />
            <marker date="1544974951108" expanded="true" signature="35853:35937" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="35947:36093" ph="/// 一个进度条，使用线程池进行后台处理; ... " />
            <marker date="1544974951108" expanded="true" signature="36172:36881" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="36891:37087" ph="/// BackgroundWorker后台处理的入口，通过调用RunWorkerAsync进入; ... " />
            <marker date="1544974951108" expanded="true" signature="37180:37665" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="37322:37654" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="37540:37640" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="37675:37837" ph="/// BackgroundWorker后台处理发生变化的时候，调用该函数; ... " />
            <marker date="1544974951108" expanded="true" signature="37948:38019" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="38029:38178" ph="/// BackgroundWorker取消事件; ... " />
            <marker date="1544974951108" expanded="true" signature="38256:38315" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="38325:38477" ph="/// 当BackgroundWorker后台处理完成后 ... " />
            <marker date="1544974951108" expanded="true" signature="38572:38645" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="38718:39254" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="39046:39136" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="39153:39244" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="39327:39970" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="39762:39852" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="39869:39960" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="40043:40564" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="40356:40446" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="40463:40554" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="40638:41131" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="41202:41657" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="41555:41647" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="41723:41939" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="42006:42138" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="42203:42813" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="42284:42472" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="42536:42803" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="42886:42993" ph="{...}" />
            <marker date="1544974951108" expanded="true" signature="43065:43284" ph="{...}" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>