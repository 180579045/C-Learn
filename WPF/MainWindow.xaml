<Window x:Class="WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF"
        xmlns:vm="clr-namespace:WPF.ViewModel"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1000" WindowStartupLocation="CenterScreen">

    <Window.Resources>

        <!-- 控件模板 -->
        <ControlTemplate x:Key="cTmp">
            <StackPanel>
                <TextBox x:Name="textBox1" Margin="6"/>
                <TextBox x:Name="textBox2" Margin="6,0"/>
                <TextBox x:Name="textBox3" Margin="6"/>
            </StackPanel>
        </ControlTemplate>

        <sys:String x:Key="BindingStatic">关联静态资源以及圆角Style</sys:String>

    </Window.Resources>



    <Grid>
        <TabControl>
            <!-- 主要用来展示纯前端的处理 -->
            <TabItem Header="纯前端处理">
                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="300"></ColumnDefinition>
                        <ColumnDefinition Width="300"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="0" Margin="10,0,10,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="100"></RowDefinition>
                                <RowDefinition Height="150"></RowDefinition>
                                <RowDefinition Height="120"></RowDefinition>
                                <RowDefinition Height="100"></RowDefinition>
                                <RowDefinition Height="100"></RowDefinition>
                                <RowDefinition Height="100"></RowDefinition>
                            </Grid.RowDefinitions>

                            <!-- 使用所谓的CSS和Javascript -->
                            <Border Grid.Row="0" BorderBrush="Black" BorderThickness="1">
                                <StackPanel  Margin="3,3,3,3">
                                    <Label>Style的用法:</Label>
                                    <Button Style="{StaticResource BlueButton}" Margin="0,5">蓝色按钮</Button>
                                    <Button Style="{StaticResource ButtonTrigger}">蓝色按钮和触发事件</Button>
                                </StackPanel>
                            </Border>

                            <Border Grid.Row="1" BorderBrush="Black" BorderThickness="1" Margin="0,5">
                                <StackPanel  Margin="3,3,3,3">
                                    <Label>用WPF画图</Label>
                                    <Canvas x:Name="canvas1"></Canvas>
                                </StackPanel>
                            </Border>

                            <Border Grid.Row="2" BorderBrush="Black" BorderThickness="1" Margin="0,5">
                                <StackPanel>
                                    <Label>在前端直接用ControlTemplate组合用户控件</Label>
                                    <UserControl x:Name="uc" Template="{StaticResource cTmp}" Grid.Row="2"/>
                                </StackPanel>
                            </Border>


                            <TextBox x:Name="tb" Text="{Binding Path=., Source={StaticResource ResourceKey=BindingStatic}}"  Style="{StaticResource tbstyle}" Grid.Row="3"/>

                            <Border  Grid.Row="4" BorderBrush="Black" BorderThickness="1" Margin="0,5">
                                <StackPanel>
                                    <Label>控件绑定前端元素：</Label>
                                    <TextBox Text="{Binding ElementName=slider1, Path=Value, Mode=OneWay}"></TextBox>
                                    <Slider x:Name="slider1" Maximum="20"></Slider>
                                </StackPanel>
                            </Border>


                        </Grid>

                    </DockPanel>

                    <DockPanel Grid.Column="1">



                    </DockPanel>

                </Grid>
            </TabItem>

            <TabItem Header="前后台数据通信">

                <Grid>

                    <!-- 总宽度1000 -->
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="500"/>
                        <ColumnDefinition Width="300"/>
                    </Grid.ColumnDefinitions>

                    <!-- 总高度800 -->
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="100"/>
                            <RowDefinition Height="150"/>
                            <RowDefinition Height="120"/>
                            <RowDefinition Height="150"/>
                        </Grid.RowDefinitions>

                        <!-- 在此使用DataContext指定一个ClassA的一个实例，
                        并且在该区域内的所有控件都能访问这个类实例的属性 -->
                        <Border  BorderBrush="Black" BorderThickness="1" Grid.Row="0" Margin="5,5,5,5">
                            <Border.DataContext>
                                <local:ClassA x:Name="class_a"></local:ClassA>
                            </Border.DataContext>
                            
                            <TreeView Name="tree">
                                <TreeViewItem Header="{Binding m_sA}">
                                    <TreeViewItem Header="{Binding m_A}"></TreeViewItem>
                                    <TreeViewItem Header="{Binding m_B}"></TreeViewItem>
                                </TreeViewItem>
                            </TreeView>
                            
                        </Border>

                        <!-- 显示下边ListBox选择的PersonID -->
                        <Border BorderBrush="Black" BorderThickness="1" Grid.Row="1" Margin="5,5,5,5">
                            <StackPanel Margin="3,3,3,3">
                                <Label>绑定ItemControl类型的控件</Label>
                                <TextBox x:Name="PersonID"></TextBox>
                                <ListBox x:Name="PersonList" Margin="0,5"></ListBox>
                            </StackPanel>
                        </Border>

                        <!-- 一个List<Person>绑定一个Listbox -->
                        <Border BorderBrush="Black" BorderThickness="1" Grid.Row="2" Margin="5,5,5,5" >
                            <StackPanel>
                                <!-- 每个控件都有自己的DataContext
                                     DataContext可以指定为某一个区域 
                                -->
                                <StackPanel.DataContext>
                                    <local:Student x:Name="stus"></local:Student>
                                </StackPanel.DataContext>
                                <ListBox x:Name="StuList" ItemsSource="{Binding m_StuList}" DisplayMemberPath="m_Name"></ListBox>
                            </StackPanel>
                        </Border>

                        <!-- 一个实时更新的输入框，命令绑定的例子 -->
                        <Border BorderBrush="Black" BorderThickness="1" Grid.Row="3" Margin="5,5,5,5" >
                            <StackPanel>
                                <TextBox x:Name="CalcX"></TextBox>
                                <TextBox x:Name="CalcY"></TextBox>
                                <TextBox x:Name="CalcRes"></TextBox>
                            </StackPanel>
                        </Border>
                        
                    </Grid>

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="100"/>
                            <RowDefinition Height="150"/>
                            <RowDefinition Height="120"/>
                            <RowDefinition Height="150"/>
                        </Grid.RowDefinitions>

                        <Border BorderBrush="Black" BorderThickness="1" Grid.Row="0" Margin="5,5,5,5">
                            <StackPanel>
                                <DataGrid x:Name="MessageDataGrid"></DataGrid>
                                <Button Content="ChangeColum" Click="ChangeCol_Click" ></Button>
                            </StackPanel>
                            
                        </Border>
                    </Grid>


                </Grid>



            </TabItem>


        </TabControl>


    </Grid>
</Window>
